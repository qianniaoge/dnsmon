{"version":3,"file":"dnsmon-dist.js","sources":["dnsmon/connector/atlas/CacheConnectorAtlas.js","dnsmon/lib/atlas.traceroute.js","dnsmon/lib/libs-dist.js","dnsmon/lib/dateFormat.js","dnsmon/environment/utils.js","dnsmon/environment/languages/lang-en.js","dnsmon/lib/jquery-libs-amd.js","dnsmon/environment/ParamsManager.js","dnsmon/lib/d3.v3.amd.js","dnsmon/view/TemplateManagerView.js","dnsmon/view/TimeOverviewView.js","dnsmon/view/svg/SvgChartView.js","dnsmon/view/svg/SvgContainerView.js","dnsmon/view/PopUpView.js","dnsmon/view/BreadcrumbsView.js","dnsmon/view/FullScreenView.js","dnsmon/view/ControlPanelView.js","dnsmon/controller/GesturesManager.js","dnsmon/controller/TimeController.js","dnsmon/view/svg/SvgTimeAxisView.js","dnsmon/view/svg/SvgOrdinalAxisView.js","dnsmon/view/MainView.js","dnsmon/model/Cell.js","dnsmon/model/Row.js","dnsmon/connector/atlas/RestConnectorAtlas.js","dnsmon/connector/atlas/ErrorsHandlerConnectorAtlas.js","dnsmon/connector/atlas/IsolationLevelConnectorAtlas.js","dnsmon/connector/AggregationLevelConnector.js","dnsmon/connector/AntiFloodConnector.js","dnsmon/connector/log/LogRestConnector.js","dnsmon/connector/ConnectorFacade.js","dnsmon/session/SessionManager.js","dnsmon/environment/HistoryManager.js","dnsmon/dnsmon-loader.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:38 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine(\n    'dnsmon.connector.atlas.cache',[\n        \"dnsmon.env.utils\",\n        \"dnsmon.connector.atlas.error-handler\"\n    ],\n    function(utils, Connector){\n\n        /**\n         * CacheConnectorAtlas is the cache level dedicated to the atlas data-api for DNSMON.\n         * It provides a bottom-up incremental cache and top-down decremental queries.\n         *\n         * @class CacheConnectorAtlas\n         * @constructor\n         * @module connector.Atlas\n         */\n\n        var CacheConnectorAtlas = function(env){\n            var connector, dataNomenclatureMapping, minimumResultDate, maximumResultDate;\n\n            connector = new Connector(env);\n\n            env.totalSavedBytes = 0;\n            env.stats = \"\";\n\n            // The map declaring the low-level data nomenclature\n            dataNomenclatureMapping = {\n                startTime: \"start_time\",\n                endTime: \"end_time\",\n                aggregationLevel: \"aggregation\",\n                probesList: \"probes\",\n                serversList: \"servers\",\n                aggregationLevels: \"aggregation_levels\",\n                measurementStartTime: \"earliest_available\",\n                measurementEndTime: \"latest_available\",\n                aggregationLabel: \"aggregation_label\",\n                nativeAvailable: \"native_available\",\n\n                server: {\n                    id: \"id\",\n                    label: \"label\",\n                    group: \"grouping\",\n                    resultsList: \"results\",\n                    ipVersion: \"ip_version\",\n                    description: \"description\"\n                },\n\n                probe: {\n                    id: \"id\",\n                    label: \"label\",\n                    group: \"grouping\",\n                    resultsList: \"results\",\n                    description: \"description\"\n                },\n\n                result: {\n                    respondingTime: \"rtt50\",\n                    packetSent: \"queries\",\n                    packetReceived: \"replies\",\n                    time: \"time\"\n                }\n            };\n\n\n            // Initialise the cache\n            this.cache = {\n                data: null,\n                params: null,\n                aggregationLevel: null\n            };\n\n\n            /**\n             * It is strongly related to a particular JSON format.\n             * From top to bottom: tries to reduce the amount of data requested based on the available data in cache.\n             * From bottom to top: enrich the retrieved subset of data with the data already in cache.\n             *\n             * @method retrieveData\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function(params, callback, context){\n                if (env.localCacheActive && this.cache.data){ // Is the cache active and available\n\n                    if (this._isCacheFilteredServerSide(params)) { // The server side is computing the diff (e.g. because the client doesn't know the time window that will be returned)\n\n                        //this._composeQueryOnUpdate(params, callback, context); // To be tested\n\n                    }else if (this._isCacheEnough(params)){ // The whole query is in cache\n\n                        utils.log(\"Query in cache\", env.debugMode);\n                        utils.log(params);\n                        this._composeQueryOnCache(params, callback, context);\n\n                    }else if (this._isCachePartiallyValid(params)){ // A portion of the query is in the cache\n\n                        utils.log(\"Query partially in cache\", env.debugMode);\n                        this._retrieveQuerySubset(params, callback, context);\n\n                    }else{\n\n                        this._retrieveWithoutCache(params, callback, context); // The cache is active and available but not related to the actual query\n\n                    }\n\n                }else{\n\n                    this._retrieveWithoutCache(params, callback, context); // The cache is not active or empty\n\n                }\n\n            };\n\n\n            /**\n             * This method retrieves from the data-api a portion of the query.\n             * It describes the available data in cache and the data-api provides the remaining parts\n             *\n             * @method _composeQueryOnUpdate\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._composeQueryOnUpdate = function(params, callback, context){\n                var totalBytes, savedBytes;\n\n                connector.retrieveData(params, function(data){\n\n                    // Set the time boundaries retrieved from the server\n                    params.startTime = data[dataNomenclatureMapping.startTime];\n                    params.endTime = data[dataNomenclatureMapping.endTime];\n\n                    data = this._mergeData(params, this.cache.data, data);\n                    data = this._filterData(params, data);\n\n                    if (env.debugMode){\n                        totalBytes = utils.objectSize(data);\n                        savedBytes = totalBytes - env.lastDownloadBytes;\n                        env.totalSavedBytes += savedBytes;\n                        env.stats += \"t\" + totalBytes + \"s\" + savedBytes + \",\";\n                        utils.log('Retrieved bytes: ' + env.lastDownloadBytes + ' Total bytes: ' + totalBytes + ' Saved bytes: ' +  savedBytes, env.debugMode);\n                        utils.log('Total bytes saved until now: ' + env.totalSavedBytes, env.debugMode);\n                    }\n\n                    this._updateCache(params, data);\n\n                    callback.call(context, data);\n\n                }, this);\n            };\n\n\n            /**\n             * This method checks if the data-api should filter the data or not.\n             *\n             * @method _isCacheFilteredServerSide\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {Boolean} True if the data-api should filter the data\n             */\n\n            this._isCacheFilteredServerSide = function(params){\n                return (\n                    params.startTime == null &&\n                    params.endTime == null &&\n                    params.timeWindow != null &&\n                    params.cutFrom != null\n                    );\n            };\n\n\n            /**\n             * This method answers to the request by filtering the data in cache.\n             * It usable only when the whole query is in cache.\n             *\n             * @method _composeQueryOnCache\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the composed data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._composeQueryOnCache = function(params, callback, context){\n                var filteredCacheData, totalBytes, savedBytes;\n\n                filteredCacheData = this._filterData(params, this.cache.data);\n                this._updateCache(params, filteredCacheData);\n\n                if (env.debugMode){\n                    totalBytes = utils.objectSize(filteredCacheData);\n                    savedBytes = totalBytes;\n                    env.totalSavedBytes += savedBytes;\n                    env.stats += \"t\" + totalBytes + \"s\" + savedBytes + \",\";\n                    utils.log('Retrieved bytes: 0 Total bytes: ' + totalBytes + ' Saved bytes: ' +  savedBytes, env.debugMode);\n                    utils.log('Total bytes saved until now: ' + env.totalSavedBytes, env.debugMode);\n                }\n\n                callback.call(context, this.cache.data);\n            };\n\n\n            /**\n             * This method answers to the request by composing the answer from the cache and the server.\n             * It computes the data not available in cache and asks to the server for it.\n             *\n             * @method _retrieveQuerySubset\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the composed data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._retrieveQuerySubset = function(params, callback, context){\n                var subsetParams, totalBytes, savedBytes, newAggregationLevels, oldAggregationLevels;\n\n                subsetParams = this._getParamsSubset(this.cache.params, params);\n\n                subsetParams.aggregationLevel = env.aggregationLevel; // Force the aggregation level\n\n                connector.retrieveData(subsetParams, function(data){\n\n                    oldAggregationLevels = this.cache.data[dataNomenclatureMapping.aggregationLevels];\n                    newAggregationLevels = data[dataNomenclatureMapping.aggregationLevels];\n\n                    if (newAggregationLevels.length != oldAggregationLevels.length || !utils.containsAll(newAggregationLevels, oldAggregationLevels)) { // If the aggregations list changes\n\n                        this._retrieveWithoutCache(params, callback, context);\n\n                    }else{\n\n                        data = this._mergeData(params, this.cache.data, data);\n                        data = this._filterData(params, data);\n\n                        if (env.debugMode) {\n                            totalBytes = utils.objectSize(data);\n                            savedBytes = totalBytes - env.lastDownloadBytes;\n                            env.totalSavedBytes += savedBytes;\n                            env.stats += \"t\" + totalBytes + \"s\" + savedBytes + \",\";\n                            utils.log('Retrieved bytes: ' + env.lastDownloadBytes + ' Total bytes: ' + totalBytes + ' Saved bytes: ' + savedBytes, env.debugMode);\n                            utils.log('Total bytes saved until now: ' + env.totalSavedBytes, env.debugMode);\n                        }\n\n                        this._updateCache(params, data);\n\n                        callback.call(context, data);\n                    }\n\n                }, this);\n\n            };\n\n\n            /**\n             * This method computes the difference between two parameters vector\n             *\n             * @method _getParamsSubset\n             * @private\n             * @param {Object} oldParams The old parameters vector\n             * @param {Object} newParams The new parameters vector\n             * @return {Object} The resulting parameters vector\n             */\n\n            this._getParamsSubset = function(oldParams, newParams){\n                var params, timeDiff;\n\n                params = utils.lightClone(newParams); // Clone the parameters vector\n\n                //params.selectedRows = this._getRowsDiff(oldParams.selectedRows, newParams.selectedRows); // Get the new rows not included in the previous query\n\n                timeDiff = this._getTimeDiff(this.cache.data[dataNomenclatureMapping.startTime], this.cache.data[dataNomenclatureMapping.endTime], newParams.startTime, newParams.endTime); // Get the diff in time boundaries\n\n                params.startTime = timeDiff.startTime; // Set the new time boundaries\n                params.endTime = timeDiff.endTime;\n\n                return params;\n            };\n\n\n            /**\n             * This method computes the difference between two time windows\n             *\n             * @method _getTimeDiff\n             * @private\n             * @param {Date} oldStartTime The old start date\n             * @param {Date} oldEndTime The old end date\n             * @param {Date} newStartTime The new start date\n             * @param {Date} newEndTime The new end date\n             * @return {Object} The computed time window (composed of startTime and endTime)\n             */\n\n            this._getTimeDiff = function(oldStartTime, oldEndTime, newStartTime, newEndTime){\n                var startTime, endTime, consistencyOffset;\n\n                consistencyOffset = env.aggregationLevel || env.samplingFrequency;\n\n                if (newStartTime < oldStartTime){\n\n                    startTime = newStartTime;\n                    endTime = oldStartTime + consistencyOffset;\n\n                }else if (newEndTime > oldEndTime){\n\n                    startTime = oldEndTime - consistencyOffset;\n                    endTime = newEndTime;\n\n                }\n\n                return {startTime: startTime, endTime: endTime};\n            };\n\n\n            /**\n             * This method checks if the actual cache is partially valid or not.\n             *\n             * @method _isCachePartiallyValid\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {Boolean} True if the actual cache is partially valid\n             */\n\n            this._isCachePartiallyValid = function(params){\n                var oldParams, oldRows, newRows;\n\n                oldParams = this.cache.params;\n\n                oldRows = utils.split(oldParams.selectedRows, ',', true);\n                newRows = utils.split(params.selectedRows, ',', true);\n\n                return (\n                    params.startTime != null &&\n                    params.endTime != null &&\n                    this._isSameTarget(params) && // Same target\n                    this.cache.aggregationLevel == env.aggregationLevel && // Check the aggregation level\n\n                    // Same rows\n                    oldRows.length == newRows.length &&\n                    this._containsRows(oldRows, newRows) &&\n\n                    (\n                        (params.startTime >= oldParams.startTime  && params.startTime <= oldParams.endTime) || // Different time but partially valid\n                        (params.endTime >= oldParams.startTime  && params.endTime <= oldParams.endTime)\n                        )\n                    );\n            };\n\n\n            /**\n             * This method updates the cache\n             *\n             * @method _updateCache\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} data The blob of data\n             */\n\n            this._updateCache = function(params, data){\n\n\n                this.cache = {\n                    data: data,\n                    params: utils.lightClone(params),\n                    aggregationLevel: env.aggregationLevel\n                };\n\n            };\n\n\n            /**\n             * This method checks if a new row selection contains the old rows selected.\n             *\n             * @method _containsRows\n             * @private\n             * @param {Object} oldRowsSelection The old vector of selected rows\n             * @param {Object} newRowsSelection The new vector of selected rows\n             * @return {Boolean} True if the new row selection contains the old rows selected\n             */\n\n            this._containsRows = function(oldRowsSelection, newRowsSelection){\n\n                return oldRowsSelection.length == 0 || (newRowsSelection.length != 0 && newRowsSelection.length <= oldRowsSelection.length && utils.containsAll(oldRowsSelection, newRowsSelection));\n\n            };\n\n\n            /**\n             * This method rely on the layers below to answer the query\n             *\n             * @method _retrieveWithoutCache\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this._retrieveWithoutCache = function(params, callback, context){\n\n                connector.retrieveData(params, function(data){\n\n                    this._updateCache(params, data);\n\n                    utils.log('Retrieved bytes: ' + env.lastDownloadBytes, env.debugMode);\n                    callback.call(context, data);\n                }, this);\n\n            };\n\n\n            /**\n             * This method checks if the actual cache is completely valid or not.\n             *\n             * @method _isCacheEnough\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {Boolean} True if the actual cache is completely valid\n             */\n\n            this._isCacheEnough = function(params){\n                var oldParams;\n\n                oldParams = this.cache.params;\n\n                return (\n                    params.startTime != null &&\n                    params.endTime != null &&\n                    this._isSameTarget(params) &&\n                    this.cache.aggregationLevel == env.aggregationLevel &&\n                    this._containsRows(utils.split(oldParams.selectedRows, ',', true), utils.split(params.selectedRows, ',', true)) &&\n                    oldParams.startTime <= params.startTime &&\n                    oldParams.endTime >= params.endTime\n                    );\n            };\n\n\n            /**\n             * This method filters the data in order to satisfy the actual parameters\n             *\n             * @method _filterData\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} data The blob of data\n             * @return {Object} The filtered data\n             */\n\n            this._filterData = function(params, data){\n                minimumResultDate = null;\n                maximumResultDate = null;\n\n                this._filterRows(params, data);\n\n                // Updates the composed JSON with the actual start/end dates\n\n                if (env.aggregationLevel != 0) {\n                    data[dataNomenclatureMapping.startTime] = minimumResultDate; //( minimumResultDate >= params.startTime) ? params.startTime : minimumResultDate;\n                    data[dataNomenclatureMapping.endTime] = maximumResultDate; // ( maximumResultDate + (env.aggregationLevel)  <= params.endTime) ? params.endTime : maximumResultDate;\n                }else{\n                    data[dataNomenclatureMapping.startTime] = params.startTime;\n                    data[dataNomenclatureMapping.endTime] = params.endTime;\n                }\n\n                return data;\n            };\n\n\n            /**\n             * This method filters the rows on a blob of data in order to satisfy a vector of parameters\n             *\n             * @method _filterRows\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Object} data The blob of data\n             */\n\n            this._filterRows = function(params, data){\n                var rows, newResults, row, rowId, selectedRows, rowsListNomenclature;\n\n                newResults = [];\n                selectedRows = utils.split(params.selectedRows, ',', true);\n                rowsListNomenclature = this._getRowsListNomenclature(params);\n                rows = data[rowsListNomenclature];\n\n                for (var n=0,length=rows.length; n<length; n++){\n                    row = rows[n];\n\n                    rowId = '' + row[this._getRowNomenclature(params).id]; // Is a string\n\n                    if (selectedRows.length == 0 || utils.indexOf(rowId, selectedRows) != -1){\n                        newResults.push(row);\n\n                        this._filterResults(params, row);\n                    } else {\n                        // Force GC\n//                        delete data[rowsListNomenclature][n];\n                    }\n                }\n\n                data[rowsListNomenclature] = newResults; //Replace the filtered data\n            };\n\n\n            /**\n             * This method filters the results in a row in order to satisfy a vector of parameters\n             *\n             * @method _filterRows\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Object} row A row (a group of results)\n             */\n\n            this._filterResults = function(params, row){\n                var result, newResults, results, rowNomenclature, maxResultTime;\n\n                newResults = [];\n                rowNomenclature = this._getRowNomenclature(params);\n                results = row[rowNomenclature.resultsList];\n\n                for (var n=0,length=results.length; n<length; n++){\n                    result = results[n];\n\n                    // Get the new time boundaries\n                    if (result.time < params.endTime && result.time >= params.startTime){\n                        maxResultTime = result.time + env.aggregationLevel;\n                        minimumResultDate = (result.time < minimumResultDate || !minimumResultDate) ? result.time : minimumResultDate;\n                        maximumResultDate = (maxResultTime > maximumResultDate || !maximumResultDate) ? maxResultTime : maximumResultDate;\n                        newResults.push(result);\n                    } else {\n                        // Force GC\n//                        delete row[rowNomenclature.resultsList][n];\n                    }\n\n                }\n\n                row[rowNomenclature.resultsList] = newResults; //Replace the filtered data\n            };\n\n\n            /**\n             * This method checks if the provided parameters are referring to the same target/measurement/contest.\n             *\n             * @method _isSameTarget\n             * @private\n             * @param {Object} newParams The new parameters vector\n             * @return {Boolean} True if is the same target/measurement/contest\n             */\n\n            this._isSameTarget = function(newParams){\n                var oldParams, importantParams, paramTmp;\n\n                oldParams = this.cache.params;\n                importantParams = [\"root\", \"group\", \"type\", \"ipVersion\", \"isTcp\"];\n\n\n                for (var n=0,length=importantParams.length; n<length; n++){\n                    paramTmp = importantParams[n];\n\n                    if (oldParams[paramTmp] != newParams[paramTmp]){\n                        return false;\n                    }\n                }\n\n                return true;\n            };\n\n\n            /**\n             * This method merges two blob of data\n             *\n             * @method _mergeData\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} oldData The old blob of data\n             * @param {Object} newData The new blob of data\n             * @return {Object} The merged blob of data\n             */\n\n            this._mergeData = function(params, oldData, newData){\n\n                return this._mergeRows(params, oldData, newData);\n\n            };\n\n\n            /**\n             * This support method merges the rows of two blob of data\n             *\n             * @method _mergeData\n             * @private\n             * @param {Object} params The new parameters vector\n             * @param {Object} oldData The old blob of data\n             * @param {Object} newData The new blob of data\n             * @return {Object} The merged blob of data\n             */\n\n            this._mergeRows = function(params, oldData, newData){\n                var dataRows, oldDataRows, row, rowId, oldRow, results, newResults, resultsListNomenclature, rowsListNomenclature;\n\n                rowsListNomenclature = this._getRowsListNomenclature(params);\n                dataRows = newData[rowsListNomenclature];\n                oldDataRows = oldData[rowsListNomenclature];\n\n\n                for (var n=0,length=dataRows.length; n<length; n++){\n                    row = dataRows[n];\n\n                    rowId = '' + row[this._getRowNomenclature(params).id];\n                    oldRow = this._getRow(params, oldData, rowId);\n\n                    if (!oldRow){\n\n                        oldDataRows.push(row);\n\n                    }else{\n                        resultsListNomenclature = this._getRowNomenclature(params).resultsList;\n                        results = oldRow[resultsListNomenclature];\n                        newResults = row[resultsListNomenclature];\n                        oldRow[resultsListNomenclature]  = results.concat(newResults);\n\n                    }\n\n                }\n\n                oldData[dataNomenclatureMapping.startTime] = Math.min(oldData[dataNomenclatureMapping.startTime], newData[dataNomenclatureMapping.startTime]);\n                oldData[dataNomenclatureMapping.endTime] = Math.max(oldData[dataNomenclatureMapping.endTime], newData[dataNomenclatureMapping.endTime]);\n\n                return oldData;\n            };\n\n\n            /**\n             * This method returns the nomenclature of a group for the given query type\n             *\n             * @method _getRowNomenclature\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {String} The nomenclature\n             */\n\n            this._getRowNomenclature = function(params){\n\n                switch (params.type){\n                    case \"zone-servers\":\n                        return dataNomenclatureMapping.server;\n                        break;\n\n                    case \"server-probes\":\n                        return dataNomenclatureMapping.probe;\n                        break;\n                }\n            };\n\n\n            /**\n             * This method returns the nomenclature of a list of groups for the given query type\n             *\n             * @method _getRowsListNomenclature\n             * @private\n             * @param {Object} params A parameters vector\n             * @return {String} The nomenclature\n             */\n\n            this._getRowsListNomenclature = function(params){\n\n                switch (params.type){\n                    case \"zone-servers\":\n                        return dataNomenclatureMapping.serversList;\n                        break;\n\n                    case \"server-probes\":\n                        return dataNomenclatureMapping.probesList;\n                        break;\n                }\n            };\n\n\n            /**\n             * This method retrieves a row from a blob of data\n             *\n             * @method _getRow\n             * @private\n             * @param {Object} params A parameters vector\n             * @param {Object} data A blob of data\n             * @param {String} id The if of a row\n             * @return {Object} A row or null\n             */\n\n            this._getRow = function(params, data, id){\n                var rows, row, rowId;\n\n                rows = data[this._getRowsListNomenclature(params)];\n                for (var n=0,length=rows.length; n<length; n++){\n                    row = rows[n];\n                    rowId = '' + row[this._getRowNomenclature(params).id];\n\n                    if (rowId == id){\n                        return row;\n                    }\n                }\n\n                return null;\n            };\n\n\n            /**\n             * Get the human readable version of the DNS response and use cache\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /**\n             * Get the closest traceroutes and use cache\n             *\n             * @method getClosestTraceroutes\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            };\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            };\n\n        };\n\n        return CacheConnectorAtlas;\n    });\n","function AtlasTraceroute(data) {\n    this.data = data;\n    this.reverseNames = data.reverse_names || {};\n\n    this.render = function() {\n        var output = [];\n        output.push(this.renderTimestamp(this.data.timestamp));\n        output.push(this.renderHeader(\n            this.data.dst_name, this.data.dst_addr, this.data.size));\n        for (var h=0; h < this.data.result.length; h++) {\n            var hop = this.data.result[h];\n            output.push(this.renderHop(hop));\n        }\n        return \"<div class='traceroute'>\" + output.join(\"\") + \"</div>\";\n    };\n\n    this.renderTimestring = function(timestamp) {\n        return timestamp;\n    };\n\n    this.renderTimestamp = function(timestamp) {\n        return \"<span class='traceroute-timestamp'>\" +\n            this.renderTimestring(timestamp) + \"</span>\";\n    };\n\n    this.renderHeader = function(dstName, dstAddr, packetSize) {\n        return \"<div class='traceroute-header'>traceroute to \" + dstName + \" (\" +\n            dstAddr + \"), \" + packetSize + \" byte packets</div>\";\n    };\n\n    this.renderHopNumber = function(hop) {\n        return \"<span class='traceroute-hop-number'>\" + hop + \"</span>\";\n    };\n\n    this.renderReply = function(reply, lastAddr) {\n        var output = [];\n        if (reply.x == \"*\") {\n            output.push(this.renderTimeout());\n        }\n        if (reply.hasOwnProperty(\"from\")) {\n            var addr = reply.from;\n            if (addr && addr != lastAddr) {\n                output.push(this.renderAddress(addr, this.reverseNames[addr]));\n            }\n        }\n\n        if (reply.hasOwnProperty(\"rtt\")) {\n            output.push(this.renderTime(reply.rtt));\n        }\n        if (reply.hasOwnProperty(\"err\")) {\n            output.push(this.renderError(reply.err));\n        }\n        return output.join(\" \");\n    };\n\n    this.renderHop = function(hop) {\n        var lastAddr = null;\n        var output = [];\n        output.push(this.renderHopNumber(hop.hop));\n        for (var r=0; r < hop.result.length; r++) {\n            var reply = hop.result[r];\n            output.push(this.renderReply(reply, lastAddr));\n            lastAddr = reply.from || lastAddr;\n\n        }\n        return \"<div class='traceroute-hop'>\" + output.join(\" \") + \"</div>\";\n    };\n\n    this.renderTimeout = function() {\n        return \"*\";\n    };\n\n    this.renderTime = function(time) {\n        return time + \" ms\";\n    };\n\n    this.renderError = function(error) {\n        return \"!\" + error;\n    };\n\n    this.renderAddress = function(addr, hostname) {\n        var label;\n        if (hostname) {\n            label = hostname + \" (\" + addr + \")\";\n        } else {\n            label = addr;\n        }\n        return \"<a target='_blank' href='https://stat.ripe.net/\" + addr +\n            \"' title='\" + label + \" [click to open in RIPEstat]'>\" + addr + \"</a>\";\n    };\n};\ndefine(\"dnsmon.lib.atlas-traceroute-printer\", function(){});\n\n","define('dnsmon.lib.jquery-libs',[],function(){define.amd=!1,function(t,e){function i(t){var e=t.length,i=ue.type(t);return ue.isWindow(t)?!1:1===t.nodeType&&e?!0:\"array\"===i||\"function\"!==i&&(0===e||\"number\"==typeof e&&e>0&&e-1 in t)}function n(t){var e=Ce[t]={};return ue.each(t.match(de)||[],function(t,i){e[i]=!0}),e}function s(t,i,n,s){if(ue.acceptData(t)){var a,o,r=ue.expando,l=t.nodeType,h=l?ue.cache:t,u=l?t[r]:t[r]&&r;if(u&&h[u]&&(s||h[u].data)||n!==e||\"string\"!=typeof i)return u||(u=l?t[r]=ee.pop()||ue.guid++:r),h[u]||(h[u]=l?{}:{toJSON:ue.noop}),(\"object\"==typeof i||\"function\"==typeof i)&&(s?h[u]=ue.extend(h[u],i):h[u].data=ue.extend(h[u].data,i)),o=h[u],s||(o.data||(o.data={}),o=o.data),n!==e&&(o[ue.camelCase(i)]=n),\"string\"==typeof i?(a=o[i],null==a&&(a=o[ue.camelCase(i)])):a=o,a}}function a(t,e,i){if(ue.acceptData(t)){var n,s,a=t.nodeType,o=a?ue.cache:t,l=a?t[ue.expando]:ue.expando;if(o[l]){if(e&&(n=i?o[l]:o[l].data)){ue.isArray(e)?e=e.concat(ue.map(e,ue.camelCase)):e in n?e=[e]:(e=ue.camelCase(e),e=e in n?[e]:e.split(\" \")),s=e.length;for(;s--;)delete n[e[s]];if(i?!r(n):!ue.isEmptyObject(n))return}(i||(delete o[l].data,r(o[l])))&&(a?ue.cleanData([t],!0):ue.support.deleteExpando||o!=o.window?delete o[l]:o[l]=null)}}}function o(t,i,n){if(n===e&&1===t.nodeType){var s=\"data-\"+i.replace(Me,\"-$1\").toLowerCase();if(n=t.getAttribute(s),\"string\"==typeof n){try{n=\"true\"===n?!0:\"false\"===n?!1:\"null\"===n?null:+n+\"\"===n?+n:Te.test(n)?ue.parseJSON(n):n}catch(a){}ue.data(t,i,n)}else n=e}return n}function r(t){var e;for(e in t)if((\"data\"!==e||!ue.isEmptyObject(t[e]))&&\"toJSON\"!==e)return!1;return!0}function l(){return!0}function h(){return!1}function u(){try{return Q.activeElement}catch(t){}}function c(t,e){do t=t[e];while(t&&1!==t.nodeType);return t}function d(t,e,i){if(ue.isFunction(e))return ue.grep(t,function(t,n){return!!e.call(t,n,t)!==i});if(e.nodeType)return ue.grep(t,function(t){return t===e!==i});if(\"string\"==typeof e){if(Re.test(e))return ue.filter(e,t,i);e=ue.filter(e,t)}return ue.grep(t,function(t){return ue.inArray(t,e)>=0!==i})}function p(t){var e=Ue.split(\"|\"),i=t.createDocumentFragment();if(i.createElement)for(;e.length;)i.createElement(e.pop());return i}function f(t,e){return ue.nodeName(t,\"table\")&&ue.nodeName(1===e.nodeType?e:e.firstChild,\"tr\")?t.getElementsByTagName(\"tbody\")[0]||t.appendChild(t.ownerDocument.createElement(\"tbody\")):t}function m(t){return t.type=(null!==ue.find.attr(t,\"type\"))+\"/\"+t.type,t}function g(t){var e=si.exec(t.type);return e?t.type=e[1]:t.removeAttribute(\"type\"),t}function v(t,e){for(var i,n=0;null!=(i=t[n]);n++)ue._data(i,\"globalEval\",!e||ue._data(e[n],\"globalEval\"))}function _(t,e){if(1===e.nodeType&&ue.hasData(t)){var i,n,s,a=ue._data(t),o=ue._data(e,a),r=a.events;if(r){delete o.handle,o.events={};for(i in r)for(n=0,s=r[i].length;s>n;n++)ue.event.add(e,i,r[i][n])}o.data&&(o.data=ue.extend({},o.data))}}function b(t,e){var i,n,s;if(1===e.nodeType){if(i=e.nodeName.toLowerCase(),!ue.support.noCloneEvent&&e[ue.expando]){s=ue._data(e);for(n in s.events)ue.removeEvent(e,n,s.handle);e.removeAttribute(ue.expando)}\"script\"===i&&e.text!==t.text?(m(e).text=t.text,g(e)):\"object\"===i?(e.parentNode&&(e.outerHTML=t.outerHTML),ue.support.html5Clone&&t.innerHTML&&!ue.trim(e.innerHTML)&&(e.innerHTML=t.innerHTML)):\"input\"===i&&ei.test(t.type)?(e.defaultChecked=e.checked=t.checked,e.value!==t.value&&(e.value=t.value)):\"option\"===i?e.defaultSelected=e.selected=t.defaultSelected:(\"input\"===i||\"textarea\"===i)&&(e.defaultValue=t.defaultValue)}}function y(t,i){var n,s,a=0,o=typeof t.getElementsByTagName!==V?t.getElementsByTagName(i||\"*\"):typeof t.querySelectorAll!==V?t.querySelectorAll(i||\"*\"):e;if(!o)for(o=[],n=t.childNodes||t;null!=(s=n[a]);a++)!i||ue.nodeName(s,i)?o.push(s):ue.merge(o,y(s,i));return i===e||i&&ue.nodeName(t,i)?ue.merge([t],o):o}function x(t){ei.test(t.type)&&(t.defaultChecked=t.checked)}function w(t,e){if(e in t)return e;for(var i=e.charAt(0).toUpperCase()+e.slice(1),n=e,s=Di.length;s--;)if(e=Di[s]+i,e in t)return e;return n}function k(t,e){return t=e||t,\"none\"===ue.css(t,\"display\")||!ue.contains(t.ownerDocument,t)}function D(t,e){for(var i,n,s,a=[],o=0,r=t.length;r>o;o++)n=t[o],n.style&&(a[o]=ue._data(n,\"olddisplay\"),i=n.style.display,e?(a[o]||\"none\"!==i||(n.style.display=\"\"),\"\"===n.style.display&&k(n)&&(a[o]=ue._data(n,\"olddisplay\",S(n.nodeName)))):a[o]||(s=k(n),(i&&\"none\"!==i||!s)&&ue._data(n,\"olddisplay\",s?i:ue.css(n,\"display\"))));for(o=0;r>o;o++)n=t[o],n.style&&(e&&\"none\"!==n.style.display&&\"\"!==n.style.display||(n.style.display=e?a[o]||\"\":\"none\"));return t}function C(t,e,i){var n=vi.exec(e);return n?Math.max(0,n[1]-(i||0))+(n[2]||\"px\"):e}function T(t,e,i,n,s){for(var a=i===(n?\"border\":\"content\")?4:\"width\"===e?1:0,o=0;4>a;a+=2)\"margin\"===i&&(o+=ue.css(t,i+ki[a],!0,s)),n?(\"content\"===i&&(o-=ue.css(t,\"padding\"+ki[a],!0,s)),\"margin\"!==i&&(o-=ue.css(t,\"border\"+ki[a]+\"Width\",!0,s))):(o+=ue.css(t,\"padding\"+ki[a],!0,s),\"padding\"!==i&&(o+=ue.css(t,\"border\"+ki[a]+\"Width\",!0,s)));return o}function M(t,e,i){var n=!0,s=\"width\"===e?t.offsetWidth:t.offsetHeight,a=ui(t),o=ue.support.boxSizing&&\"border-box\"===ue.css(t,\"boxSizing\",!1,a);if(0>=s||null==s){if(s=ci(t,e,a),(0>s||null==s)&&(s=t.style[e]),_i.test(s))return s;n=o&&(ue.support.boxSizingReliable||s===t.style[e]),s=parseFloat(s)||0}return s+T(t,e,i||(o?\"border\":\"content\"),n,a)+\"px\"}function S(t){var e=Q,i=yi[t];return i||(i=I(t,e),\"none\"!==i&&i||(hi=(hi||ue(\"<iframe frameborder='0' width='0' height='0'/>\").css(\"cssText\",\"display:block !important\")).appendTo(e.documentElement),e=(hi[0].contentWindow||hi[0].contentDocument).document,e.write(\"<!doctype html><html><body>\"),e.close(),i=I(t,e),hi.detach()),yi[t]=i),i}function I(t,e){var i=ue(e.createElement(t)).appendTo(e.body),n=ue.css(i[0],\"display\");return i.remove(),n}function N(t,e,i,n){var s;if(ue.isArray(e))ue.each(e,function(e,s){i||Ti.test(t)?n(t,s):N(t+\"[\"+(\"object\"==typeof s?e:\"\")+\"]\",s,i,n)});else if(i||\"object\"!==ue.type(e))n(t,e);else for(s in e)N(t+\"[\"+s+\"]\",e[s],i,n)}function P(t){return function(e,i){\"string\"!=typeof e&&(i=e,e=\"*\");var n,s=0,a=e.toLowerCase().match(de)||[];if(ue.isFunction(i))for(;n=a[s++];)\"+\"===n[0]?(n=n.slice(1)||\"*\",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function z(t,i,n,s){function a(l){var h;return o[l]=!0,ue.each(t[l]||[],function(t,l){var u=l(i,n,s);return\"string\"!=typeof u||r||o[u]?r?!(h=u):e:(i.dataTypes.unshift(u),a(u),!1)}),h}var o={},r=t===Bi;return a(i.dataTypes[0])||!o[\"*\"]&&a(\"*\")}function A(t,i){var n,s,a=ue.ajaxSettings.flatOptions||{};for(s in i)i[s]!==e&&((a[s]?t:n||(n={}))[s]=i[s]);return n&&ue.extend(!0,t,n),t}function E(t,i,n){for(var s,a,o,r,l=t.contents,h=t.dataTypes;\"*\"===h[0];)h.shift(),a===e&&(a=t.mimeType||i.getResponseHeader(\"Content-Type\"));if(a)for(r in l)if(l[r]&&l[r].test(a)){h.unshift(r);break}if(h[0]in n)o=h[0];else{for(r in n){if(!h[0]||t.converters[r+\" \"+h[0]]){o=r;break}s||(s=r)}o=o||s}return o?(o!==h[0]&&h.unshift(o),n[o]):e}function O(t,e,i,n){var s,a,o,r,l,h={},u=t.dataTypes.slice();if(u[1])for(o in t.converters)h[o.toLowerCase()]=t.converters[o];for(a=u.shift();a;)if(t.responseFields[a]&&(i[t.responseFields[a]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=a,a=u.shift())if(\"*\"===a)a=l;else if(\"*\"!==l&&l!==a){if(o=h[l+\" \"+a]||h[\"* \"+a],!o)for(s in h)if(r=s.split(\" \"),r[1]===a&&(o=h[l+\" \"+r[0]]||h[\"* \"+r[0]])){o===!0?o=h[s]:h[s]!==!0&&(a=r[0],u.unshift(r[1]));break}if(o!==!0)if(o&&t[\"throws\"])e=o(e);else try{e=o(e)}catch(c){return{state:\"parsererror\",error:o?c:\"No conversion from \"+l+\" to \"+a}}}return{state:\"success\",data:e}}function H(){try{return new t.XMLHttpRequest}catch(e){}}function W(){try{return new t.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(e){}}function F(){return setTimeout(function(){Ji=e}),Ji=ue.now()}function j(t,e,i){for(var n,s=(an[e]||[]).concat(an[\"*\"]),a=0,o=s.length;o>a;a++)if(n=s[a].call(i,e,t))return n}function $(t,e,i){var n,s,a=0,o=sn.length,r=ue.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=Ji||F(),i=Math.max(0,h.startTime+h.duration-e),n=i/h.duration||0,a=1-n,o=0,l=h.tweens.length;l>o;o++)h.tweens[o].run(a);return r.notifyWith(t,[h,a,i]),1>a&&l?i:(r.resolveWith(t,[h]),!1)},h=r.promise({elem:t,props:ue.extend({},e),opts:ue.extend(!0,{specialEasing:{}},i),originalProperties:e,originalOptions:i,startTime:Ji||F(),duration:i.duration,tweens:[],createTween:function(e,i){var n=ue.Tween(t,h.opts,e,i,h.opts.specialEasing[e]||h.opts.easing);return h.tweens.push(n),n},stop:function(e){var i=0,n=e?h.tweens.length:0;if(s)return this;for(s=!0;n>i;i++)h.tweens[i].run(1);return e?r.resolveWith(t,[h,e]):r.rejectWith(t,[h,e]),this}}),u=h.props;for(L(u,h.opts.specialEasing);o>a;a++)if(n=sn[a].call(h,t,u,h.opts))return n;return ue.map(u,j,h),ue.isFunction(h.opts.start)&&h.opts.start.call(t,h),ue.fx.timer(ue.extend(l,{elem:t,anim:h,queue:h.opts.queue})),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always)}function L(t,e){var i,n,s,a,o;for(i in t)if(n=ue.camelCase(i),s=e[n],a=t[i],ue.isArray(a)&&(s=a[1],a=t[i]=a[0]),i!==n&&(t[n]=a,delete t[i]),o=ue.cssHooks[n],o&&\"expand\"in o){a=o.expand(a),delete t[n];for(i in a)i in t||(t[i]=a[i],e[i]=s)}else e[n]=s}function R(t,e,i){var n,s,a,o,r,l,h=this,u={},c=t.style,d=t.nodeType&&k(t),p=ue._data(t,\"fxshow\");i.queue||(r=ue._queueHooks(t,\"fx\"),null==r.unqueued&&(r.unqueued=0,l=r.empty.fire,r.empty.fire=function(){r.unqueued||l()}),r.unqueued++,h.always(function(){h.always(function(){r.unqueued--,ue.queue(t,\"fx\").length||r.empty.fire()})})),1===t.nodeType&&(\"height\"in e||\"width\"in e)&&(i.overflow=[c.overflow,c.overflowX,c.overflowY],\"inline\"===ue.css(t,\"display\")&&\"none\"===ue.css(t,\"float\")&&(ue.support.inlineBlockNeedsLayout&&\"inline\"!==S(t.nodeName)?c.zoom=1:c.display=\"inline-block\")),i.overflow&&(c.overflow=\"hidden\",ue.support.shrinkWrapBlocks||h.always(function(){c.overflow=i.overflow[0],c.overflowX=i.overflow[1],c.overflowY=i.overflow[2]}));for(n in e)if(s=e[n],tn.exec(s)){if(delete e[n],a=a||\"toggle\"===s,s===(d?\"hide\":\"show\"))continue;u[n]=p&&p[n]||ue.style(t,n)}if(!ue.isEmptyObject(u)){p?\"hidden\"in p&&(d=p.hidden):p=ue._data(t,\"fxshow\",{}),a&&(p.hidden=!d),d?ue(t).show():h.done(function(){ue(t).hide()}),h.done(function(){var e;ue._removeData(t,\"fxshow\");for(e in u)ue.style(t,e,u[e])});for(n in u)o=j(d?p[n]:0,n,h),n in p||(p[n]=o.start,d&&(o.end=o.start,o.start=\"width\"===n||\"height\"===n?1:0))}}function B(t,e,i,n,s){return new B.prototype.init(t,e,i,n,s)}function q(t,e){var i,n={height:t},s=0;for(e=e?1:0;4>s;s+=2-e)i=ki[s],n[\"margin\"+i]=n[\"padding\"+i]=t;return e&&(n.opacity=n.width=t),n}function Y(t){return ue.isWindow(t)?t:9===t.nodeType?t.defaultView||t.parentWindow:!1}var U,K,V=typeof e,X=t.location,Q=t.document,G=Q.documentElement,J=t.jQuery,Z=t.$,te={},ee=[],ie=\"1.10.2\",ne=ee.concat,se=ee.push,ae=ee.slice,oe=ee.indexOf,re=te.toString,le=te.hasOwnProperty,he=ie.trim,ue=function(t,e){return new ue.fn.init(t,e,K)},ce=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,de=/\\S+/g,pe=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,fe=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,me=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,ge=/^[\\],:{}\\s]*$/,ve=/(?:^|:|,)(?:\\s*\\[)+/g,_e=/\\\\(?:[\"\\\\\\/bfnrt]|u[\\da-fA-F]{4})/g,be=/\"[^\"\\\\\\r\\n]*\"|true|false|null|-?(?:\\d+\\.|)\\d+(?:[eE][+-]?\\d+|)/g,ye=/^-ms-/,xe=/-([\\da-z])/gi,we=function(t,e){return e.toUpperCase()},ke=function(t){(Q.addEventListener||\"load\"===t.type||\"complete\"===Q.readyState)&&(De(),ue.ready())},De=function(){Q.addEventListener?(Q.removeEventListener(\"DOMContentLoaded\",ke,!1),t.removeEventListener(\"load\",ke,!1)):(Q.detachEvent(\"onreadystatechange\",ke),t.detachEvent(\"onload\",ke))};ue.fn=ue.prototype={jquery:ie,constructor:ue,init:function(t,i,n){var s,a;if(!t)return this;if(\"string\"==typeof t){if(s=\"<\"===t.charAt(0)&&\">\"===t.charAt(t.length-1)&&t.length>=3?[null,t,null]:fe.exec(t),!s||!s[1]&&i)return!i||i.jquery?(i||n).find(t):this.constructor(i).find(t);if(s[1]){if(i=i instanceof ue?i[0]:i,ue.merge(this,ue.parseHTML(s[1],i&&i.nodeType?i.ownerDocument||i:Q,!0)),me.test(s[1])&&ue.isPlainObject(i))for(s in i)ue.isFunction(this[s])?this[s](i[s]):this.attr(s,i[s]);return this}if(a=Q.getElementById(s[2]),a&&a.parentNode){if(a.id!==s[2])return n.find(t);this.length=1,this[0]=a}return this.context=Q,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):ue.isFunction(t)?n.ready(t):(t.selector!==e&&(this.selector=t.selector,this.context=t.context),ue.makeArray(t,this))},selector:\"\",length:0,toArray:function(){return ae.call(this)},get:function(t){return null==t?this.toArray():0>t?this[this.length+t]:this[t]},pushStack:function(t){var e=ue.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t,e){return ue.each(this,t,e)},ready:function(t){return ue.ready.promise().done(t),this},slice:function(){return this.pushStack(ae.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(0>t?e:0);return this.pushStack(i>=0&&e>i?[this[i]]:[])},map:function(t){return this.pushStack(ue.map(this,function(e,i){return t.call(e,i,e)}))},end:function(){return this.prevObject||this.constructor(null)},push:se,sort:[].sort,splice:[].splice},ue.fn.init.prototype=ue.fn,ue.extend=ue.fn.extend=function(){var t,i,n,s,a,o,r=arguments[0]||{},l=1,h=arguments.length,u=!1;for(\"boolean\"==typeof r&&(u=r,r=arguments[1]||{},l=2),\"object\"==typeof r||ue.isFunction(r)||(r={}),h===l&&(r=this,--l);h>l;l++)if(null!=(a=arguments[l]))for(s in a)t=r[s],n=a[s],r!==n&&(u&&n&&(ue.isPlainObject(n)||(i=ue.isArray(n)))?(i?(i=!1,o=t&&ue.isArray(t)?t:[]):o=t&&ue.isPlainObject(t)?t:{},r[s]=ue.extend(u,o,n)):n!==e&&(r[s]=n));return r},ue.extend({expando:\"jQuery\"+(ie+Math.random()).replace(/\\D/g,\"\"),noConflict:function(e){return t.$===ue&&(t.$=Z),e&&t.jQuery===ue&&(t.jQuery=J),ue},isReady:!1,readyWait:1,holdReady:function(t){t?ue.readyWait++:ue.ready(!0)},ready:function(t){if(t===!0?!--ue.readyWait:!ue.isReady){if(!Q.body)return setTimeout(ue.ready);ue.isReady=!0,t!==!0&&--ue.readyWait>0||(U.resolveWith(Q,[ue]),ue.fn.trigger&&ue(Q).trigger(\"ready\").off(\"ready\"))}},isFunction:function(t){return\"function\"===ue.type(t)},isArray:Array.isArray||function(t){return\"array\"===ue.type(t)},isWindow:function(t){return null!=t&&t==t.window},isNumeric:function(t){return!isNaN(parseFloat(t))&&isFinite(t)},type:function(t){return null==t?t+\"\":\"object\"==typeof t||\"function\"==typeof t?te[re.call(t)]||\"object\":typeof t},isPlainObject:function(t){var i;if(!t||\"object\"!==ue.type(t)||t.nodeType||ue.isWindow(t))return!1;try{if(t.constructor&&!le.call(t,\"constructor\")&&!le.call(t.constructor.prototype,\"isPrototypeOf\"))return!1}catch(n){return!1}if(ue.support.ownLast)for(i in t)return le.call(t,i);for(i in t);return i===e||le.call(t,i)},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},error:function(t){throw Error(t)},parseHTML:function(t,e,i){if(!t||\"string\"!=typeof t)return null;\"boolean\"==typeof e&&(i=e,e=!1),e=e||Q;var n=me.exec(t),s=!i&&[];return n?[e.createElement(n[1])]:(n=ue.buildFragment([t],e,s),s&&ue(s).remove(),ue.merge([],n.childNodes))},parseJSON:function(i){return t.JSON&&t.JSON.parse?t.JSON.parse(i):null===i?i:\"string\"==typeof i&&(i=ue.trim(i),i&&ge.test(i.replace(_e,\"@\").replace(be,\"]\").replace(ve,\"\")))?Function(\"return \"+i)():(ue.error(\"Invalid JSON: \"+i),e)},parseXML:function(i){var n,s;if(!i||\"string\"!=typeof i)return null;try{t.DOMParser?(s=new DOMParser,n=s.parseFromString(i,\"text/xml\")):(n=new ActiveXObject(\"Microsoft.XMLDOM\"),n.async=\"false\",n.loadXML(i))}catch(a){n=e}return n&&n.documentElement&&!n.getElementsByTagName(\"parsererror\").length||ue.error(\"Invalid XML: \"+i),n},noop:function(){},globalEval:function(e){e&&ue.trim(e)&&(t.execScript||function(e){t.eval.call(t,e)})(e)},camelCase:function(t){return t.replace(ye,\"ms-\").replace(xe,we)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e,n){var s,a=0,o=t.length,r=i(t);if(n){if(r)for(;o>a&&(s=e.apply(t[a],n),s!==!1);a++);else for(a in t)if(s=e.apply(t[a],n),s===!1)break}else if(r)for(;o>a&&(s=e.call(t[a],a,t[a]),s!==!1);a++);else for(a in t)if(s=e.call(t[a],a,t[a]),s===!1)break;return t},trim:he&&!he.call(\"﻿ \")?function(t){return null==t?\"\":he.call(t)}:function(t){return null==t?\"\":(t+\"\").replace(pe,\"\")},makeArray:function(t,e){var n=e||[];return null!=t&&(i(Object(t))?ue.merge(n,\"string\"==typeof t?[t]:t):se.call(n,t)),n},inArray:function(t,e,i){var n;if(e){if(oe)return oe.call(e,t,i);for(n=e.length,i=i?0>i?Math.max(0,n+i):i:0;n>i;i++)if(i in e&&e[i]===t)return i}return-1},merge:function(t,i){var n=i.length,s=t.length,a=0;if(\"number\"==typeof n)for(;n>a;a++)t[s++]=i[a];else for(;i[a]!==e;)t[s++]=i[a++];return t.length=s,t},grep:function(t,e,i){var n,s=[],a=0,o=t.length;for(i=!!i;o>a;a++)n=!!e(t[a],a),i!==n&&s.push(t[a]);return s},map:function(t,e,n){var s,a=0,o=t.length,r=i(t),l=[];if(r)for(;o>a;a++)s=e(t[a],a,n),null!=s&&(l[l.length]=s);else for(a in t)s=e(t[a],a,n),null!=s&&(l[l.length]=s);return ne.apply([],l)},guid:1,proxy:function(t,i){var n,s,a;return\"string\"==typeof i&&(a=t[i],i=t,t=a),ue.isFunction(t)?(n=ae.call(arguments,2),s=function(){return t.apply(i||this,n.concat(ae.call(arguments)))},s.guid=t.guid=t.guid||ue.guid++,s):e},access:function(t,i,n,s,a,o,r){var l=0,h=t.length,u=null==n;if(\"object\"===ue.type(n)){a=!0;for(l in n)ue.access(t,i,l,n[l],!0,o,r)}else if(s!==e&&(a=!0,ue.isFunction(s)||(r=!0),u&&(r?(i.call(t,s),i=null):(u=i,i=function(t,e,i){return u.call(ue(t),i)})),i))for(;h>l;l++)i(t[l],n,r?s:s.call(t[l],l,i(t[l],n)));return a?t:u?i.call(t):h?i(t[0],n):o},now:function(){return(new Date).getTime()},swap:function(t,e,i,n){var s,a,o={};for(a in e)o[a]=t.style[a],t.style[a]=e[a];s=i.apply(t,n||[]);for(a in e)t.style[a]=o[a];return s}}),ue.ready.promise=function(e){if(!U)if(U=ue.Deferred(),\"complete\"===Q.readyState)setTimeout(ue.ready);else if(Q.addEventListener)Q.addEventListener(\"DOMContentLoaded\",ke,!1),t.addEventListener(\"load\",ke,!1);else{Q.attachEvent(\"onreadystatechange\",ke),t.attachEvent(\"onload\",ke);var i=!1;try{i=null==t.frameElement&&Q.documentElement}catch(n){}i&&i.doScroll&&function s(){if(!ue.isReady){try{i.doScroll(\"left\")}catch(t){return setTimeout(s,50)}De(),ue.ready()}}()}return U.promise(e)},ue.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"),function(t,e){te[\"[object \"+e+\"]\"]=e.toLowerCase()}),K=ue(Q),function(t,e){function i(t,e,i,n){var s,a,o,r,l,h,u,c,f,m;if((e?e.ownerDocument||e:$)!==z&&P(e),e=e||z,i=i||[],!t||\"string\"!=typeof t)return i;if(1!==(r=e.nodeType)&&9!==r)return[];if(E&&!n){if(s=be.exec(t))if(o=s[1]){if(9===r){if(a=e.getElementById(o),!a||!a.parentNode)return i;if(a.id===o)return i.push(a),i}else if(e.ownerDocument&&(a=e.ownerDocument.getElementById(o))&&F(e,a)&&a.id===o)return i.push(a),i}else{if(s[2])return te.apply(i,e.getElementsByTagName(t)),i;if((o=s[3])&&k.getElementsByClassName&&e.getElementsByClassName)return te.apply(i,e.getElementsByClassName(o)),i}if(k.qsa&&(!O||!O.test(t))){if(c=u=j,f=e,m=9===r&&t,1===r&&\"object\"!==e.nodeName.toLowerCase()){for(h=d(t),(u=e.getAttribute(\"id\"))?c=u.replace(we,\"\\\\$&\"):e.setAttribute(\"id\",c),c=\"[id='\"+c+\"'] \",l=h.length;l--;)h[l]=c+p(h[l]);f=pe.test(t)&&e.parentNode||e,m=h.join(\",\")}if(m)try{return te.apply(i,f.querySelectorAll(m)),i}catch(g){}finally{u||e.removeAttribute(\"id\")}}}return x(t.replace(he,\"$1\"),e,i,n)}function n(){function t(i,n){return e.push(i+=\" \")>C.cacheLength&&delete t[e.shift()],t[i]=n}var e=[];return t}function s(t){return t[j]=!0,t}function a(t){var e=z.createElement(\"div\");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var i=t.split(\"|\"),n=t.length;n--;)C.attrHandle[i[n]]=e}function r(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||X)-(~t.sourceIndex||X);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function l(t){return function(e){var i=e.nodeName.toLowerCase();return\"input\"===i&&e.type===t}}function h(t){return function(e){var i=e.nodeName.toLowerCase();return(\"input\"===i||\"button\"===i)&&e.type===t}}function u(t){return s(function(e){return e=+e,s(function(i,n){for(var s,a=t([],i.length,e),o=a.length;o--;)i[s=a[o]]&&(i[s]=!(n[s]=i[s]))})})}function c(){}function d(t,e){var n,s,a,o,r,l,h,u=q[t+\" \"];if(u)return e?0:u.slice(0);for(r=t,l=[],h=C.preFilter;r;){(!n||(s=ce.exec(r)))&&(s&&(r=r.slice(s[0].length)||r),l.push(a=[])),n=!1,(s=de.exec(r))&&(n=s.shift(),a.push({value:n,type:s[0].replace(he,\" \")}),r=r.slice(n.length));for(o in C.filter)!(s=ve[o].exec(r))||h[o]&&!(s=h[o](s))||(n=s.shift(),a.push({value:n,type:o,matches:s}),r=r.slice(n.length));if(!n)break}return e?r.length:r?i.error(t):q(t,l).slice(0)}function p(t){for(var e=0,i=t.length,n=\"\";i>e;e++)n+=t[e].value;return n}function f(t,e,i){var n=e.dir,s=i&&\"parentNode\"===n,a=R++;return e.first?function(e,i,a){for(;e=e[n];)if(1===e.nodeType||s)return t(e,i,a)}:function(e,i,o){var r,l,h,u=L+\" \"+a;if(o){for(;e=e[n];)if((1===e.nodeType||s)&&t(e,i,o))return!0}else for(;e=e[n];)if(1===e.nodeType||s)if(h=e[j]||(e[j]={}),(l=h[n])&&l[0]===u){if((r=l[1])===!0||r===D)return r===!0}else if(l=h[n]=[u],l[1]=t(e,i,o)||D,l[1]===!0)return!0}}function m(t){return t.length>1?function(e,i,n){for(var s=t.length;s--;)if(!t[s](e,i,n))return!1;return!0}:t[0]}function g(t,e,i,n,s){for(var a,o=[],r=0,l=t.length,h=null!=e;l>r;r++)(a=t[r])&&(!i||i(a,n,s))&&(o.push(a),h&&e.push(r));return o}function v(t,e,i,n,a,o){return n&&!n[j]&&(n=v(n)),a&&!a[j]&&(a=v(a,o)),s(function(s,o,r,l){var h,u,c,d=[],p=[],f=o.length,m=s||y(e||\"*\",r.nodeType?[r]:r,[]),v=!t||!s&&e?m:g(m,d,t,r,l),_=i?a||(s?t:f||n)?[]:o:v;if(i&&i(v,_,r,l),n)for(h=g(_,p),n(h,[],r,l),u=h.length;u--;)(c=h[u])&&(_[p[u]]=!(v[p[u]]=c));if(s){if(a||t){if(a){for(h=[],u=_.length;u--;)(c=_[u])&&h.push(v[u]=c);a(null,_=[],h,l)}for(u=_.length;u--;)(c=_[u])&&(h=a?ie.call(s,c):d[u])>-1&&(s[h]=!(o[h]=c))}}else _=g(_===o?_.splice(f,_.length):_),a?a(null,o,_,l):te.apply(o,_)})}function _(t){for(var e,i,n,s=t.length,a=C.relative[t[0].type],o=a||C.relative[\" \"],r=a?1:0,l=f(function(t){return t===e},o,!0),h=f(function(t){return ie.call(e,t)>-1},o,!0),u=[function(t,i,n){return!a&&(n||i!==I)||((e=i).nodeType?l(t,i,n):h(t,i,n))}];s>r;r++)if(i=C.relative[t[r].type])u=[f(m(u),i)];else{if(i=C.filter[t[r].type].apply(null,t[r].matches),i[j]){for(n=++r;s>n&&!C.relative[t[n].type];n++);return v(r>1&&m(u),r>1&&p(t.slice(0,r-1).concat({value:\" \"===t[r-2].type?\"*\":\"\"})).replace(he,\"$1\"),i,n>r&&_(t.slice(r,n)),s>n&&_(t=t.slice(n)),s>n&&p(t))}u.push(i)}return m(u)}function b(t,e){var n=0,a=e.length>0,o=t.length>0,r=function(s,r,l,h,u){var c,d,p,f=[],m=0,v=\"0\",_=s&&[],b=null!=u,y=I,x=s||o&&C.find.TAG(\"*\",u&&r.parentNode||r),w=L+=null==y?1:Math.random()||.1;for(b&&(I=r!==z&&r,D=n);null!=(c=x[v]);v++){if(o&&c){for(d=0;p=t[d++];)if(p(c,r,l)){h.push(c);break}b&&(L=w,D=++n)}a&&((c=!p&&c)&&m--,s&&_.push(c))}if(m+=v,a&&v!==m){for(d=0;p=e[d++];)p(_,f,r,l);if(s){if(m>0)for(;v--;)_[v]||f[v]||(f[v]=J.call(h));f=g(f)}te.apply(h,f),b&&!s&&f.length>0&&m+e.length>1&&i.uniqueSort(h)}return b&&(L=w,I=y),_};return a?s(r):r}function y(t,e,n){for(var s=0,a=e.length;a>s;s++)i(t,e[s],n);return n}function x(t,e,i,n){var s,a,o,r,l,h=d(t);if(!n&&1===h.length){if(a=h[0]=h[0].slice(0),a.length>2&&\"ID\"===(o=a[0]).type&&k.getById&&9===e.nodeType&&E&&C.relative[a[1].type]){if(e=(C.find.ID(o.matches[0].replace(ke,De),e)||[])[0],!e)return i;t=t.slice(a.shift().value.length)}for(s=ve.needsContext.test(t)?0:a.length;s--&&(o=a[s],!C.relative[r=o.type]);)if((l=C.find[r])&&(n=l(o.matches[0].replace(ke,De),pe.test(a[0].type)&&e.parentNode||e))){if(a.splice(s,1),t=n.length&&p(a),!t)return te.apply(i,n),i;break}}return S(t,h)(n,e,!E,i,pe.test(t)),i}var w,k,D,C,T,M,S,I,N,P,z,A,E,O,H,W,F,j=\"sizzle\"+-new Date,$=t.document,L=0,R=0,B=n(),q=n(),Y=n(),U=!1,K=function(t,e){return t===e?(U=!0,0):0},V=typeof e,X=1<<31,Q={}.hasOwnProperty,G=[],J=G.pop,Z=G.push,te=G.push,ee=G.slice,ie=G.indexOf||function(t){for(var e=0,i=this.length;i>e;e++)if(this[e]===t)return e;return-1},ne=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",se=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",ae=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",oe=ae.replace(\"w\",\"w#\"),re=\"\\\\[\"+se+\"*(\"+ae+\")\"+se+\"*(?:([*^$|!~]?=)\"+se+\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"+oe+\")|)|)\"+se+\"*\\\\]\",le=\":(\"+ae+\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+re.replace(3,8)+\")*)|.*)\\\\)|)\",he=RegExp(\"^\"+se+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+se+\"+$\",\"g\"),ce=RegExp(\"^\"+se+\"*,\"+se+\"*\"),de=RegExp(\"^\"+se+\"*([>+~]|\"+se+\")\"+se+\"*\"),pe=RegExp(se+\"*[+~]\"),fe=RegExp(\"=\"+se+\"*([^\\\\]'\\\"]*)\"+se+\"*\\\\]\",\"g\"),me=RegExp(le),ge=RegExp(\"^\"+oe+\"$\"),ve={ID:RegExp(\"^#(\"+ae+\")\"),CLASS:RegExp(\"^\\\\.(\"+ae+\")\"),TAG:RegExp(\"^(\"+ae.replace(\"w\",\"w*\")+\")\"),ATTR:RegExp(\"^\"+re),PSEUDO:RegExp(\"^\"+le),CHILD:RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+se+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+se+\"*(?:([+-]|)\"+se+\"*(\\\\d+)|))\"+se+\"*\\\\)|)\",\"i\"),bool:RegExp(\"^(?:\"+ne+\")$\",\"i\"),needsContext:RegExp(\"^\"+se+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+se+\"*((?:-\\\\d)?\\\\d*)\"+se+\"*\\\\)|)(?=[^-]|$)\",\"i\")},_e=/^[^{]+\\{\\s*\\[native \\w/,be=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,ye=/^(?:input|select|textarea|button)$/i,xe=/^h\\d$/i,we=/'|\\\\/g,ke=RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+se+\"?|(\"+se+\")|.)\",\"ig\"),De=function(t,e,i){var n=\"0x\"+e-65536;return n!==n||i?e:0>n?String.fromCharCode(n+65536):String.fromCharCode(55296|n>>10,56320|1023&n)};try{te.apply(G=ee.call($.childNodes),$.childNodes),G[$.childNodes.length].nodeType}catch(Ce){te={apply:G.length?function(t,e){Z.apply(t,ee.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}M=i.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?\"HTML\"!==e.nodeName:!1},k=i.support={},P=i.setDocument=function(t){var i=t?t.ownerDocument||t:$,n=i.defaultView;return i!==z&&9===i.nodeType&&i.documentElement?(z=i,A=i.documentElement,E=!M(i),n&&n.attachEvent&&n!==n.top&&n.attachEvent(\"onbeforeunload\",function(){P()}),k.attributes=a(function(t){return t.className=\"i\",!t.getAttribute(\"className\")}),k.getElementsByTagName=a(function(t){return t.appendChild(i.createComment(\"\")),!t.getElementsByTagName(\"*\").length}),k.getElementsByClassName=a(function(t){return t.innerHTML=\"<div class='a'></div><div class='a i'></div>\",t.firstChild.className=\"i\",2===t.getElementsByClassName(\"i\").length}),k.getById=a(function(t){return A.appendChild(t).id=j,!i.getElementsByName||!i.getElementsByName(j).length}),k.getById?(C.find.ID=function(t,e){if(typeof e.getElementById!==V&&E){var i=e.getElementById(t);return i&&i.parentNode?[i]:[]}},C.filter.ID=function(t){var e=t.replace(ke,De);return function(t){return t.getAttribute(\"id\")===e}}):(delete C.find.ID,C.filter.ID=function(t){var e=t.replace(ke,De);return function(t){var i=typeof t.getAttributeNode!==V&&t.getAttributeNode(\"id\");return i&&i.value===e}}),C.find.TAG=k.getElementsByTagName?function(t,i){return typeof i.getElementsByTagName!==V?i.getElementsByTagName(t):e}:function(t,e){var i,n=[],s=0,a=e.getElementsByTagName(t);if(\"*\"===t){for(;i=a[s++];)1===i.nodeType&&n.push(i);return n}return a},C.find.CLASS=k.getElementsByClassName&&function(t,i){return typeof i.getElementsByClassName!==V&&E?i.getElementsByClassName(t):e},H=[],O=[],(k.qsa=_e.test(i.querySelectorAll))&&(a(function(t){t.innerHTML=\"<select><option selected=''></option></select>\",t.querySelectorAll(\"[selected]\").length||O.push(\"\\\\[\"+se+\"*(?:value|\"+ne+\")\"),t.querySelectorAll(\":checked\").length||O.push(\":checked\")}),a(function(t){var e=i.createElement(\"input\");e.setAttribute(\"type\",\"hidden\"),t.appendChild(e).setAttribute(\"t\",\"\"),t.querySelectorAll(\"[t^='']\").length&&O.push(\"[*^$]=\"+se+\"*(?:''|\\\"\\\")\"),t.querySelectorAll(\":enabled\").length||O.push(\":enabled\",\":disabled\"),t.querySelectorAll(\"*,:x\"),O.push(\",.*:\")})),(k.matchesSelector=_e.test(W=A.webkitMatchesSelector||A.mozMatchesSelector||A.oMatchesSelector||A.msMatchesSelector))&&a(function(t){k.disconnectedMatch=W.call(t,\"div\"),W.call(t,\"[s!='']:x\"),H.push(\"!=\",le)}),O=O.length&&RegExp(O.join(\"|\")),H=H.length&&RegExp(H.join(\"|\")),F=_e.test(A.contains)||A.compareDocumentPosition?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},K=A.compareDocumentPosition?function(t,e){if(t===e)return U=!0,0;var n=e.compareDocumentPosition&&t.compareDocumentPosition&&t.compareDocumentPosition(e);return n?1&n||!k.sortDetached&&e.compareDocumentPosition(t)===n?t===i||F($,t)?-1:e===i||F($,e)?1:N?ie.call(N,t)-ie.call(N,e):0:4&n?-1:1:t.compareDocumentPosition?-1:1}:function(t,e){var n,s=0,a=t.parentNode,o=e.parentNode,l=[t],h=[e];if(t===e)return U=!0,0;if(!a||!o)return t===i?-1:e===i?1:a?-1:o?1:N?ie.call(N,t)-ie.call(N,e):0;if(a===o)return r(t,e);for(n=t;n=n.parentNode;)l.unshift(n);for(n=e;n=n.parentNode;)h.unshift(n);for(;l[s]===h[s];)s++;return s?r(l[s],h[s]):l[s]===$?-1:h[s]===$?1:0},i):z},i.matches=function(t,e){return i(t,null,null,e)},i.matchesSelector=function(t,e){if((t.ownerDocument||t)!==z&&P(t),e=e.replace(fe,\"='$1']\"),!(!k.matchesSelector||!E||H&&H.test(e)||O&&O.test(e)))try{var n=W.call(t,e);if(n||k.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(s){}return i(e,z,null,[t]).length>0},i.contains=function(t,e){return(t.ownerDocument||t)!==z&&P(t),F(t,e)},i.attr=function(t,i){(t.ownerDocument||t)!==z&&P(t);var n=C.attrHandle[i.toLowerCase()],s=n&&Q.call(C.attrHandle,i.toLowerCase())?n(t,i,!E):e;return s===e?k.attributes||!E?t.getAttribute(i):(s=t.getAttributeNode(i))&&s.specified?s.value:null:s},i.error=function(t){throw Error(\"Syntax error, unrecognized expression: \"+t)},i.uniqueSort=function(t){var e,i=[],n=0,s=0;if(U=!k.detectDuplicates,N=!k.sortStable&&t.slice(0),t.sort(K),U){for(;e=t[s++];)e===t[s]&&(n=i.push(s));for(;n--;)t.splice(i[n],1)}return t},T=i.getText=function(t){var e,i=\"\",n=0,s=t.nodeType;if(s){if(1===s||9===s||11===s){if(\"string\"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=T(t)}else if(3===s||4===s)return t.nodeValue}else for(;e=t[n];n++)i+=T(e);return i},C=i.selectors={cacheLength:50,createPseudo:s,match:ve,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(ke,De),t[3]=(t[4]||t[5]||\"\").replace(ke,De),\"~=\"===t[2]&&(t[3]=\" \"+t[3]+\" \"),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),\"nth\"===t[1].slice(0,3)?(t[3]||i.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*(\"even\"===t[3]||\"odd\"===t[3])),t[5]=+(t[7]+t[8]||\"odd\"===t[3])):t[3]&&i.error(t[0]),t},PSEUDO:function(t){var i,n=!t[5]&&t[2];return ve.CHILD.test(t[0])?null:(t[3]&&t[4]!==e?t[2]=t[4]:n&&me.test(n)&&(i=d(n,!0))&&(i=n.indexOf(\")\",n.length-i)-n.length)&&(t[0]=t[0].slice(0,i),t[2]=n.slice(0,i)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(ke,De).toLowerCase();return\"*\"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=B[t+\" \"];return e||(e=RegExp(\"(^|\"+se+\")\"+t+\"(\"+se+\"|$)\"))&&B(t,function(t){return e.test(\"string\"==typeof t.className&&t.className||typeof t.getAttribute!==V&&t.getAttribute(\"class\")||\"\")})},ATTR:function(t,e,n){return function(s){var a=i.attr(s,t);return null==a?\"!=\"===e:e?(a+=\"\",\"=\"===e?a===n:\"!=\"===e?a!==n:\"^=\"===e?n&&0===a.indexOf(n):\"*=\"===e?n&&a.indexOf(n)>-1:\"$=\"===e?n&&a.slice(-n.length)===n:\"~=\"===e?(\" \"+a+\" \").indexOf(n)>-1:\"|=\"===e?a===n||a.slice(0,n.length+1)===n+\"-\":!1):!0}},CHILD:function(t,e,i,n,s){var a=\"nth\"!==t.slice(0,3),o=\"last\"!==t.slice(-4),r=\"of-type\"===e;return 1===n&&0===s?function(t){return!!t.parentNode}:function(e,i,l){var h,u,c,d,p,f,m=a!==o?\"nextSibling\":\"previousSibling\",g=e.parentNode,v=r&&e.nodeName.toLowerCase(),_=!l&&!r;\nif(g){if(a){for(;m;){for(c=e;c=c[m];)if(r?c.nodeName.toLowerCase()===v:1===c.nodeType)return!1;f=m=\"only\"===t&&!f&&\"nextSibling\"}return!0}if(f=[o?g.firstChild:g.lastChild],o&&_){for(u=g[j]||(g[j]={}),h=u[t]||[],p=h[0]===L&&h[1],d=h[0]===L&&h[2],c=p&&g.childNodes[p];c=++p&&c&&c[m]||(d=p=0)||f.pop();)if(1===c.nodeType&&++d&&c===e){u[t]=[L,p,d];break}}else if(_&&(h=(e[j]||(e[j]={}))[t])&&h[0]===L)d=h[1];else for(;(c=++p&&c&&c[m]||(d=p=0)||f.pop())&&((r?c.nodeName.toLowerCase()!==v:1!==c.nodeType)||!++d||(_&&((c[j]||(c[j]={}))[t]=[L,d]),c!==e)););return d-=s,d===n||0===d%n&&d/n>=0}}},PSEUDO:function(t,e){var n,a=C.pseudos[t]||C.setFilters[t.toLowerCase()]||i.error(\"unsupported pseudo: \"+t);return a[j]?a(e):a.length>1?(n=[t,t,\"\",e],C.setFilters.hasOwnProperty(t.toLowerCase())?s(function(t,i){for(var n,s=a(t,e),o=s.length;o--;)n=ie.call(t,s[o]),t[n]=!(i[n]=s[o])}):function(t){return a(t,0,n)}):a}},pseudos:{not:s(function(t){var e=[],i=[],n=S(t.replace(he,\"$1\"));return n[j]?s(function(t,e,i,s){for(var a,o=n(t,null,s,[]),r=t.length;r--;)(a=o[r])&&(t[r]=!(e[r]=a))}):function(t,s,a){return e[0]=t,n(e,null,a,i),!i.pop()}}),has:s(function(t){return function(e){return i(t,e).length>0}}),contains:s(function(t){return function(e){return(e.textContent||e.innerText||T(e)).indexOf(t)>-1}}),lang:s(function(t){return ge.test(t||\"\")||i.error(\"unsupported lang: \"+t),t=t.replace(ke,De).toLowerCase(),function(e){var i;do if(i=E?e.lang:e.getAttribute(\"xml:lang\")||e.getAttribute(\"lang\"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+\"-\");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===A},focus:function(t){return t===z.activeElement&&(!z.hasFocus||z.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return\"input\"===e&&!!t.checked||\"option\"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeName>\"@\"||3===t.nodeType||4===t.nodeType)return!1;return!0},parent:function(t){return!C.pseudos.empty(t)},header:function(t){return xe.test(t.nodeName)},input:function(t){return ye.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return\"input\"===e&&\"button\"===t.type||\"button\"===e},text:function(t){var e;return\"input\"===t.nodeName.toLowerCase()&&\"text\"===t.type&&(null==(e=t.getAttribute(\"type\"))||e.toLowerCase()===t.type)},first:u(function(){return[0]}),last:u(function(t,e){return[e-1]}),eq:u(function(t,e,i){return[0>i?i+e:i]}),even:u(function(t,e){for(var i=0;e>i;i+=2)t.push(i);return t}),odd:u(function(t,e){for(var i=1;e>i;i+=2)t.push(i);return t}),lt:u(function(t,e,i){for(var n=0>i?i+e:i;--n>=0;)t.push(n);return t}),gt:u(function(t,e,i){for(var n=0>i?i+e:i;e>++n;)t.push(n);return t})}},C.pseudos.nth=C.pseudos.eq;for(w in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})C.pseudos[w]=l(w);for(w in{submit:!0,reset:!0})C.pseudos[w]=h(w);c.prototype=C.filters=C.pseudos,C.setFilters=new c,S=i.compile=function(t,e){var i,n=[],s=[],a=Y[t+\" \"];if(!a){for(e||(e=d(t)),i=e.length;i--;)a=_(e[i]),a[j]?n.push(a):s.push(a);a=Y(t,b(s,n))}return a},k.sortStable=j.split(\"\").sort(K).join(\"\")===j,k.detectDuplicates=U,P(),k.sortDetached=a(function(t){return 1&t.compareDocumentPosition(z.createElement(\"div\"))}),a(function(t){return t.innerHTML=\"<a href='#'></a>\",\"#\"===t.firstChild.getAttribute(\"href\")})||o(\"type|href|height|width\",function(t,i,n){return n?e:t.getAttribute(i,\"type\"===i.toLowerCase()?1:2)}),k.attributes&&a(function(t){return t.innerHTML=\"<input/>\",t.firstChild.setAttribute(\"value\",\"\"),\"\"===t.firstChild.getAttribute(\"value\")})||o(\"value\",function(t,i,n){return n||\"input\"!==t.nodeName.toLowerCase()?e:t.defaultValue}),a(function(t){return null==t.getAttribute(\"disabled\")})||o(ne,function(t,i,n){var s;return n?e:(s=t.getAttributeNode(i))&&s.specified?s.value:t[i]===!0?i.toLowerCase():null}),ue.find=i,ue.expr=i.selectors,ue.expr[\":\"]=ue.expr.pseudos,ue.unique=i.uniqueSort,ue.text=i.getText,ue.isXMLDoc=i.isXML,ue.contains=i.contains}(t);var Ce={};ue.Callbacks=function(t){t=\"string\"==typeof t?Ce[t]||n(t):ue.extend({},t);var i,s,a,o,r,l,h=[],u=!t.once&&[],c=function(e){for(s=t.memory&&e,a=!0,r=l||0,l=0,o=h.length,i=!0;h&&o>r;r++)if(h[r].apply(e[0],e[1])===!1&&t.stopOnFalse){s=!1;break}i=!1,h&&(u?u.length&&c(u.shift()):s?h=[]:d.disable())},d={add:function(){if(h){var e=h.length;!function n(e){ue.each(e,function(e,i){var s=ue.type(i);\"function\"===s?t.unique&&d.has(i)||h.push(i):i&&i.length&&\"string\"!==s&&n(i)})}(arguments),i?o=h.length:s&&(l=e,c(s))}return this},remove:function(){return h&&ue.each(arguments,function(t,e){for(var n;(n=ue.inArray(e,h,n))>-1;)h.splice(n,1),i&&(o>=n&&o--,r>=n&&r--)}),this},has:function(t){return t?ue.inArray(t,h)>-1:!(!h||!h.length)},empty:function(){return h=[],o=0,this},disable:function(){return h=u=s=e,this},disabled:function(){return!h},lock:function(){return u=e,s||d.disable(),this},locked:function(){return!u},fireWith:function(t,e){return!h||a&&!u||(e=e||[],e=[t,e.slice?e.slice():e],i?u.push(e):c(e)),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!a}};return d},ue.extend({Deferred:function(t){var e=[[\"resolve\",\"done\",ue.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",ue.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",ue.Callbacks(\"memory\")]],i=\"pending\",n={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},then:function(){var t=arguments;return ue.Deferred(function(i){ue.each(e,function(e,a){var o=a[0],r=ue.isFunction(t[e])&&t[e];s[a[1]](function(){var t=r&&r.apply(this,arguments);t&&ue.isFunction(t.promise)?t.promise().done(i.resolve).fail(i.reject).progress(i.notify):i[o+\"With\"](this===n?i.promise():this,r?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?ue.extend(t,n):n}},s={};return n.pipe=n.then,ue.each(e,function(t,a){var o=a[2],r=a[3];n[a[1]]=o.add,r&&o.add(function(){i=r},e[1^t][2].disable,e[2][2].lock),s[a[0]]=function(){return s[a[0]+\"With\"](this===s?n:this,arguments),this},s[a[0]+\"With\"]=o.fireWith}),n.promise(s),t&&t.call(s,s),s},when:function(t){var e,i,n,s=0,a=ae.call(arguments),o=a.length,r=1!==o||t&&ue.isFunction(t.promise)?o:0,l=1===r?t:ue.Deferred(),h=function(t,i,n){return function(s){i[t]=this,n[t]=arguments.length>1?ae.call(arguments):s,n===e?l.notifyWith(i,n):--r||l.resolveWith(i,n)}};if(o>1)for(e=Array(o),i=Array(o),n=Array(o);o>s;s++)a[s]&&ue.isFunction(a[s].promise)?a[s].promise().done(h(s,n,a)).fail(l.reject).progress(h(s,i,e)):--r;return r||l.resolveWith(n,a),l.promise()}}),ue.support=function(e){var i,n,s,a,o,r,l,h,u,c=Q.createElement(\"div\");if(c.setAttribute(\"className\",\"t\"),c.innerHTML=\"  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>\",i=c.getElementsByTagName(\"*\")||[],n=c.getElementsByTagName(\"a\")[0],!n||!n.style||!i.length)return e;a=Q.createElement(\"select\"),r=a.appendChild(Q.createElement(\"option\")),s=c.getElementsByTagName(\"input\")[0],n.style.cssText=\"top:1px;float:left;opacity:.5\",e.getSetAttribute=\"t\"!==c.className,e.leadingWhitespace=3===c.firstChild.nodeType,e.tbody=!c.getElementsByTagName(\"tbody\").length,e.htmlSerialize=!!c.getElementsByTagName(\"link\").length,e.style=/top/.test(n.getAttribute(\"style\")),e.hrefNormalized=\"/a\"===n.getAttribute(\"href\"),e.opacity=/^0.5/.test(n.style.opacity),e.cssFloat=!!n.style.cssFloat,e.checkOn=!!s.value,e.optSelected=r.selected,e.enctype=!!Q.createElement(\"form\").enctype,e.html5Clone=\"<:nav></:nav>\"!==Q.createElement(\"nav\").cloneNode(!0).outerHTML,e.inlineBlockNeedsLayout=!1,e.shrinkWrapBlocks=!1,e.pixelPosition=!1,e.deleteExpando=!0,e.noCloneEvent=!0,e.reliableMarginRight=!0,e.boxSizingReliable=!0,s.checked=!0,e.noCloneChecked=s.cloneNode(!0).checked,a.disabled=!0,e.optDisabled=!r.disabled;try{delete c.test}catch(d){e.deleteExpando=!1}s=Q.createElement(\"input\"),s.setAttribute(\"value\",\"\"),e.input=\"\"===s.getAttribute(\"value\"),s.value=\"t\",s.setAttribute(\"type\",\"radio\"),e.radioValue=\"t\"===s.value,s.setAttribute(\"checked\",\"t\"),s.setAttribute(\"name\",\"t\"),o=Q.createDocumentFragment(),o.appendChild(s),e.appendChecked=s.checked,e.checkClone=o.cloneNode(!0).cloneNode(!0).lastChild.checked,c.attachEvent&&(c.attachEvent(\"onclick\",function(){e.noCloneEvent=!1}),c.cloneNode(!0).click());for(u in{submit:!0,change:!0,focusin:!0})c.setAttribute(l=\"on\"+u,\"t\"),e[u+\"Bubbles\"]=l in t||c.attributes[l].expando===!1;c.style.backgroundClip=\"content-box\",c.cloneNode(!0).style.backgroundClip=\"\",e.clearCloneStyle=\"content-box\"===c.style.backgroundClip;for(u in ue(e))break;return e.ownLast=\"0\"!==u,ue(function(){var i,n,s,a=\"padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;\",o=Q.getElementsByTagName(\"body\")[0];o&&(i=Q.createElement(\"div\"),i.style.cssText=\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\",o.appendChild(i).appendChild(c),c.innerHTML=\"<table><tr><td></td><td>t</td></tr></table>\",s=c.getElementsByTagName(\"td\"),s[0].style.cssText=\"padding:0;margin:0;border:0;display:none\",h=0===s[0].offsetHeight,s[0].style.display=\"\",s[1].style.display=\"none\",e.reliableHiddenOffsets=h&&0===s[0].offsetHeight,c.innerHTML=\"\",c.style.cssText=\"box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;\",ue.swap(o,null!=o.style.zoom?{zoom:1}:{},function(){e.boxSizing=4===c.offsetWidth}),t.getComputedStyle&&(e.pixelPosition=\"1%\"!==(t.getComputedStyle(c,null)||{}).top,e.boxSizingReliable=\"4px\"===(t.getComputedStyle(c,null)||{width:\"4px\"}).width,n=c.appendChild(Q.createElement(\"div\")),n.style.cssText=c.style.cssText=a,n.style.marginRight=n.style.width=\"0\",c.style.width=\"1px\",e.reliableMarginRight=!parseFloat((t.getComputedStyle(n,null)||{}).marginRight)),typeof c.style.zoom!==V&&(c.innerHTML=\"\",c.style.cssText=a+\"width:1px;padding:1px;display:inline;zoom:1\",e.inlineBlockNeedsLayout=3===c.offsetWidth,c.style.display=\"block\",c.innerHTML=\"<div></div>\",c.firstChild.style.width=\"5px\",e.shrinkWrapBlocks=3!==c.offsetWidth,e.inlineBlockNeedsLayout&&(o.style.zoom=1)),o.removeChild(i),i=c=s=n=null)}),i=a=o=r=n=s=null,e}({});var Te=/(?:\\{[\\s\\S]*\\}|\\[[\\s\\S]*\\])$/,Me=/([A-Z])/g;ue.extend({cache:{},noData:{applet:!0,embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"},hasData:function(t){return t=t.nodeType?ue.cache[t[ue.expando]]:t[ue.expando],!!t&&!r(t)},data:function(t,e,i){return s(t,e,i)},removeData:function(t,e){return a(t,e)},_data:function(t,e,i){return s(t,e,i,!0)},_removeData:function(t,e){return a(t,e,!0)},acceptData:function(t){if(t.nodeType&&1!==t.nodeType&&9!==t.nodeType)return!1;var e=t.nodeName&&ue.noData[t.nodeName.toLowerCase()];return!e||e!==!0&&t.getAttribute(\"classid\")===e}}),ue.fn.extend({data:function(t,i){var n,s,a=null,r=0,l=this[0];if(t===e){if(this.length&&(a=ue.data(l),1===l.nodeType&&!ue._data(l,\"parsedAttrs\"))){for(n=l.attributes;n.length>r;r++)s=n[r].name,0===s.indexOf(\"data-\")&&(s=ue.camelCase(s.slice(5)),o(l,s,a[s]));ue._data(l,\"parsedAttrs\",!0)}return a}return\"object\"==typeof t?this.each(function(){ue.data(this,t)}):arguments.length>1?this.each(function(){ue.data(this,t,i)}):l?o(l,t,ue.data(l,t)):null},removeData:function(t){return this.each(function(){ue.removeData(this,t)})}}),ue.extend({queue:function(t,i,n){var s;return t?(i=(i||\"fx\")+\"queue\",s=ue._data(t,i),n&&(!s||ue.isArray(n)?s=ue._data(t,i,ue.makeArray(n)):s.push(n)),s||[]):e},dequeue:function(t,e){e=e||\"fx\";var i=ue.queue(t,e),n=i.length,s=i.shift(),a=ue._queueHooks(t,e),o=function(){ue.dequeue(t,e)};\"inprogress\"===s&&(s=i.shift(),n--),s&&(\"fx\"===e&&i.unshift(\"inprogress\"),delete a.stop,s.call(t,o,a)),!n&&a&&a.empty.fire()},_queueHooks:function(t,e){var i=e+\"queueHooks\";return ue._data(t,i)||ue._data(t,i,{empty:ue.Callbacks(\"once memory\").add(function(){ue._removeData(t,e+\"queue\"),ue._removeData(t,i)})})}}),ue.fn.extend({queue:function(t,i){var n=2;return\"string\"!=typeof t&&(i=t,t=\"fx\",n--),n>arguments.length?ue.queue(this[0],t):i===e?this:this.each(function(){var e=ue.queue(this,t,i);ue._queueHooks(this,t),\"fx\"===t&&\"inprogress\"!==e[0]&&ue.dequeue(this,t)})},dequeue:function(t){return this.each(function(){ue.dequeue(this,t)})},delay:function(t,e){return t=ue.fx?ue.fx.speeds[t]||t:t,e=e||\"fx\",this.queue(e,function(e,i){var n=setTimeout(e,t);i.stop=function(){clearTimeout(n)}})},clearQueue:function(t){return this.queue(t||\"fx\",[])},promise:function(t,i){var n,s=1,a=ue.Deferred(),o=this,r=this.length,l=function(){--s||a.resolveWith(o,[o])};for(\"string\"!=typeof t&&(i=t,t=e),t=t||\"fx\";r--;)n=ue._data(o[r],t+\"queueHooks\"),n&&n.empty&&(s++,n.empty.add(l));return l(),a.promise(i)}});var Se,Ie,Ne=/[\\t\\r\\n\\f]/g,Pe=/\\r/g,ze=/^(?:input|select|textarea|button|object)$/i,Ae=/^(?:a|area)$/i,Ee=/^(?:checked|selected)$/i,Oe=ue.support.getSetAttribute,He=ue.support.input;ue.fn.extend({attr:function(t,e){return ue.access(this,ue.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){ue.removeAttr(this,t)})},prop:function(t,e){return ue.access(this,ue.prop,t,e,arguments.length>1)},removeProp:function(t){return t=ue.propFix[t]||t,this.each(function(){try{this[t]=e,delete this[t]}catch(i){}})},addClass:function(t){var e,i,n,s,a,o=0,r=this.length,l=\"string\"==typeof t&&t;if(ue.isFunction(t))return this.each(function(e){ue(this).addClass(t.call(this,e,this.className))});if(l)for(e=(t||\"\").match(de)||[];r>o;o++)if(i=this[o],n=1===i.nodeType&&(i.className?(\" \"+i.className+\" \").replace(Ne,\" \"):\" \")){for(a=0;s=e[a++];)0>n.indexOf(\" \"+s+\" \")&&(n+=s+\" \");i.className=ue.trim(n)}return this},removeClass:function(t){var e,i,n,s,a,o=0,r=this.length,l=0===arguments.length||\"string\"==typeof t&&t;if(ue.isFunction(t))return this.each(function(e){ue(this).removeClass(t.call(this,e,this.className))});if(l)for(e=(t||\"\").match(de)||[];r>o;o++)if(i=this[o],n=1===i.nodeType&&(i.className?(\" \"+i.className+\" \").replace(Ne,\" \"):\"\")){for(a=0;s=e[a++];)for(;n.indexOf(\" \"+s+\" \")>=0;)n=n.replace(\" \"+s+\" \",\" \");i.className=t?ue.trim(n):\"\"}return this},toggleClass:function(t,e){var i=typeof t;return\"boolean\"==typeof e&&\"string\"===i?e?this.addClass(t):this.removeClass(t):this.each(ue.isFunction(t)?function(i){ue(this).toggleClass(t.call(this,i,this.className,e),e)}:function(){if(\"string\"===i)for(var e,n=0,s=ue(this),a=t.match(de)||[];e=a[n++];)s.hasClass(e)?s.removeClass(e):s.addClass(e);else(i===V||\"boolean\"===i)&&(this.className&&ue._data(this,\"__className__\",this.className),this.className=this.className||t===!1?\"\":ue._data(this,\"__className__\")||\"\")})},hasClass:function(t){for(var e=\" \"+t+\" \",i=0,n=this.length;n>i;i++)if(1===this[i].nodeType&&(\" \"+this[i].className+\" \").replace(Ne,\" \").indexOf(e)>=0)return!0;return!1},val:function(t){var i,n,s,a=this[0];return arguments.length?(s=ue.isFunction(t),this.each(function(i){var a;1===this.nodeType&&(a=s?t.call(this,i,ue(this).val()):t,null==a?a=\"\":\"number\"==typeof a?a+=\"\":ue.isArray(a)&&(a=ue.map(a,function(t){return null==t?\"\":t+\"\"})),n=ue.valHooks[this.type]||ue.valHooks[this.nodeName.toLowerCase()],n&&\"set\"in n&&n.set(this,a,\"value\")!==e||(this.value=a))})):a?(n=ue.valHooks[a.type]||ue.valHooks[a.nodeName.toLowerCase()],n&&\"get\"in n&&(i=n.get(a,\"value\"))!==e?i:(i=a.value,\"string\"==typeof i?i.replace(Pe,\"\"):null==i?\"\":i)):void 0}}),ue.extend({valHooks:{option:{get:function(t){var e=ue.find.attr(t,\"value\");return null!=e?e:t.text}},select:{get:function(t){for(var e,i,n=t.options,s=t.selectedIndex,a=\"select-one\"===t.type||0>s,o=a?null:[],r=a?s+1:n.length,l=0>s?r:a?s:0;r>l;l++)if(i=n[l],!(!i.selected&&l!==s||(ue.support.optDisabled?i.disabled:null!==i.getAttribute(\"disabled\"))||i.parentNode.disabled&&ue.nodeName(i.parentNode,\"optgroup\"))){if(e=ue(i).val(),a)return e;o.push(e)}return o},set:function(t,e){for(var i,n,s=t.options,a=ue.makeArray(e),o=s.length;o--;)n=s[o],(n.selected=ue.inArray(ue(n).val(),a)>=0)&&(i=!0);return i||(t.selectedIndex=-1),a}}},attr:function(t,i,n){var s,a,o=t.nodeType;return t&&3!==o&&8!==o&&2!==o?typeof t.getAttribute===V?ue.prop(t,i,n):(1===o&&ue.isXMLDoc(t)||(i=i.toLowerCase(),s=ue.attrHooks[i]||(ue.expr.match.bool.test(i)?Ie:Se)),n===e?s&&\"get\"in s&&null!==(a=s.get(t,i))?a:(a=ue.find.attr(t,i),null==a?e:a):null!==n?s&&\"set\"in s&&(a=s.set(t,n,i))!==e?a:(t.setAttribute(i,n+\"\"),n):(ue.removeAttr(t,i),e)):void 0},removeAttr:function(t,e){var i,n,s=0,a=e&&e.match(de);if(a&&1===t.nodeType)for(;i=a[s++];)n=ue.propFix[i]||i,ue.expr.match.bool.test(i)?He&&Oe||!Ee.test(i)?t[n]=!1:t[ue.camelCase(\"default-\"+i)]=t[n]=!1:ue.attr(t,i,\"\"),t.removeAttribute(Oe?i:n)},attrHooks:{type:{set:function(t,e){if(!ue.support.radioValue&&\"radio\"===e&&ue.nodeName(t,\"input\")){var i=t.value;return t.setAttribute(\"type\",e),i&&(t.value=i),e}}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"},prop:function(t,i,n){var s,a,o,r=t.nodeType;return t&&3!==r&&8!==r&&2!==r?(o=1!==r||!ue.isXMLDoc(t),o&&(i=ue.propFix[i]||i,a=ue.propHooks[i]),n!==e?a&&\"set\"in a&&(s=a.set(t,n,i))!==e?s:t[i]=n:a&&\"get\"in a&&null!==(s=a.get(t,i))?s:t[i]):void 0},propHooks:{tabIndex:{get:function(t){var e=ue.find.attr(t,\"tabindex\");return e?parseInt(e,10):ze.test(t.nodeName)||Ae.test(t.nodeName)&&t.href?0:-1}}}}),Ie={set:function(t,e,i){return e===!1?ue.removeAttr(t,i):He&&Oe||!Ee.test(i)?t.setAttribute(!Oe&&ue.propFix[i]||i,i):t[ue.camelCase(\"default-\"+i)]=t[i]=!0,i}},ue.each(ue.expr.match.bool.source.match(/\\w+/g),function(t,i){var n=ue.expr.attrHandle[i]||ue.find.attr;ue.expr.attrHandle[i]=He&&Oe||!Ee.test(i)?function(t,i,s){var a=ue.expr.attrHandle[i],o=s?e:(ue.expr.attrHandle[i]=e)!=n(t,i,s)?i.toLowerCase():null;return ue.expr.attrHandle[i]=a,o}:function(t,i,n){return n?e:t[ue.camelCase(\"default-\"+i)]?i.toLowerCase():null}}),He&&Oe||(ue.attrHooks.value={set:function(t,i,n){return ue.nodeName(t,\"input\")?(t.defaultValue=i,e):Se&&Se.set(t,i,n)}}),Oe||(Se={set:function(t,i,n){var s=t.getAttributeNode(n);return s||t.setAttributeNode(s=t.ownerDocument.createAttribute(n)),s.value=i+=\"\",\"value\"===n||i===t.getAttribute(n)?i:e}},ue.expr.attrHandle.id=ue.expr.attrHandle.name=ue.expr.attrHandle.coords=function(t,i,n){var s;return n?e:(s=t.getAttributeNode(i))&&\"\"!==s.value?s.value:null},ue.valHooks.button={get:function(t,i){var n=t.getAttributeNode(i);return n&&n.specified?n.value:e},set:Se.set},ue.attrHooks.contenteditable={set:function(t,e,i){Se.set(t,\"\"===e?!1:e,i)}},ue.each([\"width\",\"height\"],function(t,i){ue.attrHooks[i]={set:function(t,n){return\"\"===n?(t.setAttribute(i,\"auto\"),n):e}}})),ue.support.hrefNormalized||ue.each([\"href\",\"src\"],function(t,e){ue.propHooks[e]={get:function(t){return t.getAttribute(e,4)}}}),ue.support.style||(ue.attrHooks.style={get:function(t){return t.style.cssText||e},set:function(t,e){return t.style.cssText=e+\"\"}}),ue.support.optSelected||(ue.propHooks.selected={get:function(t){var e=t.parentNode;return e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex),null}}),ue.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){ue.propFix[this.toLowerCase()]=this}),ue.support.enctype||(ue.propFix.enctype=\"encoding\"),ue.each([\"radio\",\"checkbox\"],function(){ue.valHooks[this]={set:function(t,i){return ue.isArray(i)?t.checked=ue.inArray(ue(t).val(),i)>=0:e}},ue.support.checkOn||(ue.valHooks[this].get=function(t){return null===t.getAttribute(\"value\")?\"on\":t.value})});var We=/^(?:input|select|textarea)$/i,Fe=/^key/,je=/^(?:mouse|contextmenu)|click/,$e=/^(?:focusinfocus|focusoutblur)$/,Le=/^([^.]*)(?:\\.(.+)|)$/;ue.event={global:{},add:function(t,i,n,s,a){var o,r,l,h,u,c,d,p,f,m,g,v=ue._data(t);if(v){for(n.handler&&(h=n,n=h.handler,a=h.selector),n.guid||(n.guid=ue.guid++),(r=v.events)||(r=v.events={}),(c=v.handle)||(c=v.handle=function(t){return typeof ue===V||t&&ue.event.triggered===t.type?e:ue.event.dispatch.apply(c.elem,arguments)},c.elem=t),i=(i||\"\").match(de)||[\"\"],l=i.length;l--;)o=Le.exec(i[l])||[],f=g=o[1],m=(o[2]||\"\").split(\".\").sort(),f&&(u=ue.event.special[f]||{},f=(a?u.delegateType:u.bindType)||f,u=ue.event.special[f]||{},d=ue.extend({type:f,origType:g,data:s,handler:n,guid:n.guid,selector:a,needsContext:a&&ue.expr.match.needsContext.test(a),namespace:m.join(\".\")},h),(p=r[f])||(p=r[f]=[],p.delegateCount=0,u.setup&&u.setup.call(t,s,m,c)!==!1||(t.addEventListener?t.addEventListener(f,c,!1):t.attachEvent&&t.attachEvent(\"on\"+f,c))),u.add&&(u.add.call(t,d),d.handler.guid||(d.handler.guid=n.guid)),a?p.splice(p.delegateCount++,0,d):p.push(d),ue.event.global[f]=!0);t=null}},remove:function(t,e,i,n,s){var a,o,r,l,h,u,c,d,p,f,m,g=ue.hasData(t)&&ue._data(t);if(g&&(u=g.events)){for(e=(e||\"\").match(de)||[\"\"],h=e.length;h--;)if(r=Le.exec(e[h])||[],p=m=r[1],f=(r[2]||\"\").split(\".\").sort(),p){for(c=ue.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,d=u[p]||[],r=r[2]&&RegExp(\"(^|\\\\.)\"+f.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),l=a=d.length;a--;)o=d[a],!s&&m!==o.origType||i&&i.guid!==o.guid||r&&!r.test(o.namespace)||n&&n!==o.selector&&(\"**\"!==n||!o.selector)||(d.splice(a,1),o.selector&&d.delegateCount--,c.remove&&c.remove.call(t,o));l&&!d.length&&(c.teardown&&c.teardown.call(t,f,g.handle)!==!1||ue.removeEvent(t,p,g.handle),delete u[p])}else for(p in u)ue.event.remove(t,p+e[h],i,n,!0);ue.isEmptyObject(u)&&(delete g.handle,ue._removeData(t,\"events\"))}},trigger:function(i,n,s,a){var o,r,l,h,u,c,d,p=[s||Q],f=le.call(i,\"type\")?i.type:i,m=le.call(i,\"namespace\")?i.namespace.split(\".\"):[];if(l=c=s=s||Q,3!==s.nodeType&&8!==s.nodeType&&!$e.test(f+ue.event.triggered)&&(f.indexOf(\".\")>=0&&(m=f.split(\".\"),f=m.shift(),m.sort()),r=0>f.indexOf(\":\")&&\"on\"+f,i=i[ue.expando]?i:new ue.Event(f,\"object\"==typeof i&&i),i.isTrigger=a?2:3,i.namespace=m.join(\".\"),i.namespace_re=i.namespace?RegExp(\"(^|\\\\.)\"+m.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,i.result=e,i.target||(i.target=s),n=null==n?[i]:ue.makeArray(n,[i]),u=ue.event.special[f]||{},a||!u.trigger||u.trigger.apply(s,n)!==!1)){if(!a&&!u.noBubble&&!ue.isWindow(s)){for(h=u.delegateType||f,$e.test(h+f)||(l=l.parentNode);l;l=l.parentNode)p.push(l),c=l;c===(s.ownerDocument||Q)&&p.push(c.defaultView||c.parentWindow||t)}for(d=0;(l=p[d++])&&!i.isPropagationStopped();)i.type=d>1?h:u.bindType||f,o=(ue._data(l,\"events\")||{})[i.type]&&ue._data(l,\"handle\"),o&&o.apply(l,n),o=r&&l[r],o&&ue.acceptData(l)&&o.apply&&o.apply(l,n)===!1&&i.preventDefault();if(i.type=f,!a&&!i.isDefaultPrevented()&&(!u._default||u._default.apply(p.pop(),n)===!1)&&ue.acceptData(s)&&r&&s[f]&&!ue.isWindow(s)){c=s[r],c&&(s[r]=null),ue.event.triggered=f;try{s[f]()}catch(g){}ue.event.triggered=e,c&&(s[r]=c)}return i.result}},dispatch:function(t){t=ue.event.fix(t);var i,n,s,a,o,r=[],l=ae.call(arguments),h=(ue._data(this,\"events\")||{})[t.type]||[],u=ue.event.special[t.type]||{};if(l[0]=t,t.delegateTarget=this,!u.preDispatch||u.preDispatch.call(this,t)!==!1){for(r=ue.event.handlers.call(this,t,h),i=0;(a=r[i++])&&!t.isPropagationStopped();)for(t.currentTarget=a.elem,o=0;(s=a.handlers[o++])&&!t.isImmediatePropagationStopped();)(!t.namespace_re||t.namespace_re.test(s.namespace))&&(t.handleObj=s,t.data=s.data,n=((ue.event.special[s.origType]||{}).handle||s.handler).apply(a.elem,l),n!==e&&(t.result=n)===!1&&(t.preventDefault(),t.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,t),t.result}},handlers:function(t,i){var n,s,a,o,r=[],l=i.delegateCount,h=t.target;if(l&&h.nodeType&&(!t.button||\"click\"!==t.type))for(;h!=this;h=h.parentNode||this)if(1===h.nodeType&&(h.disabled!==!0||\"click\"!==t.type)){for(a=[],o=0;l>o;o++)s=i[o],n=s.selector+\" \",a[n]===e&&(a[n]=s.needsContext?ue(n,this).index(h)>=0:ue.find(n,this,null,[h]).length),a[n]&&a.push(s);a.length&&r.push({elem:h,handlers:a})}return i.length>l&&r.push({elem:this,handlers:i.slice(l)}),r},fix:function(t){if(t[ue.expando])return t;var e,i,n,s=t.type,a=t,o=this.fixHooks[s];for(o||(this.fixHooks[s]=o=je.test(s)?this.mouseHooks:Fe.test(s)?this.keyHooks:{}),n=o.props?this.props.concat(o.props):this.props,t=new ue.Event(a),e=n.length;e--;)i=n[e],t[i]=a[i];return t.target||(t.target=a.srcElement||Q),3===t.target.nodeType&&(t.target=t.target.parentNode),t.metaKey=!!t.metaKey,o.filter?o.filter(t,a):t},props:\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:\"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(t,i){var n,s,a,o=i.button,r=i.fromElement;return null==t.pageX&&null!=i.clientX&&(s=t.target.ownerDocument||Q,a=s.documentElement,n=s.body,t.pageX=i.clientX+(a&&a.scrollLeft||n&&n.scrollLeft||0)-(a&&a.clientLeft||n&&n.clientLeft||0),t.pageY=i.clientY+(a&&a.scrollTop||n&&n.scrollTop||0)-(a&&a.clientTop||n&&n.clientTop||0)),!t.relatedTarget&&r&&(t.relatedTarget=r===t.target?i.toElement:r),t.which||o===e||(t.which=1&o?1:2&o?3:4&o?2:0),t}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==u()&&this.focus)try{return this.focus(),!1}catch(t){}},delegateType:\"focusin\"},blur:{trigger:function(){return this===u()&&this.blur?(this.blur(),!1):e},delegateType:\"focusout\"},click:{trigger:function(){return ue.nodeName(this,\"input\")&&\"checkbox\"===this.type&&this.click?(this.click(),!1):e},_default:function(t){return ue.nodeName(t.target,\"a\")}},beforeunload:{postDispatch:function(t){t.result!==e&&(t.originalEvent.returnValue=t.result)}}},simulate:function(t,e,i,n){var s=ue.extend(new ue.Event,i,{type:t,isSimulated:!0,originalEvent:{}});n?ue.event.trigger(s,null,e):ue.event.dispatch.call(e,s),s.isDefaultPrevented()&&i.preventDefault()}},ue.removeEvent=Q.removeEventListener?function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i,!1)}:function(t,e,i){var n=\"on\"+e;t.detachEvent&&(typeof t[n]===V&&(t[n]=null),t.detachEvent(n,i))},ue.Event=function(t,i){return this instanceof ue.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||t.returnValue===!1||t.getPreventDefault&&t.getPreventDefault()?l:h):this.type=t,i&&ue.extend(this,i),this.timeStamp=t&&t.timeStamp||ue.now(),this[ue.expando]=!0,e):new ue.Event(t,i)},ue.Event.prototype={isDefaultPrevented:h,isPropagationStopped:h,isImmediatePropagationStopped:h,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=l,t&&(t.preventDefault?t.preventDefault():t.returnValue=!1)},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=l,t&&(t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0)},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=l,this.stopPropagation()}},ue.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(t,e){ue.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,s=t.relatedTarget,a=t.handleObj;return(!s||s!==n&&!ue.contains(n,s))&&(t.type=a.origType,i=a.handler.apply(this,arguments),t.type=e),i}}}),ue.support.submitBubbles||(ue.event.special.submit={setup:function(){return ue.nodeName(this,\"form\")?!1:(ue.event.add(this,\"click._submit keypress._submit\",function(t){var i=t.target,n=ue.nodeName(i,\"input\")||ue.nodeName(i,\"button\")?i.form:e;n&&!ue._data(n,\"submitBubbles\")&&(ue.event.add(n,\"submit._submit\",function(t){t._submit_bubble=!0}),ue._data(n,\"submitBubbles\",!0))}),e)},postDispatch:function(t){t._submit_bubble&&(delete t._submit_bubble,this.parentNode&&!t.isTrigger&&ue.event.simulate(\"submit\",this.parentNode,t,!0))},teardown:function(){return ue.nodeName(this,\"form\")?!1:(ue.event.remove(this,\"._submit\"),e)}}),ue.support.changeBubbles||(ue.event.special.change={setup:function(){return We.test(this.nodeName)?((\"checkbox\"===this.type||\"radio\"===this.type)&&(ue.event.add(this,\"propertychange._change\",function(t){\"checked\"===t.originalEvent.propertyName&&(this._just_changed=!0)}),ue.event.add(this,\"click._change\",function(t){this._just_changed&&!t.isTrigger&&(this._just_changed=!1),ue.event.simulate(\"change\",this,t,!0)})),!1):(ue.event.add(this,\"beforeactivate._change\",function(t){var e=t.target;We.test(e.nodeName)&&!ue._data(e,\"changeBubbles\")&&(ue.event.add(e,\"change._change\",function(t){!this.parentNode||t.isSimulated||t.isTrigger||ue.event.simulate(\"change\",this.parentNode,t,!0)}),ue._data(e,\"changeBubbles\",!0))}),e)},handle:function(t){var i=t.target;return this!==i||t.isSimulated||t.isTrigger||\"radio\"!==i.type&&\"checkbox\"!==i.type?t.handleObj.handler.apply(this,arguments):e},teardown:function(){return ue.event.remove(this,\"._change\"),!We.test(this.nodeName)}}),ue.support.focusinBubbles||ue.each({focus:\"focusin\",blur:\"focusout\"},function(t,e){var i=0,n=function(t){ue.event.simulate(e,t.target,ue.event.fix(t),!0)};ue.event.special[e]={setup:function(){0===i++&&Q.addEventListener(t,n,!0)},teardown:function(){0===--i&&Q.removeEventListener(t,n,!0)}}}),ue.fn.extend({on:function(t,i,n,s,a){var o,r;if(\"object\"==typeof t){\"string\"!=typeof i&&(n=n||i,i=e);for(o in t)this.on(o,i,n,t[o],a);return this}if(null==n&&null==s?(s=i,n=i=e):null==s&&(\"string\"==typeof i?(s=n,n=e):(s=n,n=i,i=e)),s===!1)s=h;else if(!s)return this;return 1===a&&(r=s,s=function(t){return ue().off(t),r.apply(this,arguments)},s.guid=r.guid||(r.guid=ue.guid++)),this.each(function(){ue.event.add(this,t,s,n,i)})},one:function(t,e,i,n){return this.on(t,e,i,n,1)},off:function(t,i,n){var s,a;if(t&&t.preventDefault&&t.handleObj)return s=t.handleObj,ue(t.delegateTarget).off(s.namespace?s.origType+\".\"+s.namespace:s.origType,s.selector,s.handler),this;if(\"object\"==typeof t){for(a in t)this.off(a,i,t[a]);return this}return(i===!1||\"function\"==typeof i)&&(n=i,i=e),n===!1&&(n=h),this.each(function(){ue.event.remove(this,t,n,i)})},trigger:function(t,e){return this.each(function(){ue.event.trigger(t,e,this)})},triggerHandler:function(t,i){var n=this[0];return n?ue.event.trigger(t,i,n,!0):e}});var Re=/^.[^:#\\[\\.,]*$/,Be=/^(?:parents|prev(?:Until|All))/,qe=ue.expr.match.needsContext,Ye={children:!0,contents:!0,next:!0,prev:!0};ue.fn.extend({find:function(t){var e,i=[],n=this,s=n.length;if(\"string\"!=typeof t)return this.pushStack(ue(t).filter(function(){for(e=0;s>e;e++)if(ue.contains(n[e],this))return!0}));for(e=0;s>e;e++)ue.find(t,n[e],i);return i=this.pushStack(s>1?ue.unique(i):i),i.selector=this.selector?this.selector+\" \"+t:t,i},has:function(t){var e,i=ue(t,this),n=i.length;return this.filter(function(){for(e=0;n>e;e++)if(ue.contains(this,i[e]))return!0})},not:function(t){return this.pushStack(d(this,t||[],!0))},filter:function(t){return this.pushStack(d(this,t||[],!1))},is:function(t){return!!d(this,\"string\"==typeof t&&qe.test(t)?ue(t):t||[],!1).length},closest:function(t,e){for(var i,n=0,s=this.length,a=[],o=qe.test(t)||\"string\"!=typeof t?ue(t,e||this.context):0;s>n;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(11>i.nodeType&&(o?o.index(i)>-1:1===i.nodeType&&ue.find.matchesSelector(i,t))){i=a.push(i);break}return this.pushStack(a.length>1?ue.unique(a):a)},index:function(t){return t?\"string\"==typeof t?ue.inArray(this[0],ue(t)):ue.inArray(t.jquery?t[0]:t,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){var i=\"string\"==typeof t?ue(t,e):ue.makeArray(t&&t.nodeType?[t]:t),n=ue.merge(this.get(),i);return this.pushStack(ue.unique(n))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),ue.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return ue.dir(t,\"parentNode\")},parentsUntil:function(t,e,i){return ue.dir(t,\"parentNode\",i)},next:function(t){return c(t,\"nextSibling\")},prev:function(t){return c(t,\"previousSibling\")},nextAll:function(t){return ue.dir(t,\"nextSibling\")\n},prevAll:function(t){return ue.dir(t,\"previousSibling\")},nextUntil:function(t,e,i){return ue.dir(t,\"nextSibling\",i)},prevUntil:function(t,e,i){return ue.dir(t,\"previousSibling\",i)},siblings:function(t){return ue.sibling((t.parentNode||{}).firstChild,t)},children:function(t){return ue.sibling(t.firstChild)},contents:function(t){return ue.nodeName(t,\"iframe\")?t.contentDocument||t.contentWindow.document:ue.merge([],t.childNodes)}},function(t,e){ue.fn[t]=function(i,n){var s=ue.map(this,e,i);return\"Until\"!==t.slice(-5)&&(n=i),n&&\"string\"==typeof n&&(s=ue.filter(n,s)),this.length>1&&(Ye[t]||(s=ue.unique(s)),Be.test(t)&&(s=s.reverse())),this.pushStack(s)}}),ue.extend({filter:function(t,e,i){var n=e[0];return i&&(t=\":not(\"+t+\")\"),1===e.length&&1===n.nodeType?ue.find.matchesSelector(n,t)?[n]:[]:ue.find.matches(t,ue.grep(e,function(t){return 1===t.nodeType}))},dir:function(t,i,n){for(var s=[],a=t[i];a&&9!==a.nodeType&&(n===e||1!==a.nodeType||!ue(a).is(n));)1===a.nodeType&&s.push(a),a=a[i];return s},sibling:function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i}});var Ue=\"abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video\",Ke=/ jQuery\\d+=\"(?:null|\\d+)\"/g,Ve=RegExp(\"<(?:\"+Ue+\")[\\\\s/>]\",\"i\"),Xe=/^\\s+/,Qe=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,Ge=/<([\\w:]+)/,Je=/<tbody/i,Ze=/<|&#?\\w+;/,ti=/<(?:script|style|link)/i,ei=/^(?:checkbox|radio)$/i,ii=/checked\\s*(?:[^=]|=\\s*.checked.)/i,ni=/^$|\\/(?:java|ecma)script/i,si=/^true\\/(.*)/,ai=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,oi={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],area:[1,\"<map>\",\"</map>\"],param:[1,\"<object>\",\"</object>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:ue.support.htmlSerialize?[0,\"\",\"\"]:[1,\"X<div>\",\"</div>\"]},ri=p(Q),li=ri.appendChild(Q.createElement(\"div\"));oi.optgroup=oi.option,oi.tbody=oi.tfoot=oi.colgroup=oi.caption=oi.thead,oi.th=oi.td,ue.fn.extend({text:function(t){return ue.access(this,function(t){return t===e?ue.text(this):this.empty().append((this[0]&&this[0].ownerDocument||Q).createTextNode(t))},null,t,arguments.length)},append:function(){return this.domManip(arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=f(this,t);e.appendChild(t)}})},prepend:function(){return this.domManip(arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=f(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return this.domManip(arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return this.domManip(arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},remove:function(t,e){for(var i,n=t?ue.filter(t,this):this,s=0;null!=(i=n[s]);s++)e||1!==i.nodeType||ue.cleanData(y(i)),i.parentNode&&(e&&ue.contains(i.ownerDocument,i)&&v(y(i,\"script\")),i.parentNode.removeChild(i));return this},empty:function(){for(var t,e=0;null!=(t=this[e]);e++){for(1===t.nodeType&&ue.cleanData(y(t,!1));t.firstChild;)t.removeChild(t.firstChild);t.options&&ue.nodeName(t,\"select\")&&(t.options.length=0)}return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return ue.clone(this,t,e)})},html:function(t){return ue.access(this,function(t){var i=this[0]||{},n=0,s=this.length;if(t===e)return 1===i.nodeType?i.innerHTML.replace(Ke,\"\"):e;if(!(\"string\"!=typeof t||ti.test(t)||!ue.support.htmlSerialize&&Ve.test(t)||!ue.support.leadingWhitespace&&Xe.test(t)||oi[(Ge.exec(t)||[\"\",\"\"])[1].toLowerCase()])){t=t.replace(Qe,\"<$1></$2>\");try{for(;s>n;n++)i=this[n]||{},1===i.nodeType&&(ue.cleanData(y(i,!1)),i.innerHTML=t);i=0}catch(a){}}i&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=ue.map(this,function(t){return[t.nextSibling,t.parentNode]}),e=0;return this.domManip(arguments,function(i){var n=t[e++],s=t[e++];s&&(n&&n.parentNode!==s&&(n=this.nextSibling),ue(this).remove(),s.insertBefore(i,n))},!0),e?this:this.remove()},detach:function(t){return this.remove(t,!0)},domManip:function(t,e,i){t=ne.apply([],t);var n,s,a,o,r,l,h=0,u=this.length,c=this,d=u-1,p=t[0],f=ue.isFunction(p);if(f||!(1>=u||\"string\"!=typeof p||ue.support.checkClone)&&ii.test(p))return this.each(function(n){var s=c.eq(n);f&&(t[0]=p.call(this,n,s.html())),s.domManip(t,e,i)});if(u&&(l=ue.buildFragment(t,this[0].ownerDocument,!1,!i&&this),n=l.firstChild,1===l.childNodes.length&&(l=n),n)){for(o=ue.map(y(l,\"script\"),m),a=o.length;u>h;h++)s=l,h!==d&&(s=ue.clone(s,!0,!0),a&&ue.merge(o,y(s,\"script\"))),e.call(this[h],s,h);if(a)for(r=o[o.length-1].ownerDocument,ue.map(o,g),h=0;a>h;h++)s=o[h],ni.test(s.type||\"\")&&!ue._data(s,\"globalEval\")&&ue.contains(r,s)&&(s.src?ue._evalUrl(s.src):ue.globalEval((s.text||s.textContent||s.innerHTML||\"\").replace(ai,\"\")));l=n=null}return this}}),ue.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(t,e){ue.fn[t]=function(t){for(var i,n=0,s=[],a=ue(t),o=a.length-1;o>=n;n++)i=n===o?this:this.clone(!0),ue(a[n])[e](i),se.apply(s,i.get());return this.pushStack(s)}}),ue.extend({clone:function(t,e,i){var n,s,a,o,r,l=ue.contains(t.ownerDocument,t);if(ue.support.html5Clone||ue.isXMLDoc(t)||!Ve.test(\"<\"+t.nodeName+\">\")?a=t.cloneNode(!0):(li.innerHTML=t.outerHTML,li.removeChild(a=li.firstChild)),!(ue.support.noCloneEvent&&ue.support.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||ue.isXMLDoc(t)))for(n=y(a),r=y(t),o=0;null!=(s=r[o]);++o)n[o]&&b(s,n[o]);if(e)if(i)for(r=r||y(t),n=n||y(a),o=0;null!=(s=r[o]);o++)_(s,n[o]);else _(t,a);return n=y(a,\"script\"),n.length>0&&v(n,!l&&y(t,\"script\")),n=r=s=null,a},buildFragment:function(t,e,i,n){for(var s,a,o,r,l,h,u,c=t.length,d=p(e),f=[],m=0;c>m;m++)if(a=t[m],a||0===a)if(\"object\"===ue.type(a))ue.merge(f,a.nodeType?[a]:a);else if(Ze.test(a)){for(r=r||d.appendChild(e.createElement(\"div\")),l=(Ge.exec(a)||[\"\",\"\"])[1].toLowerCase(),u=oi[l]||oi._default,r.innerHTML=u[1]+a.replace(Qe,\"<$1></$2>\")+u[2],s=u[0];s--;)r=r.lastChild;if(!ue.support.leadingWhitespace&&Xe.test(a)&&f.push(e.createTextNode(Xe.exec(a)[0])),!ue.support.tbody)for(a=\"table\"!==l||Je.test(a)?\"<table>\"!==u[1]||Je.test(a)?0:r:r.firstChild,s=a&&a.childNodes.length;s--;)ue.nodeName(h=a.childNodes[s],\"tbody\")&&!h.childNodes.length&&a.removeChild(h);for(ue.merge(f,r.childNodes),r.textContent=\"\";r.firstChild;)r.removeChild(r.firstChild);r=d.lastChild}else f.push(e.createTextNode(a));for(r&&d.removeChild(r),ue.support.appendChecked||ue.grep(y(f,\"input\"),x),m=0;a=f[m++];)if((!n||-1===ue.inArray(a,n))&&(o=ue.contains(a.ownerDocument,a),r=y(d.appendChild(a),\"script\"),o&&v(r),i))for(s=0;a=r[s++];)ni.test(a.type||\"\")&&i.push(a);return r=null,d},cleanData:function(t,e){for(var i,n,s,a,o=0,r=ue.expando,l=ue.cache,h=ue.support.deleteExpando,u=ue.event.special;null!=(i=t[o]);o++)if((e||ue.acceptData(i))&&(s=i[r],a=s&&l[s])){if(a.events)for(n in a.events)u[n]?ue.event.remove(i,n):ue.removeEvent(i,n,a.handle);l[s]&&(delete l[s],h?delete i[r]:typeof i.removeAttribute!==V?i.removeAttribute(r):i[r]=null,ee.push(s))}},_evalUrl:function(t){return ue.ajax({url:t,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})}}),ue.fn.extend({wrapAll:function(t){if(ue.isFunction(t))return this.each(function(e){ue(this).wrapAll(t.call(this,e))});if(this[0]){var e=ue(t,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstChild&&1===t.firstChild.nodeType;)t=t.firstChild;return t}).append(this)}return this},wrapInner:function(t){return this.each(ue.isFunction(t)?function(e){ue(this).wrapInner(t.call(this,e))}:function(){var e=ue(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=ue.isFunction(t);return this.each(function(i){ue(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(){return this.parent().each(function(){ue.nodeName(this,\"body\")||ue(this).replaceWith(this.childNodes)}).end()}});var hi,ui,ci,di=/alpha\\([^)]*\\)/i,pi=/opacity\\s*=\\s*([^)]*)/,fi=/^(top|right|bottom|left)$/,mi=/^(none|table(?!-c[ea]).+)/,gi=/^margin/,vi=RegExp(\"^(\"+ce+\")(.*)$\",\"i\"),_i=RegExp(\"^(\"+ce+\")(?!px)[a-z%]+$\",\"i\"),bi=RegExp(\"^([+-])=(\"+ce+\")\",\"i\"),yi={BODY:\"block\"},xi={position:\"absolute\",visibility:\"hidden\",display:\"block\"},wi={letterSpacing:0,fontWeight:400},ki=[\"Top\",\"Right\",\"Bottom\",\"Left\"],Di=[\"Webkit\",\"O\",\"Moz\",\"ms\"];ue.fn.extend({css:function(t,i){return ue.access(this,function(t,i,n){var s,a,o={},r=0;if(ue.isArray(i)){for(a=ui(t),s=i.length;s>r;r++)o[i[r]]=ue.css(t,i[r],!1,a);return o}return n!==e?ue.style(t,i,n):ue.css(t,i)},t,i,arguments.length>1)},show:function(){return D(this,!0)},hide:function(){return D(this)},toggle:function(t){return\"boolean\"==typeof t?t?this.show():this.hide():this.each(function(){k(this)?ue(this).show():ue(this).hide()})}}),ue.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=ci(t,\"opacity\");return\"\"===i?\"1\":i}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":ue.support.cssFloat?\"cssFloat\":\"styleFloat\"},style:function(t,i,n,s){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var a,o,r,l=ue.camelCase(i),h=t.style;if(i=ue.cssProps[l]||(ue.cssProps[l]=w(h,l)),r=ue.cssHooks[i]||ue.cssHooks[l],n===e)return r&&\"get\"in r&&(a=r.get(t,!1,s))!==e?a:h[i];if(o=typeof n,\"string\"===o&&(a=bi.exec(n))&&(n=(a[1]+1)*a[2]+parseFloat(ue.css(t,i)),o=\"number\"),!(null==n||\"number\"===o&&isNaN(n)||(\"number\"!==o||ue.cssNumber[l]||(n+=\"px\"),ue.support.clearCloneStyle||\"\"!==n||0!==i.indexOf(\"background\")||(h[i]=\"inherit\"),r&&\"set\"in r&&(n=r.set(t,n,s))===e)))try{h[i]=n}catch(u){}}},css:function(t,i,n,s){var a,o,r,l=ue.camelCase(i);return i=ue.cssProps[l]||(ue.cssProps[l]=w(t.style,l)),r=ue.cssHooks[i]||ue.cssHooks[l],r&&\"get\"in r&&(o=r.get(t,!0,n)),o===e&&(o=ci(t,i,s)),\"normal\"===o&&i in wi&&(o=wi[i]),\"\"===n||n?(a=parseFloat(o),n===!0||ue.isNumeric(a)?a||0:o):o}}),t.getComputedStyle?(ui=function(e){return t.getComputedStyle(e,null)},ci=function(t,i,n){var s,a,o,r=n||ui(t),l=r?r.getPropertyValue(i)||r[i]:e,h=t.style;return r&&(\"\"!==l||ue.contains(t.ownerDocument,t)||(l=ue.style(t,i)),_i.test(l)&&gi.test(i)&&(s=h.width,a=h.minWidth,o=h.maxWidth,h.minWidth=h.maxWidth=h.width=l,l=r.width,h.width=s,h.minWidth=a,h.maxWidth=o)),l}):Q.documentElement.currentStyle&&(ui=function(t){return t.currentStyle},ci=function(t,i,n){var s,a,o,r=n||ui(t),l=r?r[i]:e,h=t.style;return null==l&&h&&h[i]&&(l=h[i]),_i.test(l)&&!fi.test(i)&&(s=h.left,a=t.runtimeStyle,o=a&&a.left,o&&(a.left=t.currentStyle.left),h.left=\"fontSize\"===i?\"1em\":l,l=h.pixelLeft+\"px\",h.left=s,o&&(a.left=o)),\"\"===l?\"auto\":l}),ue.each([\"height\",\"width\"],function(t,i){ue.cssHooks[i]={get:function(t,n,s){return n?0===t.offsetWidth&&mi.test(ue.css(t,\"display\"))?ue.swap(t,xi,function(){return M(t,i,s)}):M(t,i,s):e},set:function(t,e,n){var s=n&&ui(t);return C(t,e,n?T(t,i,n,ue.support.boxSizing&&\"border-box\"===ue.css(t,\"boxSizing\",!1,s),s):0)}}}),ue.support.opacity||(ue.cssHooks.opacity={get:function(t,e){return pi.test((e&&t.currentStyle?t.currentStyle.filter:t.style.filter)||\"\")?.01*parseFloat(RegExp.$1)+\"\":e?\"1\":\"\"},set:function(t,e){var i=t.style,n=t.currentStyle,s=ue.isNumeric(e)?\"alpha(opacity=\"+100*e+\")\":\"\",a=n&&n.filter||i.filter||\"\";i.zoom=1,(e>=1||\"\"===e)&&\"\"===ue.trim(a.replace(di,\"\"))&&i.removeAttribute&&(i.removeAttribute(\"filter\"),\"\"===e||n&&!n.filter)||(i.filter=di.test(a)?a.replace(di,s):a+\" \"+s)}}),ue(function(){ue.support.reliableMarginRight||(ue.cssHooks.marginRight={get:function(t,i){return i?ue.swap(t,{display:\"inline-block\"},ci,[t,\"marginRight\"]):e}}),!ue.support.pixelPosition&&ue.fn.position&&ue.each([\"top\",\"left\"],function(t,i){ue.cssHooks[i]={get:function(t,n){return n?(n=ci(t,i),_i.test(n)?ue(t).position()[i]+\"px\":n):e}}})}),ue.expr&&ue.expr.filters&&(ue.expr.filters.hidden=function(t){return 0>=t.offsetWidth&&0>=t.offsetHeight||!ue.support.reliableHiddenOffsets&&\"none\"===(t.style&&t.style.display||ue.css(t,\"display\"))},ue.expr.filters.visible=function(t){return!ue.expr.filters.hidden(t)}),ue.each({margin:\"\",padding:\"\",border:\"Width\"},function(t,e){ue.cssHooks[t+e]={expand:function(i){for(var n=0,s={},a=\"string\"==typeof i?i.split(\" \"):[i];4>n;n++)s[t+ki[n]+e]=a[n]||a[n-2]||a[0];return s}},gi.test(t)||(ue.cssHooks[t+e].set=C)});var Ci=/%20/g,Ti=/\\[\\]$/,Mi=/\\r?\\n/g,Si=/^(?:submit|button|image|reset|file)$/i,Ii=/^(?:input|select|textarea|keygen)/i;ue.fn.extend({serialize:function(){return ue.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=ue.prop(this,\"elements\");return t?ue.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!ue(this).is(\":disabled\")&&Ii.test(this.nodeName)&&!Si.test(t)&&(this.checked||!ei.test(t))}).map(function(t,e){var i=ue(this).val();return null==i?null:ue.isArray(i)?ue.map(i,function(t){return{name:e.name,value:t.replace(Mi,\"\\r\\n\")}}):{name:e.name,value:i.replace(Mi,\"\\r\\n\")}}).get()}}),ue.param=function(t,i){var n,s=[],a=function(t,e){e=ue.isFunction(e)?e():null==e?\"\":e,s[s.length]=encodeURIComponent(t)+\"=\"+encodeURIComponent(e)};if(i===e&&(i=ue.ajaxSettings&&ue.ajaxSettings.traditional),ue.isArray(t)||t.jquery&&!ue.isPlainObject(t))ue.each(t,function(){a(this.name,this.value)});else for(n in t)N(n,t[n],i,a);return s.join(\"&\").replace(Ci,\"+\")},ue.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(t,e){ue.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),ue.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)},bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,\"**\"):this.off(e,t||\"**\",i)}});var Ni,Pi,zi=ue.now(),Ai=/\\?/,Ei=/#.*$/,Oi=/([?&])_=[^&]*/,Hi=/^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/gm,Wi=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Fi=/^(?:GET|HEAD)$/,ji=/^\\/\\//,$i=/^([\\w.+-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+)|)|)/,Li=ue.fn.load,Ri={},Bi={},qi=\"*/\".concat(\"*\");try{Pi=X.href}catch(Yi){Pi=Q.createElement(\"a\"),Pi.href=\"\",Pi=Pi.href}Ni=$i.exec(Pi.toLowerCase())||[],ue.fn.load=function(t,i,n){if(\"string\"!=typeof t&&Li)return Li.apply(this,arguments);var s,a,o,r=this,l=t.indexOf(\" \");return l>=0&&(s=t.slice(l,t.length),t=t.slice(0,l)),ue.isFunction(i)?(n=i,i=e):i&&\"object\"==typeof i&&(o=\"POST\"),r.length>0&&ue.ajax({url:t,type:o,dataType:\"html\",data:i}).done(function(t){a=arguments,r.html(s?ue(\"<div>\").append(ue.parseHTML(t)).find(s):t)}).complete(n&&function(t,e){r.each(n,a||[t.responseText,e,t])}),this},ue.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(t,e){ue.fn[e]=function(t){return this.on(e,t)}}),ue.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Pi,type:\"GET\",isLocal:Wi.test(Ni[1]),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":qi,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":ue.parseJSON,\"text xml\":ue.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?A(A(t,ue.ajaxSettings),e):A(ue.ajaxSettings,t)},ajaxPrefilter:P(Ri),ajaxTransport:P(Bi),ajax:function(t,i){function n(t,i,n,s){var a,c,_,b,x,k=i;2!==y&&(y=2,l&&clearTimeout(l),u=e,r=s||\"\",w.readyState=t>0?4:0,a=t>=200&&300>t||304===t,n&&(b=E(d,w,n)),b=O(d,b,w,a),a?(d.ifModified&&(x=w.getResponseHeader(\"Last-Modified\"),x&&(ue.lastModified[o]=x),x=w.getResponseHeader(\"etag\"),x&&(ue.etag[o]=x)),204===t||\"HEAD\"===d.type?k=\"nocontent\":304===t?k=\"notmodified\":(k=b.state,c=b.data,_=b.error,a=!_)):(_=k,(t||!k)&&(k=\"error\",0>t&&(t=0))),w.status=t,w.statusText=(i||k)+\"\",a?m.resolveWith(p,[c,k,w]):m.rejectWith(p,[w,k,_]),w.statusCode(v),v=e,h&&f.trigger(a?\"ajaxSuccess\":\"ajaxError\",[w,d,a?c:_]),g.fireWith(p,[w,k]),h&&(f.trigger(\"ajaxComplete\",[w,d]),--ue.active||ue.event.trigger(\"ajaxStop\")))}\"object\"==typeof t&&(i=t,t=e),i=i||{};var s,a,o,r,l,h,u,c,d=ue.ajaxSetup({},i),p=d.context||d,f=d.context&&(p.nodeType||p.jquery)?ue(p):ue.event,m=ue.Deferred(),g=ue.Callbacks(\"once memory\"),v=d.statusCode||{},_={},b={},y=0,x=\"canceled\",w={readyState:0,getResponseHeader:function(t){var e;if(2===y){if(!c)for(c={};e=Hi.exec(r);)c[e[1].toLowerCase()]=e[2];e=c[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===y?r:null},setRequestHeader:function(t,e){var i=t.toLowerCase();return y||(t=b[i]=b[i]||t,_[t]=e),this},overrideMimeType:function(t){return y||(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>y)for(e in t)v[e]=[v[e],t[e]];else w.always(t[w.status]);return this},abort:function(t){var e=t||x;return u&&u.abort(e),n(0,e),this}};if(m.promise(w).complete=g.add,w.success=w.done,w.error=w.fail,d.url=((t||d.url||Pi)+\"\").replace(Ei,\"\").replace(ji,Ni[1]+\"//\"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=ue.trim(d.dataType||\"*\").toLowerCase().match(de)||[\"\"],null==d.crossDomain&&(s=$i.exec(d.url.toLowerCase()),d.crossDomain=!(!s||s[1]===Ni[1]&&s[2]===Ni[2]&&(s[3]||(\"http:\"===s[1]?\"80\":\"443\"))===(Ni[3]||(\"http:\"===Ni[1]?\"80\":\"443\")))),d.data&&d.processData&&\"string\"!=typeof d.data&&(d.data=ue.param(d.data,d.traditional)),z(Ri,d,i,w),2===y)return w;h=d.global,h&&0===ue.active++&&ue.event.trigger(\"ajaxStart\"),d.type=d.type.toUpperCase(),d.hasContent=!Fi.test(d.type),o=d.url,d.hasContent||(d.data&&(o=d.url+=(Ai.test(o)?\"&\":\"?\")+d.data,delete d.data),d.cache===!1&&(d.url=Oi.test(o)?o.replace(Oi,\"$1_=\"+zi++):o+(Ai.test(o)?\"&\":\"?\")+\"_=\"+zi++)),d.ifModified&&(ue.lastModified[o]&&w.setRequestHeader(\"If-Modified-Since\",ue.lastModified[o]),ue.etag[o]&&w.setRequestHeader(\"If-None-Match\",ue.etag[o])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&w.setRequestHeader(\"Content-Type\",d.contentType),w.setRequestHeader(\"Accept\",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+(\"*\"!==d.dataTypes[0]?\", \"+qi+\"; q=0.01\":\"\"):d.accepts[\"*\"]);for(a in d.headers)w.setRequestHeader(a,d.headers[a]);if(d.beforeSend&&(d.beforeSend.call(p,w,d)===!1||2===y))return w.abort();x=\"abort\";for(a in{success:1,error:1,complete:1})w[a](d[a]);if(u=z(Bi,d,i,w)){w.readyState=1,h&&f.trigger(\"ajaxSend\",[w,d]),d.async&&d.timeout>0&&(l=setTimeout(function(){w.abort(\"timeout\")},d.timeout));try{y=1,u.send(_,n)}catch(k){if(!(2>y))throw k;n(-1,k)}}else n(-1,\"No Transport\");return w},getJSON:function(t,e,i){return ue.get(t,e,i,\"json\")},getScript:function(t,i){return ue.get(t,e,i,\"script\")}}),ue.each([\"get\",\"post\"],function(t,i){ue[i]=function(t,n,s,a){return ue.isFunction(n)&&(a=a||s,s=n,n=e),ue.ajax({url:t,type:i,dataType:a,data:n,success:s})}}),ue.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/(?:java|ecma)script/},converters:{\"text script\":function(t){return ue.globalEval(t),t}}}),ue.ajaxPrefilter(\"script\",function(t){t.cache===e&&(t.cache=!1),t.crossDomain&&(t.type=\"GET\",t.global=!1)}),ue.ajaxTransport(\"script\",function(t){if(t.crossDomain){var i,n=Q.head||ue(\"head\")[0]||Q.documentElement;return{send:function(e,s){i=Q.createElement(\"script\"),i.async=!0,t.scriptCharset&&(i.charset=t.scriptCharset),i.src=t.url,i.onload=i.onreadystatechange=function(t,e){(e||!i.readyState||/loaded|complete/.test(i.readyState))&&(i.onload=i.onreadystatechange=null,i.parentNode&&i.parentNode.removeChild(i),i=null,e||s(200,\"success\"))},n.insertBefore(i,n.firstChild)},abort:function(){i&&i.onload(e,!0)}}}});var Ui=[],Ki=/(=)\\?(?=&|$)|\\?\\?/;ue.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var t=Ui.pop()||ue.expando+\"_\"+zi++;return this[t]=!0,t}}),ue.ajaxPrefilter(\"json jsonp\",function(i,n,s){var a,o,r,l=i.jsonp!==!1&&(Ki.test(i.url)?\"url\":\"string\"==typeof i.data&&!(i.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Ki.test(i.data)&&\"data\");return l||\"jsonp\"===i.dataTypes[0]?(a=i.jsonpCallback=ue.isFunction(i.jsonpCallback)?i.jsonpCallback():i.jsonpCallback,l?i[l]=i[l].replace(Ki,\"$1\"+a):i.jsonp!==!1&&(i.url+=(Ai.test(i.url)?\"&\":\"?\")+i.jsonp+\"=\"+a),i.converters[\"script json\"]=function(){return r||ue.error(a+\" was not called\"),r[0]},i.dataTypes[0]=\"json\",o=t[a],t[a]=function(){r=arguments},s.always(function(){t[a]=o,i[a]&&(i.jsonpCallback=n.jsonpCallback,Ui.push(a)),r&&ue.isFunction(o)&&o(r[0]),r=o=e}),\"script\"):e});var Vi,Xi,Qi=0,Gi=t.ActiveXObject&&function(){var t;for(t in Vi)Vi[t](e,!0)};ue.ajaxSettings.xhr=t.ActiveXObject?function(){return!this.isLocal&&H()||W()}:H,Xi=ue.ajaxSettings.xhr(),ue.support.cors=!!Xi&&\"withCredentials\"in Xi,Xi=ue.support.ajax=!!Xi,Xi&&ue.ajaxTransport(function(i){if(!i.crossDomain||ue.support.cors){var n;return{send:function(s,a){var o,r,l=i.xhr();if(i.username?l.open(i.type,i.url,i.async,i.username,i.password):l.open(i.type,i.url,i.async),i.xhrFields)for(r in i.xhrFields)l[r]=i.xhrFields[r];i.mimeType&&l.overrideMimeType&&l.overrideMimeType(i.mimeType),i.crossDomain||s[\"X-Requested-With\"]||(s[\"X-Requested-With\"]=\"XMLHttpRequest\");try{for(r in s)l.setRequestHeader(r,s[r])}catch(h){}l.send(i.hasContent&&i.data||null),n=function(t,s){var r,h,u,c;try{if(n&&(s||4===l.readyState))if(n=e,o&&(l.onreadystatechange=ue.noop,Gi&&delete Vi[o]),s)4!==l.readyState&&l.abort();else{c={},r=l.status,h=l.getAllResponseHeaders(),\"string\"==typeof l.responseText&&(c.text=l.responseText);try{u=l.statusText}catch(d){u=\"\"}r||!i.isLocal||i.crossDomain?1223===r&&(r=204):r=c.text?200:404}}catch(p){s||a(-1,p)}c&&a(r,u,c,h)},i.async?4===l.readyState?setTimeout(n):(o=++Qi,Gi&&(Vi||(Vi={},ue(t).unload(Gi)),Vi[o]=n),l.onreadystatechange=n):n()},abort:function(){n&&n(e,!0)}}}});var Ji,Zi,tn=/^(?:toggle|show|hide)$/,en=RegExp(\"^(?:([+-])=|)(\"+ce+\")([a-z%]*)$\",\"i\"),nn=/queueHooks$/,sn=[R],an={\"*\":[function(t,e){var i=this.createTween(t,e),n=i.cur(),s=en.exec(e),a=s&&s[3]||(ue.cssNumber[t]?\"\":\"px\"),o=(ue.cssNumber[t]||\"px\"!==a&&+n)&&en.exec(ue.css(i.elem,t)),r=1,l=20;if(o&&o[3]!==a){a=a||o[3],s=s||[],o=+n||1;do r=r||\".5\",o/=r,ue.style(i.elem,t,o+a);while(r!==(r=i.cur()/n)&&1!==r&&--l)}return s&&(o=i.start=+o||+n||0,i.unit=a,i.end=s[1]?o+(s[1]+1)*s[2]:+s[2]),i}]};ue.Animation=ue.extend($,{tweener:function(t,e){ue.isFunction(t)?(e=t,t=[\"*\"]):t=t.split(\" \");for(var i,n=0,s=t.length;s>n;n++)i=t[n],an[i]=an[i]||[],an[i].unshift(e)},prefilter:function(t,e){e?sn.unshift(t):sn.push(t)}}),ue.Tween=B,B.prototype={constructor:B,init:function(t,e,i,n,s,a){this.elem=t,this.prop=i,this.easing=s||\"swing\",this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=a||(ue.cssNumber[i]?\"\":\"px\")},cur:function(){var t=B.propHooks[this.prop];return t&&t.get?t.get(this):B.propHooks._default.get(this)},run:function(t){var e,i=B.propHooks[this.prop];return this.pos=e=this.options.duration?ue.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):B.propHooks._default.set(this),this}},B.prototype.init.prototype=B.prototype,B.propHooks={_default:{get:function(t){var e;return null==t.elem[t.prop]||t.elem.style&&null!=t.elem.style[t.prop]?(e=ue.css(t.elem,t.prop,\"\"),e&&\"auto\"!==e?e:0):t.elem[t.prop]},set:function(t){ue.fx.step[t.prop]?ue.fx.step[t.prop](t):t.elem.style&&(null!=t.elem.style[ue.cssProps[t.prop]]||ue.cssHooks[t.prop])?ue.style(t.elem,t.prop,t.now+t.unit):t.elem[t.prop]=t.now}}},B.propHooks.scrollTop=B.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},ue.each([\"toggle\",\"show\",\"hide\"],function(t,e){var i=ue.fn[e];ue.fn[e]=function(t,n,s){return null==t||\"boolean\"==typeof t?i.apply(this,arguments):this.animate(q(e,!0),t,n,s)}}),ue.fn.extend({fadeTo:function(t,e,i,n){return this.filter(k).css(\"opacity\",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var s=ue.isEmptyObject(t),a=ue.speed(e,i,n),o=function(){var e=$(this,ue.extend({},t),a);(s||ue._data(this,\"finish\"))&&e.stop(!0)};return o.finish=o,s||a.queue===!1?this.each(o):this.queue(a.queue,o)},stop:function(t,i,n){var s=function(t){var e=t.stop;delete t.stop,e(n)};return\"string\"!=typeof t&&(n=i,i=t,t=e),i&&t!==!1&&this.queue(t||\"fx\",[]),this.each(function(){var e=!0,i=null!=t&&t+\"queueHooks\",a=ue.timers,o=ue._data(this);if(i)o[i]&&o[i].stop&&s(o[i]);else for(i in o)o[i]&&o[i].stop&&nn.test(i)&&s(o[i]);for(i=a.length;i--;)a[i].elem!==this||null!=t&&a[i].queue!==t||(a[i].anim.stop(n),e=!1,a.splice(i,1));(e||!n)&&ue.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||\"fx\"),this.each(function(){var e,i=ue._data(this),n=i[t+\"queue\"],s=i[t+\"queueHooks\"],a=ue.timers,o=n?n.length:0;for(i.finish=!0,ue.queue(this,t,[]),s&&s.stop&&s.stop.call(this,!0),e=a.length;e--;)a[e].elem===this&&a[e].queue===t&&(a[e].anim.stop(!0),a.splice(e,1));for(e=0;o>e;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),ue.each({slideDown:q(\"show\"),slideUp:q(\"hide\"),slideToggle:q(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(t,e){ue.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),ue.speed=function(t,e,i){var n=t&&\"object\"==typeof t?ue.extend({},t):{complete:i||!i&&e||ue.isFunction(t)&&t,duration:t,easing:i&&e||e&&!ue.isFunction(e)&&e};return n.duration=ue.fx.off?0:\"number\"==typeof n.duration?n.duration:n.duration in ue.fx.speeds?ue.fx.speeds[n.duration]:ue.fx.speeds._default,(null==n.queue||n.queue===!0)&&(n.queue=\"fx\"),n.old=n.complete,n.complete=function(){ue.isFunction(n.old)&&n.old.call(this),n.queue&&ue.dequeue(this,n.queue)},n},ue.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2}},ue.timers=[],ue.fx=B.prototype.init,ue.fx.tick=function(){var t,i=ue.timers,n=0;for(Ji=ue.now();i.length>n;n++)t=i[n],t()||i[n]!==t||i.splice(n--,1);i.length||ue.fx.stop(),Ji=e},ue.fx.timer=function(t){t()&&ue.timers.push(t)&&ue.fx.start()},ue.fx.interval=13,ue.fx.start=function(){Zi||(Zi=setInterval(ue.fx.tick,ue.fx.interval))},ue.fx.stop=function(){clearInterval(Zi),Zi=null},ue.fx.speeds={slow:600,fast:200,_default:400},ue.fx.step={},ue.expr&&ue.expr.filters&&(ue.expr.filters.animated=function(t){return ue.grep(ue.timers,function(e){return t===e.elem}).length}),ue.fn.offset=function(t){if(arguments.length)return t===e?this:this.each(function(e){ue.offset.setOffset(this,t,e)});var i,n,s={top:0,left:0},a=this[0],o=a&&a.ownerDocument;return o?(i=o.documentElement,ue.contains(i,a)?(typeof a.getBoundingClientRect!==V&&(s=a.getBoundingClientRect()),n=Y(o),{top:s.top+(n.pageYOffset||i.scrollTop)-(i.clientTop||0),left:s.left+(n.pageXOffset||i.scrollLeft)-(i.clientLeft||0)}):s):void 0},ue.offset={setOffset:function(t,e,i){var n=ue.css(t,\"position\");\"static\"===n&&(t.style.position=\"relative\");var s,a,o=ue(t),r=o.offset(),l=ue.css(t,\"top\"),h=ue.css(t,\"left\"),u=(\"absolute\"===n||\"fixed\"===n)&&ue.inArray(\"auto\",[l,h])>-1,c={},d={};u?(d=o.position(),s=d.top,a=d.left):(s=parseFloat(l)||0,a=parseFloat(h)||0),ue.isFunction(e)&&(e=e.call(t,i,r)),null!=e.top&&(c.top=e.top-r.top+s),null!=e.left&&(c.left=e.left-r.left+a),\"using\"in e?e.using.call(t,c):o.css(c)}},ue.fn.extend({position:function(){if(this[0]){var t,e,i={top:0,left:0},n=this[0];return\"fixed\"===ue.css(n,\"position\")?e=n.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),ue.nodeName(t[0],\"html\")||(i=t.offset()),i.top+=ue.css(t[0],\"borderTopWidth\",!0),i.left+=ue.css(t[0],\"borderLeftWidth\",!0)),{top:e.top-i.top-ue.css(n,\"marginTop\",!0),left:e.left-i.left-ue.css(n,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent||G;t&&!ue.nodeName(t,\"html\")&&\"static\"===ue.css(t,\"position\");)t=t.offsetParent;return t||G})}}),ue.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(t,i){var n=/Y/.test(i);ue.fn[t]=function(s){return ue.access(this,function(t,s,a){var o=Y(t);return a===e?o?i in o?o[i]:o.document.documentElement[s]:t[s]:(o?o.scrollTo(n?ue(o).scrollLeft():a,n?a:ue(o).scrollTop()):t[s]=a,e)},t,s,arguments.length,null)}}),ue.each({Height:\"height\",Width:\"width\"},function(t,i){ue.each({padding:\"inner\"+t,content:i,\"\":\"outer\"+t},function(n,s){ue.fn[s]=function(s,a){var o=arguments.length&&(n||\"boolean\"!=typeof s),r=n||(s===!0||a===!0?\"margin\":\"border\");return ue.access(this,function(i,n,s){var a;return ue.isWindow(i)?i.document.documentElement[\"client\"+t]:9===i.nodeType?(a=i.documentElement,Math.max(i.body[\"scroll\"+t],a[\"scroll\"+t],i.body[\"offset\"+t],a[\"offset\"+t],a[\"client\"+t])):s===e?ue.css(i,n,r):ue.style(i,n,s,r)},i,o?s:e,o,null)}})}),ue.fn.size=function(){return this.length},ue.fn.andSelf=ue.fn.addBack,\"object\"==typeof module&&module&&\"object\"==typeof module.exports?module.exports=ue:(t.jQuery=t.$=ue,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return ue}))}(window),define(\"lib.jquery\",function(){}),function(t){\"function\"==typeof define&&define.amd?define(\"lib.jquery.cookie\",[\"jquery\"],t):t(jQuery)}(function(t){function e(t){return r.raw?t:encodeURIComponent(t)}function i(t){return r.raw?t:decodeURIComponent(t)}function n(t){return e(r.json?JSON.stringify(t):String(t))}function s(t){0===t.indexOf('\"')&&(t=t.slice(1,-1).replace(/\\\\\"/g,'\"').replace(/\\\\\\\\/g,\"\\\\\"));try{return t=decodeURIComponent(t.replace(o,\" \")),r.json?JSON.parse(t):t}catch(e){}}function a(e,i){var n=r.raw?e:s(e);return t.isFunction(i)?i(n):n}var o=/\\+/g,r=t.cookie=function(s,o,l){if(void 0!==o&&!t.isFunction(o)){if(l=t.extend({},r.defaults,l),\"number\"==typeof l.expires){var h=l.expires,u=l.expires=new Date;u.setTime(+u+864e5*h)}return document.cookie=[e(s),\"=\",n(o),l.expires?\"; expires=\"+l.expires.toUTCString():\"\",l.path?\"; path=\"+l.path:\"\",l.domain?\"; domain=\"+l.domain:\"\",l.secure?\"; secure\":\"\"].join(\"\")}for(var c=s?void 0:{},d=document.cookie?document.cookie.split(\"; \"):[],p=0,f=d.length;f>p;p++){var m=d[p].split(\"=\"),g=i(m.shift()),v=m.join(\"=\");if(s&&s===g){c=a(v,o);break}s||void 0===(v=a(v))||(c[g]=v)}return c};r.defaults={},t.removeCookie=function(e,i){return void 0===t.cookie(e)?!1:(t.cookie(e,\"\",t.extend({},i,{expires:-1})),!t.cookie(e))}}),function(t,e){function i(e,i){var s,a,o,r=e.nodeName.toLowerCase();return\"area\"===r?(s=e.parentNode,a=s.name,e.href&&a&&\"map\"===s.nodeName.toLowerCase()?(o=t(\"img[usemap=#\"+a+\"]\")[0],!!o&&n(o)):!1):(/input|select|textarea|button|object/.test(r)?!e.disabled:\"a\"===r?e.href||i:i)&&n(e)}function n(e){return t.expr.filters.visible(e)&&!t(e).parents().addBack().filter(function(){return\"hidden\"===t.css(this,\"visibility\")}).length}var s=0,a=/^ui-id-\\d+$/;t.ui=t.ui||{},t.extend(t.ui,{version:\"1.10.4\",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),t.fn.extend({focus:function(e){return function(i,n){return\"number\"==typeof i?this.each(function(){var e=this;setTimeout(function(){t(e).focus(),n&&n.call(e)},i)}):e.apply(this,arguments)}}(t.fn.focus),scrollParent:function(){var e;return e=t.ui.ie&&/(static|relative)/.test(this.css(\"position\"))||/absolute/.test(this.css(\"position\"))?this.parents().filter(function(){return/(relative|absolute|fixed)/.test(t.css(this,\"position\"))&&/(auto|scroll)/.test(t.css(this,\"overflow\")+t.css(this,\"overflow-y\")+t.css(this,\"overflow-x\"))\n}).eq(0):this.parents().filter(function(){return/(auto|scroll)/.test(t.css(this,\"overflow\")+t.css(this,\"overflow-y\")+t.css(this,\"overflow-x\"))}).eq(0),/fixed/.test(this.css(\"position\"))||!e.length?t(document):e},zIndex:function(i){if(i!==e)return this.css(\"zIndex\",i);if(this.length)for(var n,s,a=t(this[0]);a.length&&a[0]!==document;){if(n=a.css(\"position\"),(\"absolute\"===n||\"relative\"===n||\"fixed\"===n)&&(s=parseInt(a.css(\"zIndex\"),10),!isNaN(s)&&0!==s))return s;a=a.parent()}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id=\"ui-id-\"+ ++s)})},removeUniqueId:function(){return this.each(function(){a.test(this.id)&&t(this).removeAttr(\"id\")})}}),t.extend(t.expr[\":\"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,n){return!!t.data(e,n[3])},focusable:function(e){return i(e,!isNaN(t.attr(e,\"tabindex\")))},tabbable:function(e){var n=t.attr(e,\"tabindex\"),s=isNaN(n);return(s||n>=0)&&i(e,!s)}}),t(\"<a>\").outerWidth(1).jquery||t.each([\"Width\",\"Height\"],function(i,n){function s(e,i,n,s){return t.each(a,function(){i-=parseFloat(t.css(e,\"padding\"+this))||0,n&&(i-=parseFloat(t.css(e,\"border\"+this+\"Width\"))||0),s&&(i-=parseFloat(t.css(e,\"margin\"+this))||0)}),i}var a=\"Width\"===n?[\"Left\",\"Right\"]:[\"Top\",\"Bottom\"],o=n.toLowerCase(),r={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn[\"inner\"+n]=function(i){return i===e?r[\"inner\"+n].call(this):this.each(function(){t(this).css(o,s(this,i)+\"px\")})},t.fn[\"outer\"+n]=function(e,i){return\"number\"!=typeof e?r[\"outer\"+n].call(this,e):this.each(function(){t(this).css(o,s(this,e,!0,i)+\"px\")})}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t(\"<a>\").data(\"a-b\",\"a\").removeData(\"a-b\").data(\"a-b\")&&(t.fn.removeData=function(e){return function(i){return arguments.length?e.call(this,t.camelCase(i)):e.call(this)}}(t.fn.removeData)),t.ui.ie=!!/msie [\\w.]+/.exec(navigator.userAgent.toLowerCase()),t.support.selectstart=\"onselectstart\"in document.createElement(\"div\"),t.fn.extend({disableSelection:function(){return this.bind((t.support.selectstart?\"selectstart\":\"mousedown\")+\".ui-disableSelection\",function(t){t.preventDefault()})},enableSelection:function(){return this.unbind(\".ui-disableSelection\")}}),t.extend(t.ui,{plugin:{add:function(e,i,n){var s,a=t.ui[e].prototype;for(s in n)a.plugins[s]=a.plugins[s]||[],a.plugins[s].push([i,n[s]])},call:function(t,e,i){var n,s=t.plugins[e];if(s&&t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType)for(n=0;s.length>n;n++)t.options[s[n][0]]&&s[n][1].apply(t.element,i)}},hasScroll:function(e,i){if(\"hidden\"===t(e).css(\"overflow\"))return!1;var n=i&&\"left\"===i?\"scrollLeft\":\"scrollTop\",s=!1;return e[n]>0?!0:(e[n]=1,s=e[n]>0,e[n]=0,s)}})}(jQuery),function(t,e){var i=0,n=Array.prototype.slice,s=t.cleanData;t.cleanData=function(e){for(var i,n=0;null!=(i=e[n]);n++)try{t(i).triggerHandler(\"remove\")}catch(a){}s(e)},t.widget=function(i,n,s){var a,o,r,l,h={},u=i.split(\".\")[0];i=i.split(\".\")[1],a=u+\"-\"+i,s||(s=n,n=t.Widget),t.expr[\":\"][a.toLowerCase()]=function(e){return!!t.data(e,a)},t[u]=t[u]||{},o=t[u][i],r=t[u][i]=function(t,i){return this._createWidget?(arguments.length&&this._createWidget(t,i),e):new r(t,i)},t.extend(r,o,{version:s.version,_proto:t.extend({},s),_childConstructors:[]}),l=new n,l.options=t.widget.extend({},l.options),t.each(s,function(i,s){return t.isFunction(s)?(h[i]=function(){var t=function(){return n.prototype[i].apply(this,arguments)},e=function(t){return n.prototype[i].apply(this,t)};return function(){var i,n=this._super,a=this._superApply;return this._super=t,this._superApply=e,i=s.apply(this,arguments),this._super=n,this._superApply=a,i}}(),e):(h[i]=s,e)}),r.prototype=t.widget.extend(l,{widgetEventPrefix:o?l.widgetEventPrefix||i:i},h,{constructor:r,namespace:u,widgetName:i,widgetFullName:a}),o?(t.each(o._childConstructors,function(e,i){var n=i.prototype;t.widget(n.namespace+\".\"+n.widgetName,r,i._proto)}),delete o._childConstructors):n._childConstructors.push(r),t.widget.bridge(i,r)},t.widget.extend=function(i){for(var s,a,o=n.call(arguments,1),r=0,l=o.length;l>r;r++)for(s in o[r])a=o[r][s],o[r].hasOwnProperty(s)&&a!==e&&(i[s]=t.isPlainObject(a)?t.isPlainObject(i[s])?t.widget.extend({},i[s],a):t.widget.extend({},a):a);return i},t.widget.bridge=function(i,s){var a=s.prototype.widgetFullName||i;t.fn[i]=function(o){var r=\"string\"==typeof o,l=n.call(arguments,1),h=this;return o=!r&&l.length?t.widget.extend.apply(null,[o].concat(l)):o,this.each(r?function(){var n,s=t.data(this,a);return s?t.isFunction(s[o])&&\"_\"!==o.charAt(0)?(n=s[o].apply(s,l),n!==s&&n!==e?(h=n&&n.jquery?h.pushStack(n.get()):n,!1):e):t.error(\"no such method '\"+o+\"' for \"+i+\" widget instance\"):t.error(\"cannot call methods on \"+i+\" prior to initialization; attempted to call method '\"+o+\"'\")}:function(){var e=t.data(this,a);e?e.option(o||{})._init():t.data(this,a,new s(o,this))}),h}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:\"widget\",widgetEventPrefix:\"\",defaultElement:\"<div>\",options:{disabled:!1,create:null},_createWidget:function(e,n){n=t(n||this.defaultElement||this)[0],this.element=t(n),this.uuid=i++,this.eventNamespace=\".\"+this.widgetName+this.uuid,this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this.bindings=t(),this.hoverable=t(),this.focusable=t(),n!==this&&(t.data(n,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===n&&this.destroy()}}),this.document=t(n.style?n.ownerDocument:n.document||n),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger(\"create\",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr(\"aria-disabled\").removeClass(this.widgetFullName+\"-disabled ui-state-disabled\"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")},_destroy:t.noop,widget:function(){return this.element},option:function(i,n){var s,a,o,r=i;if(0===arguments.length)return t.widget.extend({},this.options);if(\"string\"==typeof i)if(r={},s=i.split(\".\"),i=s.shift(),s.length){for(a=r[i]=t.widget.extend({},this.options[i]),o=0;s.length-1>o;o++)a[s[o]]=a[s[o]]||{},a=a[s[o]];if(i=s.pop(),1===arguments.length)return a[i]===e?null:a[i];a[i]=n}else{if(1===arguments.length)return this.options[i]===e?null:this.options[i];r[i]=n}return this._setOptions(r),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,\"disabled\"===t&&(this.widget().toggleClass(this.widgetFullName+\"-disabled ui-state-disabled\",!!e).attr(\"aria-disabled\",e),this.hoverable.removeClass(\"ui-state-hover\"),this.focusable.removeClass(\"ui-state-focus\")),this},enable:function(){return this._setOption(\"disabled\",!1)},disable:function(){return this._setOption(\"disabled\",!0)},_on:function(i,n,s){var a,o=this;\"boolean\"!=typeof i&&(s=n,n=i,i=!1),s?(n=a=t(n),this.bindings=this.bindings.add(n)):(s=n,n=this.element,a=this.widget()),t.each(s,function(s,r){function l(){return i||o.options.disabled!==!0&&!t(this).hasClass(\"ui-state-disabled\")?(\"string\"==typeof r?o[r]:r).apply(o,arguments):e}\"string\"!=typeof r&&(l.guid=r.guid=r.guid||l.guid||t.guid++);var h=s.match(/^(\\w+)\\s*(.*)$/),u=h[1]+o.eventNamespace,c=h[2];c?a.delegate(c,u,l):n.bind(u,l)})},_off:function(t,e){e=(e||\"\").split(\" \").join(this.eventNamespace+\" \")+this.eventNamespace,t.unbind(e).undelegate(e)},_delay:function(t,e){function i(){return(\"string\"==typeof t?n[t]:t).apply(n,arguments)}var n=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass(\"ui-state-hover\")},mouseleave:function(e){t(e.currentTarget).removeClass(\"ui-state-hover\")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass(\"ui-state-focus\")},focusout:function(e){t(e.currentTarget).removeClass(\"ui-state-focus\")}})},_trigger:function(e,i,n){var s,a,o=this.options[e];if(n=n||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],a=i.originalEvent)for(s in a)s in i||(i[s]=a[s]);return this.element.trigger(i,n),!(t.isFunction(o)&&o.apply(this.element[0],[i].concat(n))===!1||i.isDefaultPrevented())}},t.each({show:\"fadeIn\",hide:\"fadeOut\"},function(e,i){t.Widget.prototype[\"_\"+e]=function(n,s,a){\"string\"==typeof s&&(s={effect:s});var o,r=s?s===!0||\"number\"==typeof s?i:s.effect||i:e;s=s||{},\"number\"==typeof s&&(s={duration:s}),o=!t.isEmptyObject(s),s.complete=a,s.delay&&n.delay(s.delay),o&&t.effects&&t.effects.effect[r]?n[e](s):r!==e&&n[r]?n[r](s.duration,s.easing,a):n.queue(function(i){t(this)[e](),a&&a.call(n[0]),i()})}})}(jQuery),function(t){var e=!1;t(document).mouseup(function(){e=!1}),t.widget(\"ui.mouse\",{version:\"1.10.4\",options:{cancel:\"input,textarea,button,select,option\",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind(\"mousedown.\"+this.widgetName,function(t){return e._mouseDown(t)}).bind(\"click.\"+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+\".preventClickEvent\")?(t.removeData(i.target,e.widgetName+\".preventClickEvent\"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind(\".\"+this.widgetName),this._mouseMoveDelegate&&t(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(i){if(!e){this._mouseStarted&&this._mouseUp(i),this._mouseDownEvent=i;var n=this,s=1===i.which,a=\"string\"==typeof this.options.cancel&&i.target.nodeName?t(i.target).closest(this.options.cancel).length:!1;return s&&!a&&this._mouseCapture(i)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){n.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(i)&&this._mouseDelayMet(i)&&(this._mouseStarted=this._mouseStart(i)!==!1,!this._mouseStarted)?(i.preventDefault(),!0):(!0===t.data(i.target,this.widgetName+\".preventClickEvent\")&&t.removeData(i.target,this.widgetName+\".preventClickEvent\"),this._mouseMoveDelegate=function(t){return n._mouseMove(t)},this._mouseUpDelegate=function(t){return n._mouseUp(t)},t(document).bind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).bind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),i.preventDefault(),e=!0,!0)):!0}},_mouseMove:function(e){return t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button?this._mouseUp(e):this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){return t(document).unbind(\"mousemove.\"+this.widgetName,this._mouseMoveDelegate).unbind(\"mouseup.\"+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+\".preventClickEvent\",!0),this._mouseStop(e)),!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}})}(jQuery),function(t,e){function i(t,e,i){return[parseFloat(t[0])*(p.test(t[0])?e/100:1),parseFloat(t[1])*(p.test(t[1])?i/100:1)]}function n(e,i){return parseInt(t.css(e,i),10)||0}function s(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var a,o=Math.max,r=Math.abs,l=Math.round,h=/left|center|right/,u=/top|center|bottom/,c=/[\\+\\-]\\d+(\\.[\\d]+)?%?/,d=/^\\w+/,p=/%$/,f=t.fn.position;t.position={scrollbarWidth:function(){if(a!==e)return a;var i,n,s=t(\"<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>\"),o=s.children()[0];return t(\"body\").append(s),i=o.offsetWidth,s.css(\"overflow\",\"scroll\"),n=o.offsetWidth,i===n&&(n=s[0].clientWidth),s.remove(),a=i-n},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-x\"),n=e.isWindow||e.isDocument?\"\":e.element.css(\"overflow-y\"),s=\"scroll\"===i||\"auto\"===i&&e.width<e.element[0].scrollWidth,a=\"scroll\"===n||\"auto\"===n&&e.height<e.element[0].scrollHeight;return{width:a?t.position.scrollbarWidth():0,height:s?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),n=t.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:n,isDocument:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:n?i.width():i.outerWidth(),height:n?i.height():i.outerHeight()}}},t.fn.position=function(e){if(!e||!e.of)return f.apply(this,arguments);e=t.extend({},e);var a,p,m,g,v,_,b=t(e.of),y=t.position.getWithinInfo(e.within),x=t.position.getScrollInfo(y),w=(e.collision||\"flip\").split(\" \"),k={};return _=s(b),b[0].preventDefault&&(e.at=\"left top\"),p=_.width,m=_.height,g=_.offset,v=t.extend({},g),t.each([\"my\",\"at\"],function(){var t,i,n=(e[this]||\"\").split(\" \");1===n.length&&(n=h.test(n[0])?n.concat([\"center\"]):u.test(n[0])?[\"center\"].concat(n):[\"center\",\"center\"]),n[0]=h.test(n[0])?n[0]:\"center\",n[1]=u.test(n[1])?n[1]:\"center\",t=c.exec(n[0]),i=c.exec(n[1]),k[this]=[t?t[0]:0,i?i[0]:0],e[this]=[d.exec(n[0])[0],d.exec(n[1])[0]]}),1===w.length&&(w[1]=w[0]),\"right\"===e.at[0]?v.left+=p:\"center\"===e.at[0]&&(v.left+=p/2),\"bottom\"===e.at[1]?v.top+=m:\"center\"===e.at[1]&&(v.top+=m/2),a=i(k.at,p,m),v.left+=a[0],v.top+=a[1],this.each(function(){var s,h,u=t(this),c=u.outerWidth(),d=u.outerHeight(),f=n(this,\"marginLeft\"),_=n(this,\"marginTop\"),D=c+f+n(this,\"marginRight\")+x.width,C=d+_+n(this,\"marginBottom\")+x.height,T=t.extend({},v),M=i(k.my,u.outerWidth(),u.outerHeight());\"right\"===e.my[0]?T.left-=c:\"center\"===e.my[0]&&(T.left-=c/2),\"bottom\"===e.my[1]?T.top-=d:\"center\"===e.my[1]&&(T.top-=d/2),T.left+=M[0],T.top+=M[1],t.support.offsetFractions||(T.left=l(T.left),T.top=l(T.top)),s={marginLeft:f,marginTop:_},t.each([\"left\",\"top\"],function(i,n){t.ui.position[w[i]]&&t.ui.position[w[i]][n](T,{targetWidth:p,targetHeight:m,elemWidth:c,elemHeight:d,collisionPosition:s,collisionWidth:D,collisionHeight:C,offset:[a[0]+M[0],a[1]+M[1]],my:e.my,at:e.at,within:y,elem:u})}),e.using&&(h=function(t){var i=g.left-T.left,n=i+p-c,s=g.top-T.top,a=s+m-d,l={target:{element:b,left:g.left,top:g.top,width:p,height:m},element:{element:u,left:T.left,top:T.top,width:c,height:d},horizontal:0>n?\"left\":i>0?\"right\":\"center\",vertical:0>a?\"top\":s>0?\"bottom\":\"middle\"};c>p&&p>r(i+n)&&(l.horizontal=\"center\"),d>m&&m>r(s+a)&&(l.vertical=\"middle\"),l.important=o(r(i),r(n))>o(r(s),r(a))?\"horizontal\":\"vertical\",e.using.call(this,t,l)}),u.offset(t.extend(T,{using:h}))})},t.ui.position={fit:{left:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollLeft:n.offset.left,a=n.width,r=t.left-e.collisionPosition.marginLeft,l=s-r,h=r+e.collisionWidth-a-s;e.collisionWidth>a?l>0&&0>=h?(i=t.left+l+e.collisionWidth-a-s,t.left+=l-i):t.left=h>0&&0>=l?s:l>h?s+a-e.collisionWidth:s:l>0?t.left+=l:h>0?t.left-=h:t.left=o(t.left-r,t.left)},top:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollTop:n.offset.top,a=e.within.height,r=t.top-e.collisionPosition.marginTop,l=s-r,h=r+e.collisionHeight-a-s;e.collisionHeight>a?l>0&&0>=h?(i=t.top+l+e.collisionHeight-a-s,t.top+=l-i):t.top=h>0&&0>=l?s:l>h?s+a-e.collisionHeight:s:l>0?t.top+=l:h>0?t.top-=h:t.top=o(t.top-r,t.top)}},flip:{left:function(t,e){var i,n,s=e.within,a=s.offset.left+s.scrollLeft,o=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,h=t.left-e.collisionPosition.marginLeft,u=h-l,c=h+e.collisionWidth-o-l,d=\"left\"===e.my[0]?-e.elemWidth:\"right\"===e.my[0]?e.elemWidth:0,p=\"left\"===e.at[0]?e.targetWidth:\"right\"===e.at[0]?-e.targetWidth:0,f=-2*e.offset[0];0>u?(i=t.left+d+p+f+e.collisionWidth-o-a,(0>i||r(u)>i)&&(t.left+=d+p+f)):c>0&&(n=t.left-e.collisionPosition.marginLeft+d+p+f-l,(n>0||c>r(n))&&(t.left+=d+p+f))},top:function(t,e){var i,n,s=e.within,a=s.offset.top+s.scrollTop,o=s.height,l=s.isWindow?s.scrollTop:s.offset.top,h=t.top-e.collisionPosition.marginTop,u=h-l,c=h+e.collisionHeight-o-l,d=\"top\"===e.my[1],p=d?-e.elemHeight:\"bottom\"===e.my[1]?e.elemHeight:0,f=\"top\"===e.at[1]?e.targetHeight:\"bottom\"===e.at[1]?-e.targetHeight:0,m=-2*e.offset[1];0>u?(n=t.top+p+f+m+e.collisionHeight-o-a,t.top+p+f+m>u&&(0>n||r(u)>n)&&(t.top+=p+f+m)):c>0&&(i=t.top-e.collisionPosition.marginTop+p+f+m-l,t.top+p+f+m>c&&(i>0||c>r(i))&&(t.top+=p+f+m))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,n,s,a,o=document.getElementsByTagName(\"body\")[0],r=document.createElement(\"div\");e=document.createElement(o?\"div\":\"body\"),n={visibility:\"hidden\",width:0,height:0,border:0,margin:0,background:\"none\"},o&&t.extend(n,{position:\"absolute\",left:\"-1000px\",top:\"-1000px\"});for(a in n)e.style[a]=n[a];e.appendChild(r),i=o||document.documentElement,i.insertBefore(e,i.firstChild),r.style.cssText=\"position: absolute; left: 10.7432222px;\",s=t(r).offset().left,t.support.offsetFractions=s>10&&11>s,e.innerHTML=\"\",i.removeChild(e)}()}(jQuery),function(t){var e=0,i={},n={};i.height=i.paddingTop=i.paddingBottom=i.borderTopWidth=i.borderBottomWidth=\"hide\",n.height=n.paddingTop=n.paddingBottom=n.borderTopWidth=n.borderBottomWidth=\"show\",t.widget(\"ui.accordion\",{version:\"1.10.4\",options:{active:0,animate:{},collapsible:!1,event:\"click\",header:\"> li > :first-child,> :not(li):even\",heightStyle:\"auto\",icons:{activeHeader:\"ui-icon-triangle-1-s\",header:\"ui-icon-triangle-1-e\"},activate:null,beforeActivate:null},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this.element.addClass(\"ui-accordion ui-widget ui-helper-reset\").attr(\"role\",\"tablist\"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t(),content:this.active.length?this.active.next():t()}},_createIcons:function(){var e=this.options.icons;e&&(t(\"<span>\").addClass(\"ui-accordion-header-icon ui-icon \"+e.header).prependTo(this.headers),this.active.children(\".ui-accordion-header-icon\").removeClass(e.header).addClass(e.activeHeader),this.headers.addClass(\"ui-accordion-icons\"))},_destroyIcons:function(){this.headers.removeClass(\"ui-accordion-icons\").children(\".ui-accordion-header-icon\").remove()},_destroy:function(){var t;this.element.removeClass(\"ui-accordion ui-widget ui-helper-reset\").removeAttr(\"role\"),this.headers.removeClass(\"ui-accordion-header ui-accordion-header-active ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top\").removeAttr(\"role\").removeAttr(\"aria-expanded\").removeAttr(\"aria-selected\").removeAttr(\"aria-controls\").removeAttr(\"tabIndex\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),this._destroyIcons(),t=this.headers.next().css(\"display\",\"\").removeAttr(\"role\").removeAttr(\"aria-hidden\").removeAttr(\"aria-labelledby\").removeClass(\"ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled\").each(function(){/^ui-accordion/.test(this.id)&&this.removeAttribute(\"id\")}),\"content\"!==this.options.heightStyle&&t.css(\"height\",\"\")},_setOption:function(t,e){return\"active\"===t?void this._activate(e):(\"event\"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),\"collapsible\"!==t||e||this.options.active!==!1||this._activate(0),\"icons\"===t&&(this._destroyIcons(),e&&this._createIcons()),void(\"disabled\"===t&&this.headers.add(this.headers.next()).toggleClass(\"ui-state-disabled\",!!e)))},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,n=this.headers.length,s=this.headers.index(e.target),a=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:a=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:a=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:a=this.headers[0];break;case i.END:a=this.headers[n-1]}a&&(t(e.target).attr(\"tabIndex\",-1),t(a).attr(\"tabIndex\",0),a.focus(),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().focus()},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(\".ui-state-disabled\").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){this.headers=this.element.find(this.options.header).addClass(\"ui-accordion-header ui-helper-reset ui-state-default ui-corner-all\"),this.headers.next().addClass(\"ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom\").filter(\":not(.ui-accordion-content-active)\").hide()},_refresh:function(){var i,n=this.options,s=n.heightStyle,a=this.element.parent(),o=this.accordionId=\"ui-accordion-\"+(this.element.attr(\"id\")||++e);this.active=this._findActive(n.active).addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\").removeClass(\"ui-corner-all\"),this.active.next().addClass(\"ui-accordion-content-active\").show(),this.headers.attr(\"role\",\"tab\").each(function(e){var i=t(this),n=i.attr(\"id\"),s=i.next(),a=s.attr(\"id\");n||(n=o+\"-header-\"+e,i.attr(\"id\",n)),a||(a=o+\"-panel-\"+e,s.attr(\"id\",a)),i.attr(\"aria-controls\",a),s.attr(\"aria-labelledby\",n)}).next().attr(\"role\",\"tabpanel\"),this.headers.not(this.active).attr({\"aria-selected\":\"false\",\"aria-expanded\":\"false\",tabIndex:-1}).next().attr({\"aria-hidden\":\"true\"}).hide(),this.active.length?this.active.attr({\"aria-selected\":\"true\",\"aria-expanded\":\"true\",tabIndex:0}).next().attr({\"aria-hidden\":\"false\"}):this.headers.eq(0).attr(\"tabIndex\",0),this._createIcons(),this._setupEvents(n.event),\"fill\"===s?(i=a.height(),this.element.siblings(\":visible\").each(function(){var e=t(this),n=e.css(\"position\");\"absolute\"!==n&&\"fixed\"!==n&&(i-=e.outerHeight(!0))}),this.headers.each(function(){i-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css(\"overflow\",\"auto\")):\"auto\"===s&&(i=0,this.headers.next().each(function(){i=Math.max(i,t(this).css(\"height\",\"\").height())}).height(i))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return\"number\"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:\"_keydown\"};e&&t.each(e.split(\" \"),function(t,e){i[e]=\"_eventHandler\"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:\"_panelKeyDown\"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget),a=s[0]===n[0],o=a&&i.collapsible,r=o?t():s.next(),l=n.next(),h={oldHeader:n,oldPanel:l,newHeader:o?t():s,newPanel:r};e.preventDefault(),a&&!i.collapsible||this._trigger(\"beforeActivate\",e,h)===!1||(i.active=o?!1:this.headers.index(s),this.active=a?t():s,this._toggle(h),n.removeClass(\"ui-accordion-header-active ui-state-active\"),i.icons&&n.children(\".ui-accordion-header-icon\").removeClass(i.icons.activeHeader).addClass(i.icons.header),a||(s.removeClass(\"ui-corner-all\").addClass(\"ui-accordion-header-active ui-state-active ui-corner-top\"),i.icons&&s.children(\".ui-accordion-header-icon\").removeClass(i.icons.header).addClass(i.icons.activeHeader),s.next().addClass(\"ui-accordion-content-active\")))},_toggle:function(e){var i=e.newPanel,n=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,e):(n.hide(),i.show(),this._toggleComplete(e)),n.attr({\"aria-hidden\":\"true\"}),n.prev().attr(\"aria-selected\",\"false\"),i.length&&n.length?n.prev().attr({tabIndex:-1,\"aria-expanded\":\"false\"}):i.length&&this.headers.filter(function(){return 0===t(this).attr(\"tabIndex\")}).attr(\"tabIndex\",-1),i.attr(\"aria-hidden\",\"false\").prev().attr({\"aria-selected\":\"true\",tabIndex:0,\"aria-expanded\":\"true\"})},_animate:function(t,e,s){var a,o,r,l=this,h=0,u=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},d=u&&c.down||c,p=function(){l._toggleComplete(s)};return\"number\"==typeof d&&(r=d),\"string\"==typeof d&&(o=d),o=o||d.easing||c.easing,r=r||d.duration||c.duration,e.length?t.length?(a=t.show().outerHeight(),e.animate(i,{duration:r,easing:o,step:function(t,e){e.now=Math.round(t)}}),void t.hide().animate(n,{duration:r,easing:o,complete:p,step:function(t,i){i.now=Math.round(t),\"height\"!==i.prop?h+=i.now:\"content\"!==l.options.heightStyle&&(i.now=Math.round(a-e.outerHeight()-h),h=0)}})):e.animate(i,r,o,p):t.animate(n,r,o,p)},_toggleComplete:function(t){var e=t.oldPanel;e.removeClass(\"ui-accordion-content-active\").prev().removeClass(\"ui-corner-top\").addClass(\"ui-corner-all\"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger(\"activate\",null,t)}})}(jQuery),function(t){t.widget(\"ui.autocomplete\",{version:\"1.10.4\",defaultElement:\"<input>\",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:\"left top\",at:\"left bottom\",collision:\"none\"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,n,s=this.element[0].nodeName.toLowerCase(),a=\"textarea\"===s,o=\"input\"===s;this.isMultiLine=a?!0:o?!1:this.element.prop(\"isContentEditable\"),this.valueMethod=this.element[a||o?\"val\":\"text\"],this.isNewMenu=!0,this.element.addClass(\"ui-autocomplete-input\").attr(\"autocomplete\",\"off\"),this._on(this.element,{keydown:function(s){if(this.element.prop(\"readOnly\"))return e=!0,n=!0,void(i=!0);e=!1,n=!1,i=!1;var a=t.ui.keyCode;switch(s.keyCode){case a.PAGE_UP:e=!0,this._move(\"previousPage\",s);break;case a.PAGE_DOWN:e=!0,this._move(\"nextPage\",s);break;case a.UP:e=!0,this._keyEvent(\"previous\",s);break;case a.DOWN:e=!0,this._keyEvent(\"next\",s);break;case a.ENTER:case a.NUMPAD_ENTER:this.menu.active&&(e=!0,s.preventDefault(),this.menu.select(s));break;case a.TAB:this.menu.active&&this.menu.select(s);break;case a.ESCAPE:this.menu.element.is(\":visible\")&&(this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(e)return e=!1,void((!this.isMultiLine||this.menu.element.is(\":visible\"))&&n.preventDefault());if(!i){var s=t.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move(\"previousPage\",n);break;case s.PAGE_DOWN:this._move(\"nextPage\",n);break;case s.UP:this._keyEvent(\"previous\",n);break;case s.DOWN:this._keyEvent(\"next\",n)}}},input:function(t){return n?(n=!1,void t.preventDefault()):void this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(t),void this._change(t))}}),this._initSource(),this.menu=t(\"<ul>\").addClass(\"ui-autocomplete ui-front\").appendTo(this._appendTo()).menu({role:null}).hide().data(\"ui-menu\"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];t(e.target).closest(\".ui-menu-item\").length||this._delay(function(){var e=this;this.document.one(\"mousedown\",function(n){n.target===e.element[0]||n.target===i||t.contains(i,n.target)||e.close()})})},menufocus:function(e,i){if(this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type)))return this.menu.blur(),void this.document.one(\"mousemove\",function(){t(e.target).trigger(e.originalEvent)});var n=i.item.data(\"ui-autocomplete-item\");!1!==this._trigger(\"focus\",e,{item:n})?e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(n.value):this.liveRegion.text(n.value)},menuselect:function(t,e){var i=e.item.data(\"ui-autocomplete-item\"),n=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=i})),!1!==this._trigger(\"select\",t,{item:i})&&this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=t(\"<span>\",{role:\"status\",\"aria-live\":\"polite\"}).addClass(\"ui-helper-hidden-accessible\").insertBefore(this.element),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass(\"ui-autocomplete-input\").removeAttr(\"autocomplete\"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),\"source\"===t&&this._initSource(),\"appendTo\"===t&&this.menu.element.appendTo(this._appendTo()),\"disabled\"===t&&e&&this.xhr&&this.xhr.abort()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e||(e=this.element.closest(\".ui-front\")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,n=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,n){n(t.ui.autocomplete.filter(e,i.term))}):\"string\"==typeof this.options.source?(i=this.options.source,this.source=function(e,s){n.xhr&&n.xhr.abort(),n.xhr=t.ajax({url:i,data:e,dataType:\"json\",success:function(t){s(t)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){this.term!==this._value()&&(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger(\"search\",e)!==!1?this._search(t):void 0},_search:function(t){this.pending++,this.element.addClass(\"ui-autocomplete-loading\"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this.element.removeClass(\"ui-autocomplete-loading\")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger(\"response\",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger(\"open\")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this.menu.element.is(\":visible\")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger(\"close\",t))},_change:function(t){this.previous!==this._value()&&this._trigger(\"change\",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return\"string\"==typeof e?{label:e,value:e}:t.extend({label:e.label||e.value,value:e.value||e.label},e)\n})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width(\"\").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var n=this;t.each(i,function(t,i){n._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data(\"ui-autocomplete-item\",e)},_renderItem:function(e,i){return t(\"<li>\").append(t(\"<a>\").text(i.label)).appendTo(e)},_move:function(t,e){return this.menu.element.is(\":visible\")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this._value(this.term),void this.menu.blur()):void this.menu[t](e):void this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(\":visible\"))&&(this._move(t,e),e.preventDefault())}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")},filter:function(e,i){var n=RegExp(t.ui.autocomplete.escapeRegex(i),\"i\");return t.grep(e,function(t){return n.test(t.label||t.value||t)})}}),t.widget(\"ui.autocomplete\",t.ui.autocomplete,{options:{messages:{noResults:\"No search results.\",results:function(t){return t+(t>1?\" results are\":\" result is\")+\" available, use up and down arrow keys to navigate.\"}}},__response:function(t){var e;this._superApply(arguments),this.options.disabled||this.cancelSearch||(e=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,this.liveRegion.text(e))}})}(jQuery),function(t){var e,i=\"ui-button ui-widget ui-state-default ui-corner-all\",n=\"ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only\",s=function(){var e=t(this);setTimeout(function(){e.find(\":ui-button\").button(\"refresh\")},1)},a=function(e){var i=e.name,n=e.form,s=t([]);return i&&(i=i.replace(/'/g,\"\\\\'\"),s=n?t(n).find(\"[name='\"+i+\"']\"):t(\"[name='\"+i+\"']\",e.ownerDocument).filter(function(){return!this.form})),s};t.widget(\"ui.button\",{version:\"1.10.4\",defaultElement:\"<button>\",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest(\"form\").unbind(\"reset\"+this.eventNamespace).bind(\"reset\"+this.eventNamespace,s),\"boolean\"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop(\"disabled\"):this.element.prop(\"disabled\",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr(\"title\");var n=this,o=this.options,r=\"checkbox\"===this.type||\"radio\"===this.type,l=r?\"\":\"ui-state-active\";null===o.label&&(o.label=\"input\"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(i).attr(\"role\",\"button\").bind(\"mouseenter\"+this.eventNamespace,function(){o.disabled||this===e&&t(this).addClass(\"ui-state-active\")}).bind(\"mouseleave\"+this.eventNamespace,function(){o.disabled||t(this).removeClass(l)}).bind(\"click\"+this.eventNamespace,function(t){o.disabled&&(t.preventDefault(),t.stopImmediatePropagation())}),this._on({focus:function(){this.buttonElement.addClass(\"ui-state-focus\")},blur:function(){this.buttonElement.removeClass(\"ui-state-focus\")}}),r&&this.element.bind(\"change\"+this.eventNamespace,function(){n.refresh()}),\"checkbox\"===this.type?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){return o.disabled?!1:void 0}):\"radio\"===this.type?this.buttonElement.bind(\"click\"+this.eventNamespace,function(){if(o.disabled)return!1;t(this).addClass(\"ui-state-active\"),n.buttonElement.attr(\"aria-pressed\",\"true\");var e=n.element[0];a(e).not(e).map(function(){return t(this).button(\"widget\")[0]}).removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):(this.buttonElement.bind(\"mousedown\"+this.eventNamespace,function(){return o.disabled?!1:(t(this).addClass(\"ui-state-active\"),e=this,void n.document.one(\"mouseup\",function(){e=null}))}).bind(\"mouseup\"+this.eventNamespace,function(){return o.disabled?!1:void t(this).removeClass(\"ui-state-active\")}).bind(\"keydown\"+this.eventNamespace,function(e){return o.disabled?!1:void((e.keyCode===t.ui.keyCode.SPACE||e.keyCode===t.ui.keyCode.ENTER)&&t(this).addClass(\"ui-state-active\"))}).bind(\"keyup\"+this.eventNamespace+\" blur\"+this.eventNamespace,function(){t(this).removeClass(\"ui-state-active\")}),this.buttonElement.is(\"a\")&&this.buttonElement.keyup(function(e){e.keyCode===t.ui.keyCode.SPACE&&t(this).click()})),this._setOption(\"disabled\",o.disabled),this._resetButton()},_determineButtonType:function(){var t,e,i;this.type=this.element.is(\"[type=checkbox]\")?\"checkbox\":this.element.is(\"[type=radio]\")?\"radio\":this.element.is(\"input\")?\"input\":\"button\",\"checkbox\"===this.type||\"radio\"===this.type?(t=this.element.parents().last(),e=\"label[for='\"+this.element.attr(\"id\")+\"']\",this.buttonElement=t.find(e),this.buttonElement.length||(t=t.length?t.siblings():this.element.siblings(),this.buttonElement=t.filter(e),this.buttonElement.length||(this.buttonElement=t.find(e))),this.element.addClass(\"ui-helper-hidden-accessible\"),i=this.element.is(\":checked\"),i&&this.buttonElement.addClass(\"ui-state-active\"),this.buttonElement.prop(\"aria-pressed\",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass(\"ui-helper-hidden-accessible\"),this.buttonElement.removeClass(i+\" ui-state-active \"+n).removeAttr(\"role\").removeAttr(\"aria-pressed\").html(this.buttonElement.find(\".ui-button-text\").html()),this.hasTitle||this.buttonElement.removeAttr(\"title\")},_setOption:function(t,e){return this._super(t,e),\"disabled\"===t?(this.element.prop(\"disabled\",!!e),void(e&&this.buttonElement.removeClass(\"ui-state-focus\"))):void this._resetButton()},refresh:function(){var e=this.element.is(\"input, button\")?this.element.is(\":disabled\"):this.element.hasClass(\"ui-button-disabled\");e!==this.options.disabled&&this._setOption(\"disabled\",e),\"radio\"===this.type?a(this.element[0]).each(function(){t(this).is(\":checked\")?t(this).button(\"widget\").addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):t(this).button(\"widget\").removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\")}):\"checkbox\"===this.type&&(this.element.is(\":checked\")?this.buttonElement.addClass(\"ui-state-active\").attr(\"aria-pressed\",\"true\"):this.buttonElement.removeClass(\"ui-state-active\").attr(\"aria-pressed\",\"false\"))},_resetButton:function(){if(\"input\"===this.type)return void(this.options.label&&this.element.val(this.options.label));var e=this.buttonElement.removeClass(n),i=t(\"<span></span>\",this.document[0]).addClass(\"ui-button-text\").html(this.options.label).appendTo(e.empty()).text(),s=this.options.icons,a=s.primary&&s.secondary,o=[];s.primary||s.secondary?(this.options.text&&o.push(\"ui-button-text-icon\"+(a?\"s\":s.primary?\"-primary\":\"-secondary\")),s.primary&&e.prepend(\"<span class='ui-button-icon-primary ui-icon \"+s.primary+\"'></span>\"),s.secondary&&e.append(\"<span class='ui-button-icon-secondary ui-icon \"+s.secondary+\"'></span>\"),this.options.text||(o.push(a?\"ui-button-icons-only\":\"ui-button-icon-only\"),this.hasTitle||e.attr(\"title\",t.trim(i)))):o.push(\"ui-button-text-only\"),e.addClass(o.join(\" \"))}}),t.widget(\"ui.buttonset\",{version:\"1.10.4\",options:{items:\"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)\"},_create:function(){this.element.addClass(\"ui-buttonset\")},_init:function(){this.refresh()},_setOption:function(t,e){\"disabled\"===t&&this.buttons.button(\"option\",t,e),this._super(t,e)},refresh:function(){var e=\"rtl\"===this.element.css(\"direction\");this.buttons=this.element.find(this.options.items).filter(\":ui-button\").button(\"refresh\").end().not(\":ui-button\").button().end().map(function(){return t(this).button(\"widget\")[0]}).removeClass(\"ui-corner-all ui-corner-left ui-corner-right\").filter(\":first\").addClass(e?\"ui-corner-right\":\"ui-corner-left\").end().filter(\":last\").addClass(e?\"ui-corner-left\":\"ui-corner-right\").end().end()},_destroy:function(){this.element.removeClass(\"ui-buttonset\"),this.buttons.map(function(){return t(this).button(\"widget\")[0]}).removeClass(\"ui-corner-left ui-corner-right\").end().button(\"destroy\")}})}(jQuery),function(t,e){function i(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId=\"ui-datepicker-div\",this._inlineClass=\"ui-datepicker-inline\",this._appendClass=\"ui-datepicker-append\",this._triggerClass=\"ui-datepicker-trigger\",this._dialogClass=\"ui-datepicker-dialog\",this._disableClass=\"ui-datepicker-disabled\",this._unselectableClass=\"ui-datepicker-unselectable\",this._currentClass=\"ui-datepicker-current-day\",this._dayOverClass=\"ui-datepicker-days-cell-over\",this.regional=[],this.regional[\"\"]={closeText:\"Done\",prevText:\"Prev\",nextText:\"Next\",currentText:\"Today\",monthNames:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],monthNamesShort:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],dayNames:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],dayNamesShort:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],dayNamesMin:[\"Su\",\"Mo\",\"Tu\",\"We\",\"Th\",\"Fr\",\"Sa\"],weekHeader:\"Wk\",dateFormat:\"mm/dd/yy\",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:\"\"},this._defaults={showOn:\"focus\",showAnim:\"fadeIn\",showOptions:{},defaultDate:null,appendText:\"\",buttonText:\"...\",buttonImage:\"\",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:\"c-10:c+10\",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:\"+10\",minDate:null,maxDate:null,duration:\"fast\",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:\"\",altFormat:\"\",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[\"\"]),this.dpDiv=n(t(\"<div id='\"+this._mainDivId+\"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"))}function n(e){var i=\"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";return e.delegate(i,\"mouseout\",function(){t(this).removeClass(\"ui-state-hover\"),-1!==this.className.indexOf(\"ui-datepicker-prev\")&&t(this).removeClass(\"ui-datepicker-prev-hover\"),-1!==this.className.indexOf(\"ui-datepicker-next\")&&t(this).removeClass(\"ui-datepicker-next-hover\")}).delegate(i,\"mouseover\",function(){t.datepicker._isDisabledDatepicker(a.inline?e.parent()[0]:a.input[0])||(t(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\"),t(this).addClass(\"ui-state-hover\"),-1!==this.className.indexOf(\"ui-datepicker-prev\")&&t(this).addClass(\"ui-datepicker-prev-hover\"),-1!==this.className.indexOf(\"ui-datepicker-next\")&&t(this).addClass(\"ui-datepicker-next-hover\"))})}function s(e,i){t.extend(e,i);for(var n in i)null==i[n]&&(e[n]=i[n]);return e}t.extend(t.ui,{datepicker:{version:\"1.10.4\"}});var a,o=\"datepicker\";t.extend(i.prototype,{markerClassName:\"hasDatepicker\",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return s(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var n,s,a;n=e.nodeName.toLowerCase(),s=\"div\"===n||\"span\"===n,e.id||(this.uuid+=1,e.id=\"dp\"+this.uuid),a=this._newInst(t(e),s),a.settings=t.extend({},i||{}),\"input\"===n?this._connectDatepicker(e,a):s&&this._inlineDatepicker(e,a)},_newInst:function(e,i){var s=e[0].id.replace(/([^A-Za-z0-9_\\-])/g,\"\\\\\\\\$1\");return{id:s,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?n(t(\"<div class='\"+this._inlineClass+\" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")):this.dpDiv}},_connectDatepicker:function(e,i){var n=t(e);i.append=t([]),i.trigger=t([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),t.data(e,o,i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var n,s,a,o=this._get(i,\"appendText\"),r=this._get(i,\"isRTL\");i.append&&i.append.remove(),o&&(i.append=t(\"<span class='\"+this._appendClass+\"'>\"+o+\"</span>\"),e[r?\"before\":\"after\"](i.append)),e.unbind(\"focus\",this._showDatepicker),i.trigger&&i.trigger.remove(),n=this._get(i,\"showOn\"),(\"focus\"===n||\"both\"===n)&&e.focus(this._showDatepicker),(\"button\"===n||\"both\"===n)&&(s=this._get(i,\"buttonText\"),a=this._get(i,\"buttonImage\"),i.trigger=t(this._get(i,\"buttonImageOnly\")?t(\"<img/>\").addClass(this._triggerClass).attr({src:a,alt:s,title:s}):t(\"<button type='button'></button>\").addClass(this._triggerClass).html(a?t(\"<img/>\").attr({src:a,alt:s,title:s}):s)),e[r?\"before\":\"after\"](i.trigger),i.trigger.click(function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,\"autoSize\")&&!t.inline){var e,i,n,s,a=new Date(2009,11,20),o=this._get(t,\"dateFormat\");o.match(/[DM]/)&&(e=function(t){for(i=0,n=0,s=0;t.length>s;s++)t[s].length>i&&(i=t[s].length,n=s);return n},a.setMonth(e(this._get(t,o.match(/MM/)?\"monthNames\":\"monthNamesShort\"))),a.setDate(e(this._get(t,o.match(/DD/)?\"dayNames\":\"dayNamesShort\"))+20-a.getDay())),t.input.attr(\"size\",this._formatDate(t,a).length)}},_inlineDatepicker:function(e,i){var n=t(e);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),t.data(e,o,i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css(\"display\",\"block\"))},_dialogDatepicker:function(e,i,n,a,r){var l,h,u,c,d,p=this._dialogInst;return p||(this.uuid+=1,l=\"dp\"+this.uuid,this._dialogInput=t(\"<input type='text' id='\"+l+\"' style='position: absolute; top: -100px; width: 0px;'/>\"),this._dialogInput.keydown(this._doKeyDown),t(\"body\").append(this._dialogInput),p=this._dialogInst=this._newInst(this._dialogInput,!1),p.settings={},t.data(this._dialogInput[0],o,p)),s(p.settings,a||{}),i=i&&i.constructor===Date?this._formatDate(p,i):i,this._dialogInput.val(i),this._pos=r?r.length?r:[r.pageX,r.pageY]:null,this._pos||(h=document.documentElement.clientWidth,u=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,d=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[h/2-100+c,u/2-150+d]),this._dialogInput.css(\"left\",this._pos[0]+20+\"px\").css(\"top\",this._pos[1]+\"px\"),p.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],o,p),this},_destroyDatepicker:function(e){var i,n=t(e),s=t.data(e,o);n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,o),\"input\"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).unbind(\"focus\",this._showDatepicker).unbind(\"keydown\",this._doKeyDown).unbind(\"keypress\",this._doKeyPress).unbind(\"keyup\",this._doKeyUp)):(\"div\"===i||\"span\"===i)&&n.removeClass(this.markerClassName).empty())},_enableDatepicker:function(e){var i,n,s=t(e),a=t.data(e,o);s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),\"input\"===i?(e.disabled=!1,a.trigger.filter(\"button\").each(function(){this.disabled=!1}).end().filter(\"img\").css({opacity:\"1.0\",cursor:\"\"})):(\"div\"===i||\"span\"===i)&&(n=s.children(\".\"+this._inlineClass),n.children().removeClass(\"ui-state-disabled\"),n.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,n,s=t(e),a=t.data(e,o);s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),\"input\"===i?(e.disabled=!0,a.trigger.filter(\"button\").each(function(){this.disabled=!0}).end().filter(\"img\").css({opacity:\"0.5\",cursor:\"default\"})):(\"div\"===i||\"span\"===i)&&(n=s.children(\".\"+this._inlineClass),n.children().addClass(\"ui-state-disabled\"),n.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,o)}catch(i){throw\"Missing instance data for this datepicker\"}},_optionDatepicker:function(i,n,a){var o,r,l,h,u=this._getInst(i);return 2===arguments.length&&\"string\"==typeof n?\"defaults\"===n?t.extend({},t.datepicker._defaults):u?\"all\"===n?t.extend({},u.settings):this._get(u,n):null:(o=n||{},\"string\"==typeof n&&(o={},o[n]=a),u&&(this._curInst===u&&this._hideDatepicker(),r=this._getDateDatepicker(i,!0),l=this._getMinMaxDate(u,\"min\"),h=this._getMinMaxDate(u,\"max\"),s(u.settings,o),null!==l&&o.dateFormat!==e&&o.minDate===e&&(u.settings.minDate=this._formatDate(u,l)),null!==h&&o.dateFormat!==e&&o.maxDate===e&&(u.settings.maxDate=this._formatDate(u,h)),\"disabled\"in o&&(o.disabled?this._disableDatepicker(i):this._enableDatepicker(i)),this._attachments(t(i),u),this._autoSize(u),this._setDate(u,r),this._updateAlternate(u),this._updateDatepicker(u)),e)},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,n,s,a=t.datepicker._getInst(e.target),o=!0,r=a.dpDiv.is(\".ui-datepicker-rtl\");if(a._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),o=!1;break;case 13:return s=t(\"td.\"+t.datepicker._dayOverClass+\":not(.\"+t.datepicker._currentClass+\")\",a.dpDiv),s[0]&&t.datepicker._selectDay(e.target,a.selectedMonth,a.selectedYear,s[0]),i=t.datepicker._get(a,\"onSelect\"),i?(n=t.datepicker._formatDate(a),i.apply(a.input?a.input[0]:null,[n,a])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(a,\"stepBigMonths\"):-t.datepicker._get(a,\"stepMonths\"),\"M\");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(a,\"stepBigMonths\"):+t.datepicker._get(a,\"stepMonths\"),\"M\");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),o=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),o=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?1:-1,\"D\"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(a,\"stepBigMonths\"):-t.datepicker._get(a,\"stepMonths\"),\"M\");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,\"D\"),o=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?-1:1,\"D\"),o=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(a,\"stepBigMonths\"):+t.datepicker._get(a,\"stepMonths\"),\"M\");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,\"D\"),o=e.ctrlKey||e.metaKey;break;default:o=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):o=!1;o&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(i){var n,s,a=t.datepicker._getInst(i.target);return t.datepicker._get(a,\"constrainInput\")?(n=t.datepicker._possibleChars(t.datepicker._get(a,\"dateFormat\")),s=String.fromCharCode(null==i.charCode?i.keyCode:i.charCode),i.ctrlKey||i.metaKey||\" \">s||!n||n.indexOf(s)>-1):e},_doKeyUp:function(e){var i,n=t.datepicker._getInst(e.target);if(n.input.val()!==n.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(n,\"dateFormat\"),n.input?n.input.val():null,t.datepicker._getFormatConfig(n)),i&&(t.datepicker._setDateFromField(n),t.datepicker._updateAlternate(n),t.datepicker._updateDatepicker(n))}catch(s){}return!0},_showDatepicker:function(e){if(e=e.target||e,\"input\"!==e.nodeName.toLowerCase()&&(e=t(\"input\",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var i,n,a,o,r,l,h;i=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==i&&(t.datepicker._curInst.dpDiv.stop(!0,!0),i&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),n=t.datepicker._get(i,\"beforeShow\"),a=n?n.apply(e,[e,i]):{},a!==!1&&(s(i.settings,a),i.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(i),t.datepicker._inDialog&&(e.value=\"\"),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),o=!1,t(e).parents().each(function(){return o|=\"fixed\"===t(this).css(\"position\"),!o}),r={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:\"absolute\",display:\"block\",top:\"-1000px\"}),t.datepicker._updateDatepicker(i),r=t.datepicker._checkOffset(i,r,o),i.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?\"static\":o?\"fixed\":\"absolute\",display:\"none\",left:r.left+\"px\",top:r.top+\"px\"}),i.inline||(l=t.datepicker._get(i,\"showAnim\"),h=t.datepicker._get(i,\"duration\"),i.dpDiv.zIndex(t(e).zIndex()+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[l]?i.dpDiv.show(l,t.datepicker._get(i,\"showOptions\"),h):i.dpDiv[l||\"show\"](l?h:null),t.datepicker._shouldFocusInput(i)&&i.input.focus(),t.datepicker._curInst=i))}},_updateDatepicker:function(e){this.maxRows=4,a=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e),e.dpDiv.find(\".\"+this._dayOverClass+\" a\").mouseover();var i,n=this._getNumberOfMonths(e),s=n[1],o=17;e.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\"),s>1&&e.dpDiv.addClass(\"ui-datepicker-multi-\"+s).css(\"width\",o*s+\"em\"),e.dpDiv[(1!==n[0]||1!==n[1]?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-multi\"),e.dpDiv[(this._get(e,\"isRTL\")?\"add\":\"remove\")+\"Class\"](\"ui-datepicker-rtl\"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.focus(),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find(\"select.ui-datepicker-year:first\").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(\":visible\")&&!t.input.is(\":disabled\")&&!t.input.is(\":focus\")},_checkOffset:function(e,i,n){var s=e.dpDiv.outerWidth(),a=e.dpDiv.outerHeight(),o=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:t(document).scrollLeft()),h=document.documentElement.clientHeight+(n?0:t(document).scrollTop());return i.left-=this._get(e,\"isRTL\")?s-o:0,i.left-=n&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=n&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+a>h&&h>a?Math.abs(a+r):0),i},_findPos:function(e){for(var i,n=this._getInst(e),s=this._get(n,\"isRTL\");e&&(\"hidden\"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[s?\"previousSibling\":\"nextSibling\"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,n,s,a,r=this._curInst;!r||e&&r!==t.data(e,o)||this._datepickerShowing&&(i=this._get(r,\"showAnim\"),n=this._get(r,\"duration\"),s=function(){t.datepicker._tidyDialog(r)},t.effects&&(t.effects.effect[i]||t.effects[i])?r.dpDiv.hide(i,t.datepicker._get(r,\"showOptions\"),n,s):r.dpDiv[\"slideDown\"===i?\"slideUp\":\"fadeIn\"===i?\"fadeOut\":\"hide\"](i?n:null,s),i||s(),this._datepickerShowing=!1,a=this._get(r,\"onClose\"),a&&a.apply(r.input?r.input[0]:null,[r.input?r.input.val():\"\",r]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:\"absolute\",left:\"0\",top:\"-100px\"}),t.blockUI&&(t.unblockUI(),t(\"body\").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).unbind(\".ui-datepicker-calendar\")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),n=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents(\"#\"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest(\".\"+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==n)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,n){var s=t(e),a=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(a,i+(\"M\"===n?this._get(a,\"showCurrentAtPos\"):0),n),this._updateDatepicker(a))},_gotoToday:function(e){var i,n=t(e),s=this._getInst(n[0]);this._get(s,\"gotoCurrent\")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(e,i,n){var s=t(e),a=this._getInst(s[0]);a[\"selected\"+(\"M\"===n?\"Month\":\"Year\")]=a[\"draw\"+(\"M\"===n?\"Month\":\"Year\")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(a),this._adjustDate(s)},_selectDay:function(e,i,n,s){var a,o=t(e);t(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(o[0])||(a=this._getInst(o[0]),a.selectedDay=a.currentDay=t(\"a\",s).html(),a.selectedMonth=a.currentMonth=i,a.selectedYear=a.currentYear=n,this._selectDate(e,this._formatDate(a,a.currentDay,a.currentMonth,a.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,\"\")},_selectDate:function(e,i){var n,s=t(e),a=this._getInst(s[0]);i=null!=i?i:this._formatDate(a),a.input&&a.input.val(i),this._updateAlternate(a),n=this._get(a,\"onSelect\"),n?n.apply(a.input?a.input[0]:null,[i,a]):a.input&&a.input.trigger(\"change\"),a.inline?this._updateDatepicker(a):(this._hideDatepicker(),this._lastInput=a.input[0],\"object\"!=typeof a.input[0]&&a.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var i,n,s,a=this._get(e,\"altField\");a&&(i=this._get(e,\"altFormat\")||this._get(e,\"dateFormat\"),n=this._getDate(e),s=this.formatDate(i,n,this._getFormatConfig(e)),t(a).each(function(){t(this).val(s)}))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,\"\"]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(i,n,s){if(null==i||null==n)throw\"Invalid arguments\";if(n=\"object\"==typeof n?\"\"+n:n+\"\",\"\"===n)return null;var a,o,r,l,h=0,u=(s?s.shortYearCutoff:null)||this._defaults.shortYearCutoff,c=\"string\"!=typeof u?u:(new Date).getFullYear()%100+parseInt(u,10),d=(s?s.dayNamesShort:null)||this._defaults.dayNamesShort,p=(s?s.dayNames:null)||this._defaults.dayNames,f=(s?s.monthNamesShort:null)||this._defaults.monthNamesShort,m=(s?s.monthNames:null)||this._defaults.monthNames,g=-1,v=-1,_=-1,b=-1,y=!1,x=function(t){var e=i.length>a+1&&i.charAt(a+1)===t;return e&&a++,e},w=function(t){var e=x(t),i=\"@\"===t?14:\"!\"===t?20:\"y\"===t&&e?4:\"o\"===t?3:2,s=RegExp(\"^\\\\d{1,\"+i+\"}\"),a=n.substring(h).match(s);if(!a)throw\"Missing number at position \"+h;return h+=a[0].length,parseInt(a[0],10)},k=function(i,s,a){var o=-1,r=t.map(x(i)?a:s,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(r,function(t,i){var s=i[1];return n.substr(h,s.length).toLowerCase()===s.toLowerCase()?(o=i[0],h+=s.length,!1):e}),-1!==o)return o+1;throw\"Unknown name at position \"+h},D=function(){if(n.charAt(h)!==i.charAt(a))throw\"Unexpected literal at position \"+h;h++};for(a=0;i.length>a;a++)if(y)\"'\"!==i.charAt(a)||x(\"'\")?D():y=!1;else switch(i.charAt(a)){case\"d\":_=w(\"d\");break;case\"D\":k(\"D\",d,p);break;case\"o\":b=w(\"o\");break;case\"m\":v=w(\"m\");break;case\"M\":v=k(\"M\",f,m);break;case\"y\":g=w(\"y\");break;case\"@\":l=new Date(w(\"@\")),g=l.getFullYear(),v=l.getMonth()+1,_=l.getDate();break;case\"!\":l=new Date((w(\"!\")-this._ticksTo1970)/1e4),g=l.getFullYear(),v=l.getMonth()+1,_=l.getDate();break;case\"'\":x(\"'\")?D():y=!0;break;default:D()}if(n.length>h&&(r=n.substr(h),!/^\\s+/.test(r)))throw\"Extra/unparsed characters found in date: \"+r;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c>=g?0:-100)),b>-1)for(v=1,_=b;o=this._getDaysInMonth(g,v-1),!(o>=_);)v++,_-=o;if(l=this._daylightSavingAdjust(new Date(g,v-1,_)),l.getFullYear()!==g||l.getMonth()+1!==v||l.getDate()!==_)throw\"Invalid date\";return l},ATOM:\"yy-mm-dd\",COOKIE:\"D, dd M yy\",ISO_8601:\"yy-mm-dd\",RFC_822:\"D, d M y\",RFC_850:\"DD, dd-M-y\",RFC_1036:\"D, d M y\",RFC_1123:\"D, d M yy\",RFC_2822:\"D, d M yy\",RSS:\"D, d M y\",TICKS:\"!\",TIMESTAMP:\"@\",W3C:\"yy-mm-dd\",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return\"\";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,a=(i?i.dayNames:null)||this._defaults.dayNames,o=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,l=function(e){var i=t.length>n+1&&t.charAt(n+1)===e;return i&&n++,i},h=function(t,e,i){var n=\"\"+e;if(l(t))for(;i>n.length;)n=\"0\"+n;return n},u=function(t,e,i,n){return l(t)?n[e]:i[e]},c=\"\",d=!1;if(e)for(n=0;t.length>n;n++)if(d)\"'\"!==t.charAt(n)||l(\"'\")?c+=t.charAt(n):d=!1;else switch(t.charAt(n)){case\"d\":c+=h(\"d\",e.getDate(),2);break;case\"D\":c+=u(\"D\",e.getDay(),s,a);break;case\"o\":c+=h(\"o\",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case\"m\":c+=h(\"m\",e.getMonth()+1,2);break;case\"M\":c+=u(\"M\",e.getMonth(),o,r);break;case\"y\":c+=l(\"y\")?e.getFullYear():(10>e.getYear()%100?\"0\":\"\")+e.getYear()%100;break;case\"@\":c+=e.getTime();break;case\"!\":c+=1e4*e.getTime()+this._ticksTo1970;break;case\"'\":l(\"'\")?c+=\"'\":d=!0;break;default:c+=t.charAt(n)}return c},_possibleChars:function(t){var e,i=\"\",n=!1,s=function(i){var n=t.length>e+1&&t.charAt(e+1)===i;return n&&e++,n};for(e=0;t.length>e;e++)if(n)\"'\"!==t.charAt(e)||s(\"'\")?i+=t.charAt(e):n=!1;else switch(t.charAt(e)){case\"d\":case\"m\":case\"y\":case\"@\":i+=\"0123456789\";break;case\"D\":case\"M\":return null;case\"'\":s(\"'\")?i+=\"'\":n=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,i){return t.settings[i]!==e?t.settings[i]:this._defaults[i]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,\"dateFormat\"),n=t.lastVal=t.input?t.input.val():null,s=this._getDefaultDate(t),a=s,o=this._getFormatConfig(t);try{a=this.parseDate(i,n,o)||s}catch(r){n=e?\"\":n}t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),t.currentDay=n?a.getDate():0,t.currentMonth=n?a.getMonth():0,t.currentYear=n?a.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,\"defaultDate\"),new Date))},_determineDate:function(e,i,n){var s=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},a=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,\"dateFormat\"),i,t.datepicker._getFormatConfig(e))\n}catch(n){}for(var s=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,a=s.getFullYear(),o=s.getMonth(),r=s.getDate(),l=/([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,h=l.exec(i);h;){switch(h[2]||\"d\"){case\"d\":case\"D\":r+=parseInt(h[1],10);break;case\"w\":case\"W\":r+=7*parseInt(h[1],10);break;case\"m\":case\"M\":o+=parseInt(h[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(a,o));break;case\"y\":case\"Y\":a+=parseInt(h[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(a,o))}h=l.exec(i)}return new Date(a,o,r)},o=null==i||\"\"===i?n:\"string\"==typeof i?a(i):\"number\"==typeof i?isNaN(i)?n:s(i):new Date(i.getTime());return o=o&&\"Invalid Date\"==\"\"+o?n:o,o&&(o.setHours(0),o.setMinutes(0),o.setSeconds(0),o.setMilliseconds(0)),this._daylightSavingAdjust(o)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var n=!e,s=t.selectedMonth,a=t.selectedYear,o=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=o.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=o.getMonth(),t.drawYear=t.selectedYear=t.currentYear=o.getFullYear(),s===t.selectedMonth&&a===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(n?\"\":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&\"\"===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,\"stepMonths\"),n=\"#\"+e.id.replace(/\\\\\\\\/g,\"\\\\\");e.dpDiv.find(\"[data-handler]\").map(function(){var e={prev:function(){t.datepicker._adjustDate(n,-i,\"M\")},next:function(){t.datepicker._adjustDate(n,+i,\"M\")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(n)},selectDay:function(){return t.datepicker._selectDay(n,+this.getAttribute(\"data-month\"),+this.getAttribute(\"data-year\"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(n,this,\"M\"),!1},selectYear:function(){return t.datepicker._selectMonthYear(n,this,\"Y\"),!1}};t(this).bind(this.getAttribute(\"data-event\"),e[this.getAttribute(\"data-handler\")])})},_generateHTML:function(t){var e,i,n,s,a,o,r,l,h,u,c,d,p,f,m,g,v,_,b,y,x,w,k,D,C,T,M,S,I,N,P,z,A,E,O,H,W,F,j,$=new Date,L=this._daylightSavingAdjust(new Date($.getFullYear(),$.getMonth(),$.getDate())),R=this._get(t,\"isRTL\"),B=this._get(t,\"showButtonPanel\"),q=this._get(t,\"hideIfNoPrevNext\"),Y=this._get(t,\"navigationAsDateFormat\"),U=this._getNumberOfMonths(t),K=this._get(t,\"showCurrentAtPos\"),V=this._get(t,\"stepMonths\"),X=1!==U[0]||1!==U[1],Q=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),G=this._getMinMaxDate(t,\"min\"),J=this._getMinMaxDate(t,\"max\"),Z=t.drawMonth-K,te=t.drawYear;if(0>Z&&(Z+=12,te--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-U[0]*U[1]+1,J.getDate())),e=G&&G>e?G:e;this._daylightSavingAdjust(new Date(te,Z,1))>e;)Z--,0>Z&&(Z=11,te--);for(t.drawMonth=Z,t.drawYear=te,i=this._get(t,\"prevText\"),i=Y?this.formatDate(i,this._daylightSavingAdjust(new Date(te,Z-V,1)),this._getFormatConfig(t)):i,n=this._canAdjustMonth(t,-1,te,Z)?\"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(R?\"e\":\"w\")+\"'>\"+i+\"</span></a>\":q?\"\":\"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='\"+i+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(R?\"e\":\"w\")+\"'>\"+i+\"</span></a>\",s=this._get(t,\"nextText\"),s=Y?this.formatDate(s,this._daylightSavingAdjust(new Date(te,Z+V,1)),this._getFormatConfig(t)):s,a=this._canAdjustMonth(t,1,te,Z)?\"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='\"+s+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(R?\"w\":\"e\")+\"'>\"+s+\"</span></a>\":q?\"\":\"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='\"+s+\"'><span class='ui-icon ui-icon-circle-triangle-\"+(R?\"w\":\"e\")+\"'>\"+s+\"</span></a>\",o=this._get(t,\"currentText\"),r=this._get(t,\"gotoCurrent\")&&t.currentDay?Q:L,o=Y?this.formatDate(o,r,this._getFormatConfig(t)):o,l=t.inline?\"\":\"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>\"+this._get(t,\"closeText\")+\"</button>\",h=B?\"<div class='ui-datepicker-buttonpane ui-widget-content'>\"+(R?l:\"\")+(this._isInRange(t,r)?\"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>\"+o+\"</button>\":\"\")+(R?\"\":l)+\"</div>\":\"\",u=parseInt(this._get(t,\"firstDay\"),10),u=isNaN(u)?0:u,c=this._get(t,\"showWeek\"),d=this._get(t,\"dayNames\"),p=this._get(t,\"dayNamesMin\"),f=this._get(t,\"monthNames\"),m=this._get(t,\"monthNamesShort\"),g=this._get(t,\"beforeShowDay\"),v=this._get(t,\"showOtherMonths\"),_=this._get(t,\"selectOtherMonths\"),b=this._getDefaultDate(t),y=\"\",w=0;U[0]>w;w++){for(k=\"\",this.maxRows=4,D=0;U[1]>D;D++){if(C=this._daylightSavingAdjust(new Date(te,Z,t.selectedDay)),T=\" ui-corner-all\",M=\"\",X){if(M+=\"<div class='ui-datepicker-group\",U[1]>1)switch(D){case 0:M+=\" ui-datepicker-group-first\",T=\" ui-corner-\"+(R?\"right\":\"left\");break;case U[1]-1:M+=\" ui-datepicker-group-last\",T=\" ui-corner-\"+(R?\"left\":\"right\");break;default:M+=\" ui-datepicker-group-middle\",T=\"\"}M+=\"'>\"}for(M+=\"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\"+T+\"'>\"+(/all|left/.test(T)&&0===w?R?a:n:\"\")+(/all|right/.test(T)&&0===w?R?n:a:\"\")+this._generateMonthYearHeader(t,Z,te,G,J,w>0||D>0,f,m)+\"</div><table class='ui-datepicker-calendar'><thead><tr>\",S=c?\"<th class='ui-datepicker-week-col'>\"+this._get(t,\"weekHeader\")+\"</th>\":\"\",x=0;7>x;x++)I=(x+u)%7,S+=\"<th\"+((x+u+6)%7>=5?\" class='ui-datepicker-week-end'\":\"\")+\"><span title='\"+d[I]+\"'>\"+p[I]+\"</span></th>\";for(M+=S+\"</tr></thead><tbody>\",N=this._getDaysInMonth(te,Z),te===t.selectedYear&&Z===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,N)),P=(this._getFirstDayOfMonth(te,Z)-u+7)%7,z=Math.ceil((P+N)/7),A=X&&this.maxRows>z?this.maxRows:z,this.maxRows=A,E=this._daylightSavingAdjust(new Date(te,Z,1-P)),O=0;A>O;O++){for(M+=\"<tr>\",H=c?\"<td class='ui-datepicker-week-col'>\"+this._get(t,\"calculateWeek\")(E)+\"</td>\":\"\",x=0;7>x;x++)W=g?g.apply(t.input?t.input[0]:null,[E]):[!0,\"\"],F=E.getMonth()!==Z,j=F&&!_||!W[0]||G&&G>E||J&&E>J,H+=\"<td class='\"+((x+u+6)%7>=5?\" ui-datepicker-week-end\":\"\")+(F?\" ui-datepicker-other-month\":\"\")+(E.getTime()===C.getTime()&&Z===t.selectedMonth&&t._keyEvent||b.getTime()===E.getTime()&&b.getTime()===C.getTime()?\" \"+this._dayOverClass:\"\")+(j?\" \"+this._unselectableClass+\" ui-state-disabled\":\"\")+(F&&!v?\"\":\" \"+W[1]+(E.getTime()===Q.getTime()?\" \"+this._currentClass:\"\")+(E.getTime()===L.getTime()?\" ui-datepicker-today\":\"\"))+\"'\"+(F&&!v||!W[2]?\"\":\" title='\"+W[2].replace(/'/g,\"&#39;\")+\"'\")+(j?\"\":\" data-handler='selectDay' data-event='click' data-month='\"+E.getMonth()+\"' data-year='\"+E.getFullYear()+\"'\")+\">\"+(F&&!v?\"&#xa0;\":j?\"<span class='ui-state-default'>\"+E.getDate()+\"</span>\":\"<a class='ui-state-default\"+(E.getTime()===L.getTime()?\" ui-state-highlight\":\"\")+(E.getTime()===Q.getTime()?\" ui-state-active\":\"\")+(F?\" ui-priority-secondary\":\"\")+\"' href='#'>\"+E.getDate()+\"</a>\")+\"</td>\",E.setDate(E.getDate()+1),E=this._daylightSavingAdjust(E);M+=H+\"</tr>\"}Z++,Z>11&&(Z=0,te++),M+=\"</tbody></table>\"+(X?\"</div>\"+(U[0]>0&&D===U[1]-1?\"<div class='ui-datepicker-row-break'></div>\":\"\"):\"\"),k+=M}y+=k}return y+=h,t._keyEvent=!1,y},_generateMonthYearHeader:function(t,e,i,n,s,a,o,r){var l,h,u,c,d,p,f,m,g=this._get(t,\"changeMonth\"),v=this._get(t,\"changeYear\"),_=this._get(t,\"showMonthAfterYear\"),b=\"<div class='ui-datepicker-title'>\",y=\"\";if(a||!g)y+=\"<span class='ui-datepicker-month'>\"+o[e]+\"</span>\";else{for(l=n&&n.getFullYear()===i,h=s&&s.getFullYear()===i,y+=\"<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>\",u=0;12>u;u++)(!l||u>=n.getMonth())&&(!h||s.getMonth()>=u)&&(y+=\"<option value='\"+u+\"'\"+(u===e?\" selected='selected'\":\"\")+\">\"+r[u]+\"</option>\");y+=\"</select>\"}if(_||(b+=y+(!a&&g&&v?\"\":\"&#xa0;\")),!t.yearshtml)if(t.yearshtml=\"\",a||!v)b+=\"<span class='ui-datepicker-year'>\"+i+\"</span>\";else{for(c=this._get(t,\"yearRange\").split(\":\"),d=(new Date).getFullYear(),p=function(t){var e=t.match(/c[+\\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},f=p(c[0]),m=Math.max(f,p(c[1]||\"\")),f=n?Math.max(f,n.getFullYear()):f,m=s?Math.min(m,s.getFullYear()):m,t.yearshtml+=\"<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>\";m>=f;f++)t.yearshtml+=\"<option value='\"+f+\"'\"+(f===i?\" selected='selected'\":\"\")+\">\"+f+\"</option>\";t.yearshtml+=\"</select>\",b+=t.yearshtml,t.yearshtml=null}return b+=this._get(t,\"yearSuffix\"),_&&(b+=(!a&&g&&v?\"\":\"&#xa0;\")+y),b+=\"</div>\"},_adjustInstDate:function(t,e,i){var n=t.drawYear+(\"Y\"===i?e:0),s=t.drawMonth+(\"M\"===i?e:0),a=Math.min(t.selectedDay,this._getDaysInMonth(n,s))+(\"D\"===i?e:0),o=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(n,s,a)));t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),(\"M\"===i||\"Y\"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,\"min\"),n=this._getMinMaxDate(t,\"max\"),s=i&&i>e?i:e;return n&&s>n?n:s},_notifyChange:function(t){var e=this._get(t,\"onChangeMonthYear\");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,\"numberOfMonths\");return null==e?[1,1]:\"number\"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+\"Date\"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,n){var s=this._getNumberOfMonths(t),a=this._daylightSavingAdjust(new Date(i,n+(0>e?e:s[0]*s[1]),1));return 0>e&&a.setDate(this._getDaysInMonth(a.getFullYear(),a.getMonth())),this._isInRange(t,a)},_isInRange:function(t,e){var i,n,s=this._getMinMaxDate(t,\"min\"),a=this._getMinMaxDate(t,\"max\"),o=null,r=null,l=this._get(t,\"yearRange\");return l&&(i=l.split(\":\"),n=(new Date).getFullYear(),o=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\\-].*/)&&(o+=n),i[1].match(/[+\\-].*/)&&(r+=n)),(!s||e.getTime()>=s.getTime())&&(!a||e.getTime()<=a.getTime())&&(!o||e.getFullYear()>=o)&&(!r||r>=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,\"shortYearCutoff\");return e=\"string\"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,\"dayNamesShort\"),dayNames:this._get(t,\"dayNames\"),monthNamesShort:this._get(t,\"monthNamesShort\"),monthNames:this._get(t,\"monthNames\")}},_formatDate:function(t,e,i,n){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var s=e?\"object\"==typeof e?e:this._daylightSavingAdjust(new Date(n,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,\"dateFormat\"),s,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).mousedown(t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t(\"#\"+t.datepicker._mainDivId).length&&t(\"body\").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return\"string\"!=typeof e||\"isDisabled\"!==e&&\"getDate\"!==e&&\"widget\"!==e?\"option\"===e&&2===arguments.length&&\"string\"==typeof arguments[1]?t.datepicker[\"_\"+e+\"Datepicker\"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){\"string\"==typeof e?t.datepicker[\"_\"+e+\"Datepicker\"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker[\"_\"+e+\"Datepicker\"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new i,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version=\"1.10.4\"}(jQuery),function(t){var e={buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},i={maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0};t.widget(\"ui.dialog\",{version:\"1.10.4\",options:{appendTo:\"body\",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:\"close\",dialogClass:\"\",draggable:!0,hide:null,height:\"auto\",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:\"center\",at:\"center\",of:window,collision:\"fit\",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css(\"top\",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr(\"title\"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr(\"title\").addClass(\"ui-dialog-content ui-widget-content\").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||\"body\").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._destroyOverlay(),this.element.removeUniqueId().removeClass(\"ui-dialog-content ui-widget-content\").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&&this.element.attr(\"title\",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i,n=this;if(this._isOpen&&this._trigger(\"beforeClose\",e)!==!1){if(this._isOpen=!1,this._destroyOverlay(),!this.opener.filter(\":focusable\").focus().length)try{i=this.document[0].activeElement,i&&\"body\"!==i.nodeName.toLowerCase()&&t(i).blur()}catch(s){}this._hide(this.uiDialog,this.options.hide,function(){n._trigger(\"close\",e)})}},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(t,e){var i=!!this.uiDialog.nextAll(\":visible\").insertBefore(this.uiDialog).length;return i&&!e&&this._trigger(\"focus\",t),i},open:function(){var e=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=t(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger(\"focus\")}),void this._trigger(\"open\"))},_focusTabbable:function(){var t=this.element.find(\"[autofocus]\");t.length||(t=this.element.find(\":tabbable\")),t.length||(t=this.uiDialogButtonPane.find(\":tabbable\")),t.length||(t=this.uiDialogTitlebarClose.filter(\":tabbable\")),t.length||(t=this.uiDialog),t.eq(0).focus()},_keepFocus:function(e){function i(){var e=this.document[0].activeElement,i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t(\"<div>\").addClass(\"ui-dialog ui-widget ui-widget-content ui-corner-all ui-front \"+this.options.dialogClass).hide().attr({tabIndex:-1,role:\"dialog\"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),void this.close(e);if(e.keyCode===t.ui.keyCode.TAB){var i=this.uiDialog.find(\":tabbable\"),n=i.filter(\":first\"),s=i.filter(\":last\");e.target!==s[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==n[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(s.focus(1),e.preventDefault()):(n.focus(1),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find(\"[aria-describedby]\").length||this.uiDialog.attr({\"aria-describedby\":this.element.uniqueId().attr(\"id\")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t(\"<div>\").addClass(\"ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix\").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(\".ui-dialog-titlebar-close\")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=t(\"<button type='button'></button>\").button({label:this.options.closeText,icons:{primary:\"ui-icon-closethick\"},text:!1}).addClass(\"ui-dialog-titlebar-close\").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t(\"<span>\").uniqueId().addClass(\"ui-dialog-title\").prependTo(this.uiDialogTitlebar),this._title(e),this.uiDialog.attr({\"aria-labelledby\":e.attr(\"id\")})},_title:function(t){this.options.title||t.html(\"&#160;\"),t.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=t(\"<div>\").addClass(\"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\"),this.uiButtonSet=t(\"<div>\").addClass(\"ui-dialog-buttonset\").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?void this.uiDialog.removeClass(\"ui-dialog-buttons\"):(t.each(i,function(i,n){var s,a;n=t.isFunction(n)?{click:n,text:i}:n,n=t.extend({type:\"button\"},n),s=n.click,n.click=function(){s.apply(e.element[0],arguments)},a={icons:n.icons,text:n.showText},delete n.icons,delete n.showText,t(\"<button></button>\",n).button(a).appendTo(e.uiButtonSet)}),this.uiDialog.addClass(\"ui-dialog-buttons\"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:\".ui-dialog-content, .ui-dialog-titlebar-close\",handle:\".ui-dialog-titlebar\",containment:\"document\",start:function(n,s){t(this).addClass(\"ui-dialog-dragging\"),i._blockFrames(),i._trigger(\"dragStart\",n,e(s))},drag:function(t,n){i._trigger(\"drag\",t,e(n))},stop:function(s,a){n.position=[a.position.left-i.document.scrollLeft(),a.position.top-i.document.scrollTop()],t(this).removeClass(\"ui-dialog-dragging\"),i._unblockFrames(),i._trigger(\"dragStop\",s,e(a))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,n=this.options,s=n.resizable,a=this.uiDialog.css(\"position\"),o=\"string\"==typeof s?s:\"n,e,s,w,se,sw,ne,nw\";this.uiDialog.resizable({cancel:\".ui-dialog-content\",containment:\"document\",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:o,start:function(n,s){t(this).addClass(\"ui-dialog-resizing\"),i._blockFrames(),i._trigger(\"resizeStart\",n,e(s))},resize:function(t,n){i._trigger(\"resize\",t,e(n))},stop:function(s,a){n.height=t(this).height(),n.width=t(this).width(),t(this).removeClass(\"ui-dialog-resizing\"),i._unblockFrames(),i._trigger(\"resizeStop\",s,e(a))}}).css(\"position\",a)},_minHeight:function(){var t=this.options;return\"auto\"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(\":visible\");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(n){var s=this,a=!1,o={};t.each(n,function(t,n){s._setOption(t,n),t in e&&(a=!0),t in i&&(o[t]=n)}),a&&(this._size(),this._position()),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",o)},_setOption:function(t,e){var i,n,s=this.uiDialog;\"dialogClass\"===t&&s.removeClass(this.options.dialogClass).addClass(e),\"disabled\"!==t&&(this._super(t,e),\"appendTo\"===t&&this.uiDialog.appendTo(this._appendTo()),\"buttons\"===t&&this._createButtons(),\"closeText\"===t&&this.uiDialogTitlebarClose.button({label:\"\"+e}),\"draggable\"===t&&(i=s.is(\":data(ui-draggable)\"),i&&!e&&s.draggable(\"destroy\"),!i&&e&&this._makeDraggable()),\"position\"===t&&this._position(),\"resizable\"===t&&(n=s.is(\":data(ui-resizable)\"),n&&!e&&s.resizable(\"destroy\"),n&&\"string\"==typeof e&&s.resizable(\"option\",\"handles\",e),n||e===!1||this._makeResizable()),\"title\"===t&&this._title(this.uiDialogTitlebar.find(\".ui-dialog-title\")))},_size:function(){var t,e,i,n=this.options;this.element.show().css({width:\"auto\",minHeight:0,maxHeight:\"none\",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:\"auto\",width:n.width}).outerHeight(),e=Math.max(0,n.minHeight-t),i=\"number\"==typeof n.maxHeight?Math.max(0,n.maxHeight-t):\"none\",\"auto\"===n.height?this.element.css({minHeight:e,maxHeight:i,height:\"auto\"}):this.element.height(Math.max(0,n.height-t)),this.uiDialog.is(\":data(ui-resizable)\")&&this.uiDialog.resizable(\"option\",\"minHeight\",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find(\"iframe\").map(function(){var e=t(this);return t(\"<div>\").css({position:\"absolute\",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return t(e.target).closest(\".ui-dialog\").length?!0:!!t(e.target).closest(\".ui-datepicker\").length},_createOverlay:function(){if(this.options.modal){var e=this,i=this.widgetFullName;t.ui.dialog.overlayInstances||this._delay(function(){t.ui.dialog.overlayInstances&&this.document.bind(\"focusin.dialog\",function(n){e._allowInteraction(n)||(n.preventDefault(),t(\".ui-dialog:visible:last .ui-dialog-content\").data(i)._focusTabbable())})}),this.overlay=t(\"<div>\").addClass(\"ui-widget-overlay ui-front\").appendTo(this._appendTo()),this._on(this.overlay,{mousedown:\"_keepFocus\"}),t.ui.dialog.overlayInstances++}},_destroyOverlay:function(){this.options.modal&&this.overlay&&(t.ui.dialog.overlayInstances--,t.ui.dialog.overlayInstances||this.document.unbind(\"focusin.dialog\"),this.overlay.remove(),this.overlay=null)}}),t.ui.dialog.overlayInstances=0,t.uiBackCompat!==!1&&t.widget(\"ui.dialog\",t.ui.dialog,{_position:function(){var e,i=this.options.position,n=[],s=[0,0];i?((\"string\"==typeof i||\"object\"==typeof i&&\"0\"in i)&&(n=i.split?i.split(\" \"):[i[0],i[1]],1===n.length&&(n[1]=n[0]),t.each([\"left\",\"top\"],function(t,e){+n[t]===n[t]&&(s[t]=n[t],n[t]=e)}),i={my:n[0]+(0>s[0]?s[0]:\"+\"+s[0])+\" \"+n[1]+(0>s[1]?s[1]:\"+\"+s[1]),at:n.join(\" \")}),i=t.extend({},t.ui.dialog.prototype.options.position,i)):i=t.ui.dialog.prototype.options.position,e=this.uiDialog.is(\":visible\"),e||this.uiDialog.show(),this.uiDialog.position(i),e||this.uiDialog.hide()}})}(jQuery),function(t){t.widget(\"ui.draggable\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"drag\",options:{addClasses:!0,appendTo:\"parent\",axis:!1,connectToSortable:!1,containment:!1,cursor:\"auto\",cursorAt:!1,grid:!1,handle:!1,helper:\"original\",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:\"default\",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:\"both\",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){\"original\"!==this.options.helper||/^(?:r|a|f)/.test(this.element.css(\"position\"))||(this.element[0].style.position=\"relative\"),this.options.addClasses&&this.element.addClass(\"ui-draggable\"),this.options.disabled&&this.element.addClass(\"ui-draggable-disabled\"),this._mouseInit()},_destroy:function(){this.element.removeClass(\"ui-draggable ui-draggable-dragging ui-draggable-disabled\"),this._mouseDestroy()},_mouseCapture:function(e){var i=this.options;return this.helper||i.disabled||t(e.target).closest(\".ui-resizable-handle\").length>0?!1:(this.handle=this._getHandle(e),this.handle?(t(i.iframeFix===!0?\"iframe\":i.iframeFix).each(function(){t(\"<div class='ui-draggable-iframeFix' style='background: #fff;'></div>\").css({width:this.offsetWidth+\"px\",height:this.offsetHeight+\"px\",position:\"absolute\",opacity:\"0.001\",zIndex:1e3}).css(t(this).offset()).appendTo(\"body\")}),!0):!1)},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass(\"ui-draggable-dragging\"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css(\"position\"),this.scrollParent=this.helper.scrollParent(),this.offsetParent=this.helper.offsetParent(),this.offsetParentCssPosition=this.offsetParent.css(\"position\"),this.offset=this.positionAbs=this.element.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},this.offset.scroll=!1,t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.originalPosition=this.position=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger(\"start\",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_mouseDrag:function(e,i){if(\"fixed\"===this.offsetParentCssPosition&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),!i){var n=this._uiHash();if(this._trigger(\"drag\",e,n)===!1)return this._mouseUp({}),!1;this.position=n.position}return this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,n=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(n=t.ui.ddmanager.drop(this,e)),this.dropped&&(n=this.dropped,this.dropped=!1),\"original\"!==this.options.helper||t.contains(this.element[0].ownerDocument,this.element[0])?(\"invalid\"===this.options.revert&&!n||\"valid\"===this.options.revert&&n||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger(\"stop\",e)!==!1&&i._clear()}):this._trigger(\"stop\",e)!==!1&&this._clear(),!1):!1},_mouseUp:function(e){return t(\"div.ui-draggable-iframeFix\").each(function(){this.parentNode.removeChild(this)}),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(\".ui-draggable-dragging\")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return this.options.handle?!!t(e.target).closest(this.element.find(this.options.handle)).length:!0},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e])):\"clone\"===i.helper?this.element.clone().removeAttr(\"id\"):this.element;return n.parents(\"body\").length||n.appendTo(\"parent\"===i.appendTo?this.element[0].parentNode:i.appendTo),n[0]===this.element[0]||/(fixed|absolute)/.test(n.css(\"position\"))||n.css(\"position\",\"absolute\"),n},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.element.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css(\"marginLeft\"),10)||0,top:parseInt(this.element.css(\"marginTop\"),10)||0,right:parseInt(this.element.css(\"marginRight\"),10)||0,bottom:parseInt(this.element.css(\"marginBottom\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options;return s.containment?\"window\"===s.containment?void(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):\"document\"===s.containment?void(this.containment=[0,0,t(document).width()-this.helperProportions.width-this.margins.left,(t(document).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):(\"parent\"===s.containment&&(s.containment=this.helper[0].parentNode),i=t(s.containment),n=i[0],void(n&&(e=\"hidden\"!==i.css(\"overflow\"),this.containment=[(parseInt(i.css(\"borderLeftWidth\"),10)||0)+(parseInt(i.css(\"paddingLeft\"),10)||0),(parseInt(i.css(\"borderTopWidth\"),10)||0)+(parseInt(i.css(\"paddingTop\"),10)||0),(e?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css(\"borderRightWidth\"),10)||0)-(parseInt(i.css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css(\"borderBottomWidth\"),10)||0)-(parseInt(i.css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relative_container=i))):void(this.containment=null)},_convertPositionTo:function(e,i){i||(i=this.position);var n=\"absolute\"===e?1:-1,s=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent;return this.offset.scroll||(this.offset.scroll={top:s.scrollTop(),left:s.scrollLeft()}),{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top)*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)*n}},_generatePosition:function(e){var i,n,s,a,o=this.options,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=e.pageX,h=e.pageY;return this.offset.scroll||(this.offset.scroll={top:r.scrollTop(),left:r.scrollLeft()}),this.originalPosition&&(this.containment&&(this.relative_container?(n=this.relative_container.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),o.grid&&(s=o.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/o.grid[1])*o.grid[1]:this.originalPageY,h=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-o.grid[1]:s+o.grid[1]:s,a=o.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/o.grid[0])*o.grid[0]:this.originalPageX,l=i?a-this.offset.click.left>=i[0]||a-this.offset.click.left>i[2]?a:a-this.offset.click.left>=i[0]?a-o.grid[0]:a+o.grid[0]:a)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():this.offset.scroll.left)}\n},_clear:function(){this.helper.removeClass(\"ui-draggable-dragging\"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1},_trigger:function(e,i,n){return n=n||this._uiHash(),t.ui.plugin.call(this,e,[i,n]),\"drag\"===e&&(this.positionAbs=this._convertPositionTo(\"absolute\")),t.Widget.prototype._trigger.call(this,e,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add(\"draggable\",\"connectToSortable\",{start:function(e,i){var n=t(this).data(\"ui-draggable\"),s=n.options,a=t.extend({},i,{item:n.element});n.sortables=[],t(s.connectToSortable).each(function(){var i=t.data(this,\"ui-sortable\");i&&!i.options.disabled&&(n.sortables.push({instance:i,shouldRevert:i.options.revert}),i.refreshPositions(),i._trigger(\"activate\",e,a))})},stop:function(e,i){var n=t(this).data(\"ui-draggable\"),s=t.extend({},i,{item:n.element});t.each(n.sortables,function(){this.instance.isOver?(this.instance.isOver=0,n.cancelHelperRemoval=!0,this.instance.cancelHelperRemoval=!1,this.shouldRevert&&(this.instance.options.revert=this.shouldRevert),this.instance._mouseStop(e),this.instance.options.helper=this.instance.options._helper,\"original\"===n.options.helper&&this.instance.currentItem.css({top:\"auto\",left:\"auto\"})):(this.instance.cancelHelperRemoval=!1,this.instance._trigger(\"deactivate\",e,s))})},drag:function(e,i){var n=t(this).data(\"ui-draggable\"),s=this;t.each(n.sortables,function(){var a=!1,o=this;this.instance.positionAbs=n.positionAbs,this.instance.helperProportions=n.helperProportions,this.instance.offset.click=n.offset.click,this.instance._intersectsWith(this.instance.containerCache)&&(a=!0,t.each(n.sortables,function(){return this.instance.positionAbs=n.positionAbs,this.instance.helperProportions=n.helperProportions,this.instance.offset.click=n.offset.click,this!==o&&this.instance._intersectsWith(this.instance.containerCache)&&t.contains(o.instance.element[0],this.instance.element[0])&&(a=!1),a})),a?(this.instance.isOver||(this.instance.isOver=1,this.instance.currentItem=t(s).clone().removeAttr(\"id\").appendTo(this.instance.element).data(\"ui-sortable-item\",!0),this.instance.options._helper=this.instance.options.helper,this.instance.options.helper=function(){return i.helper[0]},e.target=this.instance.currentItem[0],this.instance._mouseCapture(e,!0),this.instance._mouseStart(e,!0,!0),this.instance.offset.click.top=n.offset.click.top,this.instance.offset.click.left=n.offset.click.left,this.instance.offset.parent.left-=n.offset.parent.left-this.instance.offset.parent.left,this.instance.offset.parent.top-=n.offset.parent.top-this.instance.offset.parent.top,n._trigger(\"toSortable\",e),n.dropped=this.instance.element,n.currentItem=n.element,this.instance.fromOutside=n),this.instance.currentItem&&this.instance._mouseDrag(e)):this.instance.isOver&&(this.instance.isOver=0,this.instance.cancelHelperRemoval=!0,this.instance.options.revert=!1,this.instance._trigger(\"out\",e,this.instance._uiHash(this.instance)),this.instance._mouseStop(e,!0),this.instance.options.helper=this.instance.options._helper,this.instance.currentItem.remove(),this.instance.placeholder&&this.instance.placeholder.remove(),n._trigger(\"fromSortable\",e),n.dropped=!1)})}}),t.ui.plugin.add(\"draggable\",\"cursor\",{start:function(){var e=t(\"body\"),i=t(this).data(\"ui-draggable\").options;e.css(\"cursor\")&&(i._cursor=e.css(\"cursor\")),e.css(\"cursor\",i.cursor)},stop:function(){var e=t(this).data(\"ui-draggable\").options;e._cursor&&t(\"body\").css(\"cursor\",e._cursor)}}),t.ui.plugin.add(\"draggable\",\"opacity\",{start:function(e,i){var n=t(i.helper),s=t(this).data(\"ui-draggable\").options;n.css(\"opacity\")&&(s._opacity=n.css(\"opacity\")),n.css(\"opacity\",s.opacity)},stop:function(e,i){var n=t(this).data(\"ui-draggable\").options;n._opacity&&t(i.helper).css(\"opacity\",n._opacity)}}),t.ui.plugin.add(\"draggable\",\"scroll\",{start:function(){var e=t(this).data(\"ui-draggable\");e.scrollParent[0]!==document&&\"HTML\"!==e.scrollParent[0].tagName&&(e.overflowOffset=e.scrollParent.offset())},drag:function(e){var i=t(this).data(\"ui-draggable\"),n=i.options,s=!1;i.scrollParent[0]!==document&&\"HTML\"!==i.scrollParent[0].tagName?(n.axis&&\"x\"===n.axis||(i.overflowOffset.top+i.scrollParent[0].offsetHeight-e.pageY<n.scrollSensitivity?i.scrollParent[0].scrollTop=s=i.scrollParent[0].scrollTop+n.scrollSpeed:e.pageY-i.overflowOffset.top<n.scrollSensitivity&&(i.scrollParent[0].scrollTop=s=i.scrollParent[0].scrollTop-n.scrollSpeed)),n.axis&&\"y\"===n.axis||(i.overflowOffset.left+i.scrollParent[0].offsetWidth-e.pageX<n.scrollSensitivity?i.scrollParent[0].scrollLeft=s=i.scrollParent[0].scrollLeft+n.scrollSpeed:e.pageX-i.overflowOffset.left<n.scrollSensitivity&&(i.scrollParent[0].scrollLeft=s=i.scrollParent[0].scrollLeft-n.scrollSpeed))):(n.axis&&\"x\"===n.axis||(e.pageY-t(document).scrollTop()<n.scrollSensitivity?s=t(document).scrollTop(t(document).scrollTop()-n.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<n.scrollSensitivity&&(s=t(document).scrollTop(t(document).scrollTop()+n.scrollSpeed))),n.axis&&\"y\"===n.axis||(e.pageX-t(document).scrollLeft()<n.scrollSensitivity?s=t(document).scrollLeft(t(document).scrollLeft()-n.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<n.scrollSensitivity&&(s=t(document).scrollLeft(t(document).scrollLeft()+n.scrollSpeed)))),s!==!1&&t.ui.ddmanager&&!n.dropBehaviour&&t.ui.ddmanager.prepareOffsets(i,e)}}),t.ui.plugin.add(\"draggable\",\"snap\",{start:function(){var e=t(this).data(\"ui-draggable\"),i=e.options;e.snapElements=[],t(i.snap.constructor!==String?i.snap.items||\":data(ui-draggable)\":i.snap).each(function(){var i=t(this),n=i.offset();this!==e.element[0]&&e.snapElements.push({item:this,width:i.outerWidth(),height:i.outerHeight(),top:n.top,left:n.left})})},drag:function(e,i){var n,s,a,o,r,l,h,u,c,d,p=t(this).data(\"ui-draggable\"),f=p.options,m=f.snapTolerance,g=i.offset.left,v=g+p.helperProportions.width,_=i.offset.top,b=_+p.helperProportions.height;for(c=p.snapElements.length-1;c>=0;c--)r=p.snapElements[c].left,l=r+p.snapElements[c].width,h=p.snapElements[c].top,u=h+p.snapElements[c].height,r-m>v||g>l+m||h-m>b||_>u+m||!t.contains(p.snapElements[c].item.ownerDocument,p.snapElements[c].item)?(p.snapElements[c].snapping&&p.options.snap.release&&p.options.snap.release.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[c].item})),p.snapElements[c].snapping=!1):(\"inner\"!==f.snapMode&&(n=m>=Math.abs(h-b),s=m>=Math.abs(u-_),a=m>=Math.abs(r-v),o=m>=Math.abs(l-g),n&&(i.position.top=p._convertPositionTo(\"relative\",{top:h-p.helperProportions.height,left:0}).top-p.margins.top),s&&(i.position.top=p._convertPositionTo(\"relative\",{top:u,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:r-p.helperProportions.width}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:l}).left-p.margins.left)),d=n||s||a||o,\"outer\"!==f.snapMode&&(n=m>=Math.abs(h-_),s=m>=Math.abs(u-b),a=m>=Math.abs(r-g),o=m>=Math.abs(l-v),n&&(i.position.top=p._convertPositionTo(\"relative\",{top:h,left:0}).top-p.margins.top),s&&(i.position.top=p._convertPositionTo(\"relative\",{top:u-p.helperProportions.height,left:0}).top-p.margins.top),a&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:r}).left-p.margins.left),o&&(i.position.left=p._convertPositionTo(\"relative\",{top:0,left:l-p.helperProportions.width}).left-p.margins.left)),!p.snapElements[c].snapping&&(n||s||a||o||d)&&p.options.snap.snap&&p.options.snap.snap.call(p.element,e,t.extend(p._uiHash(),{snapItem:p.snapElements[c].item})),p.snapElements[c].snapping=n||s||a||o||d)}}),t.ui.plugin.add(\"draggable\",\"stack\",{start:function(){var e,i=this.data(\"ui-draggable\").options,n=t.makeArray(t(i.stack)).sort(function(e,i){return(parseInt(t(e).css(\"zIndex\"),10)||0)-(parseInt(t(i).css(\"zIndex\"),10)||0)});n.length&&(e=parseInt(t(n[0]).css(\"zIndex\"),10)||0,t(n).each(function(i){t(this).css(\"zIndex\",e+i)}),this.css(\"zIndex\",e+n.length))}}),t.ui.plugin.add(\"draggable\",\"zIndex\",{start:function(e,i){var n=t(i.helper),s=t(this).data(\"ui-draggable\").options;n.css(\"zIndex\")&&(s._zIndex=n.css(\"zIndex\")),n.css(\"zIndex\",s.zIndex)},stop:function(e,i){var n=t(this).data(\"ui-draggable\").options;n._zIndex&&t(i.helper).css(\"zIndex\",n._zIndex)}})}(jQuery),function(t){function e(t,e,i){return t>e&&e+i>t}t.widget(\"ui.droppable\",{version:\"1.10.4\",widgetEventPrefix:\"drop\",options:{accept:\"*\",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:\"default\",tolerance:\"intersect\",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(n)?n:function(t){return t.is(n)},this.proportions=function(){return arguments.length?void(e=arguments[0]):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},t.ui.ddmanager.droppables[i.scope]=t.ui.ddmanager.droppables[i.scope]||[],t.ui.ddmanager.droppables[i.scope].push(this),i.addClasses&&this.element.addClass(\"ui-droppable\")},_destroy:function(){for(var e=0,i=t.ui.ddmanager.droppables[this.options.scope];i.length>e;e++)i[e]===this&&i.splice(e,1);this.element.removeClass(\"ui-droppable ui-droppable-disabled\")},_setOption:function(e,i){\"accept\"===e&&(this.accept=t.isFunction(i)?i:function(t){return t.is(i)}),t.Widget.prototype._setOption.apply(this,arguments)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger(\"activate\",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger(\"deactivate\",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger(\"over\",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"out\",e,this.ui(i)))},_drop:function(e,i){var n=i||t.ui.ddmanager.current,s=!1;return n&&(n.currentItem||n.element)[0]!==this.element[0]?(this.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function(){var e=t.data(this,\"ui-droppable\");return e.options.greedy&&!e.options.disabled&&e.options.scope===n.options.scope&&e.accept.call(e.element[0],n.currentItem||n.element)&&t.ui.intersect(n,t.extend(e,{offset:e.element.offset()}),e.options.tolerance)?(s=!0,!1):void 0}),s?!1:this.accept.call(this.element[0],n.currentItem||n.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger(\"drop\",e,this.ui(n)),this.element):!1):!1},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(t,i,n){if(!i.offset)return!1;var s,a,o=(t.positionAbs||t.position.absolute).left,r=(t.positionAbs||t.position.absolute).top,l=o+t.helperProportions.width,h=r+t.helperProportions.height,u=i.offset.left,c=i.offset.top,d=u+i.proportions().width,p=c+i.proportions().height;switch(n){case\"fit\":return o>=u&&d>=l&&r>=c&&p>=h;case\"intersect\":return o+t.helperProportions.width/2>u&&d>l-t.helperProportions.width/2&&r+t.helperProportions.height/2>c&&p>h-t.helperProportions.height/2;case\"pointer\":return s=(t.positionAbs||t.position.absolute).left+(t.clickOffset||t.offset.click).left,a=(t.positionAbs||t.position.absolute).top+(t.clickOffset||t.offset.click).top,e(a,c,i.proportions().height)&&e(s,u,i.proportions().width);case\"touch\":return(r>=c&&p>=r||h>=c&&p>=h||c>r&&h>p)&&(o>=u&&d>=o||l>=u&&d>=l||u>o&&l>d);default:return!1}},t.ui.ddmanager={current:null,droppables:{\"default\":[]},prepareOffsets:function(e,i){var n,s,a=t.ui.ddmanager.droppables[e.options.scope]||[],o=i?i.type:null,r=(e.currentItem||e.element).find(\":data(ui-droppable)\").addBack();t:for(n=0;a.length>n;n++)if(!(a[n].options.disabled||e&&!a[n].accept.call(a[n].element[0],e.currentItem||e.element))){for(s=0;r.length>s;s++)if(r[s]===a[n].element[0]){a[n].proportions().height=0;continue t}a[n].visible=\"none\"!==a[n].element.css(\"display\"),a[n].visible&&(\"mousedown\"===o&&a[n]._activate.call(a[n],i),a[n].offset=a[n].element.offset(),a[n].proportions({width:a[n].element[0].offsetWidth,height:a[n].element[0].offsetHeight}))}},drop:function(e,i){var n=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),n},dragStart:function(e,i){e.element.parentsUntil(\"body\").bind(\"scroll.droppable\",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,a,o=t.ui.intersect(e,this,this.options.tolerance),r=!o&&this.isover?\"isout\":o&&!this.isover?\"isover\":null;r&&(this.options.greedy&&(s=this.options.scope,a=this.element.parents(\":data(ui-droppable)\").filter(function(){return t.data(this,\"ui-droppable\").options.scope===s}),a.length&&(n=t.data(a[0],\"ui-droppable\"),n.greedyChild=\"isover\"===r)),n&&\"isover\"===r&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[r]=!0,this[\"isout\"===r?\"isover\":\"isout\"]=!1,this[\"isover\"===r?\"_over\":\"_out\"].call(this,i),n&&\"isout\"===r&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}})},dragStop:function(e,i){e.element.parentsUntil(\"body\").unbind(\"scroll.droppable\"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}}}(jQuery),function(t,e){var i=\"ui-effects-\";t.effects={effect:{}},function(t,e){function i(t,e,i){var n=c[e.type]||{};return null==t?i||!e.def?null:e.def:(t=n.floor?~~t:parseFloat(t),isNaN(t)?e.def:n.mod?(t+n.mod)%n.mod:0>t?0:t>n.max?n.max:t)}function n(i){var n=h(),s=n._rgba=[];return i=i.toLowerCase(),f(l,function(t,a){var o,r=a.re.exec(i),l=r&&a.parse(r),h=a.space||\"rgba\";return l?(o=n[h](l),n[u[h].cache]=o[u[h].cache],s=n._rgba=o._rgba,!1):e}),s.length?(\"0,0,0,0\"===s.join()&&t.extend(s,a.transparent),n):a[i]}function s(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var a,o=\"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\",r=/^([\\-+])=\\s*(\\d+\\.?\\d*)/,l=[{re:/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,space:\"hsla\",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],h=t.Color=function(e,i,n,s){return new t.Color.fn.parse(e,i,n,s)},u={rgba:{props:{red:{idx:0,type:\"byte\"},green:{idx:1,type:\"byte\"},blue:{idx:2,type:\"byte\"}}},hsla:{props:{hue:{idx:0,type:\"degrees\"},saturation:{idx:1,type:\"percent\"},lightness:{idx:2,type:\"percent\"}}}},c={\"byte\":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=h.support={},p=t(\"<p>\")[0],f=t.each;p.style.cssText=\"background-color:rgba(1,1,1,.5)\",d.rgba=p.style.backgroundColor.indexOf(\"rgba\")>-1,f(u,function(t,e){e.cache=\"_\"+t,e.props.alpha={idx:3,type:\"percent\",def:1}}),h.fn=t.extend(h.prototype,{parse:function(s,o,r,l){if(s===e)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=t(s).css(o),o=e);var c=this,d=t.type(s),p=this._rgba=[];return o!==e&&(s=[s,o,r,l],d=\"array\"),\"string\"===d?this.parse(n(s)||a._default):\"array\"===d?(f(u.rgba.props,function(t,e){p[e.idx]=i(s[e.idx],e)}),this):\"object\"===d?(s instanceof h?f(u,function(t,e){s[e.cache]&&(c[e.cache]=s[e.cache].slice())}):f(u,function(e,n){var a=n.cache;f(n.props,function(t,e){if(!c[a]&&n.to){if(\"alpha\"===t||null==s[t])return;c[a]=n.to(c._rgba)}c[a][e.idx]=i(s[t],e,!0)}),c[a]&&0>t.inArray(null,c[a].slice(0,3))&&(c[a][3]=1,n.from&&(c._rgba=n.from(c[a])))}),this):e},is:function(t){var i=h(t),n=!0,s=this;return f(u,function(t,a){var o,r=i[a.cache];return r&&(o=s[a.cache]||a.to&&a.to(s._rgba)||[],f(a.props,function(t,i){return null!=r[i.idx]?n=r[i.idx]===o[i.idx]:e})),n}),n},_space:function(){var t=[],e=this;return f(u,function(i,n){e[n.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var n=h(t),s=n._space(),a=u[s],o=0===this.alpha()?h(\"transparent\"):this,r=o[a.cache]||a.to(o._rgba),l=r.slice();return n=n[a.cache],f(a.props,function(t,s){var a=s.idx,o=r[a],h=n[a],u=c[s.type]||{};null!==h&&(null===o?l[a]=h:(u.mod&&(h-o>u.mod/2?o+=u.mod:o-h>u.mod/2&&(o-=u.mod)),l[a]=i((h-o)*e+o,s)))}),this[s](l)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=h(e)._rgba;return h(t.map(i,function(t,e){return(1-n)*s[e]+n*t}))},toRgbaString:function(){var e=\"rgba(\",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e=\"rgb(\"),e+i.join()+\")\"},toHslaString:function(){var e=\"hsla(\",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+\"%\"),t});return 1===i[3]&&(i.pop(),e=\"hsl(\"),e+i.join()+\")\"},toHexString:function(e){var i=this._rgba.slice(),n=i.pop();return e&&i.push(~~(255*n)),\"#\"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?\"0\"+t:t}).join(\"\")},toString:function(){return 0===this._rgba[3]?\"transparent\":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,u.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,n=t[0]/255,s=t[1]/255,a=t[2]/255,o=t[3],r=Math.max(n,s,a),l=Math.min(n,s,a),h=r-l,u=r+l,c=.5*u;return e=l===r?0:n===r?60*(s-a)/h+360:s===r?60*(a-n)/h+120:60*(n-s)/h+240,i=0===h?0:.5>=c?h/u:h/(2-u),[Math.round(e)%360,i,c,null==o?1:o]},u.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],n=t[2],a=t[3],o=.5>=n?n*(1+i):n+i-n*i,r=2*n-o;return[Math.round(255*s(r,o,e+1/3)),Math.round(255*s(r,o,e)),Math.round(255*s(r,o,e-1/3)),a]},f(u,function(n,s){var a=s.props,o=s.cache,l=s.to,u=s.from;h.fn[n]=function(n){if(l&&!this[o]&&(this[o]=l(this._rgba)),n===e)return this[o].slice();var s,r=t.type(n),c=\"array\"===r||\"object\"===r?n:arguments,d=this[o].slice();return f(a,function(t,e){var n=c[\"object\"===r?t:e.idx];null==n&&(n=d[e.idx]),d[e.idx]=i(n,e)}),u?(s=h(u(d)),s[o]=d,s):h(d)},f(a,function(e,i){h.fn[e]||(h.fn[e]=function(s){var a,o=t.type(s),l=\"alpha\"===e?this._hsla?\"hsla\":\"rgba\":n,h=this[l](),u=h[i.idx];return\"undefined\"===o?u:(\"function\"===o&&(s=s.call(this,u),o=t.type(s)),null==s&&i.empty?this:(\"string\"===o&&(a=r.exec(s),a&&(s=u+parseFloat(a[2])*(\"+\"===a[1]?1:-1))),h[i.idx]=s,this[l](h)))})})}),h.hook=function(e){var i=e.split(\" \");f(i,function(e,i){t.cssHooks[i]={set:function(e,s){var a,o,r=\"\";if(\"transparent\"!==s&&(\"string\"!==t.type(s)||(a=n(s)))){if(s=h(a||s),!d.rgba&&1!==s._rgba[3]){for(o=\"backgroundColor\"===i?e.parentNode:e;(\"\"===r||\"transparent\"===r)&&o&&o.style;)try{r=t.css(o,\"backgroundColor\"),o=o.parentNode}catch(l){}s=s.blend(r&&\"transparent\"!==r?r:\"_default\")}s=s.toRgbaString()}try{e.style[i]=s}catch(l){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=h(e.elem,i),e.end=h(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},h.hook(o),t.cssHooks.borderColor={expand:function(t){var e={};return f([\"Top\",\"Right\",\"Bottom\",\"Left\"],function(i,n){e[\"border\"+n+\"Color\"]=t}),e}},a=t.Color.names={aqua:\"#00ffff\",black:\"#000000\",blue:\"#0000ff\",fuchsia:\"#ff00ff\",gray:\"#808080\",green:\"#008000\",lime:\"#00ff00\",maroon:\"#800000\",navy:\"#000080\",olive:\"#808000\",purple:\"#800080\",red:\"#ff0000\",silver:\"#c0c0c0\",teal:\"#008080\",white:\"#ffffff\",yellow:\"#ffff00\",transparent:[null,null,null,0],_default:\"#ffffff\"}}(jQuery),function(){function i(e){var i,n,s=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,a={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)i=s[n],\"string\"==typeof s[i]&&(a[t.camelCase(i)]=s[i]);else for(i in s)\"string\"==typeof s[i]&&(a[i]=s[i]);return a}function n(e,i){var n,s,o={};for(n in i)s=i[n],e[n]!==s&&(a[n]||(t.fx.step[n]||!isNaN(parseFloat(s)))&&(o[n]=s));return o}var s=[\"add\",\"remove\",\"toggle\"],a={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each([\"borderLeftStyle\",\"borderRightStyle\",\"borderBottomStyle\",\"borderTopStyle\"],function(e,i){t.fx.step[i]=function(t){(\"none\"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(jQuery.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(e,a,o,r){var l=t.speed(a,o,r);return this.queue(function(){var a,o=t(this),r=o.attr(\"class\")||\"\",h=l.children?o.find(\"*\").addBack():o;h=h.map(function(){var e=t(this);return{el:e,start:i(this)}}),a=function(){t.each(s,function(t,i){e[i]&&o[i+\"Class\"](e[i])})},a(),h=h.map(function(){return this.end=i(this.el[0]),this.diff=n(this.start,this.end),this}),o.attr(\"class\",r),h=h.map(function(){var e=this,i=t.Deferred(),n=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,n),i.promise()}),t.when.apply(t,h.get()).done(function(){a(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,\"\")})}),l.complete.call(o[0])})})},t.fn.extend({addClass:function(e){return function(i,n,s,a){return n?t.effects.animateClass.call(this,{add:i},n,s,a):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,n,s,a){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},n,s,a):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(i){return function(n,s,a,o,r){return\"boolean\"==typeof s||s===e?a?t.effects.animateClass.call(this,s?{add:n}:{remove:n},a,o,r):i.apply(this,arguments):t.effects.animateClass.call(this,{toggle:n},s,a,o)}}(t.fn.toggleClass),switchClass:function(e,i,n,s,a){return t.effects.animateClass.call(this,{add:i,remove:e},n,s,a)}})}(),function(){function n(e,i,n,s){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(s=i,n=null,i={}),(\"number\"==typeof i||t.fx.speeds[i])&&(s=n,n=i,i={}),t.isFunction(n)&&(s=n,n=null),i&&t.extend(e,i),n=n||i.duration,e.duration=t.fx.off?0:\"number\"==typeof n?n:n in t.fx.speeds?t.fx.speeds[n]:t.fx.speeds._default,e.complete=s||i.complete,e}function s(e){return!e||\"number\"==typeof e||t.fx.speeds[e]?!0:\"string\"!=typeof e||t.effects.effect[e]?t.isFunction(e)?!0:\"object\"!=typeof e||e.effect?!1:!0:!0}t.extend(t.effects,{version:\"1.10.4\",save:function(t,e){for(var n=0;e.length>n;n++)null!==e[n]&&t.data(i+e[n],t[0].style[e[n]])},restore:function(t,n){var s,a;for(a=0;n.length>a;a++)null!==n[a]&&(s=t.data(i+n[a]),s===e&&(s=\"\"),t.css(n[a],s))},setMode:function(t,e){return\"toggle\"===e&&(e=t.is(\":hidden\")?\"show\":\"hide\"),e},getBaseline:function(t,e){var i,n;switch(t[0]){case\"top\":i=0;break;case\"middle\":i=.5;break;case\"bottom\":i=1;break;default:i=t[0]/e.height}switch(t[1]){case\"left\":n=0;break;case\"center\":n=.5;break;case\"right\":n=1;break;default:n=t[1]/e.width}return{x:n,y:i}},createWrapper:function(e){if(e.parent().is(\".ui-effects-wrapper\"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),\"float\":e.css(\"float\")},n=t(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({fontSize:\"100%\",background:\"transparent\",border:\"none\",margin:0,padding:0}),s={width:e.width(),height:e.height()},a=document.activeElement;try{a.id}catch(o){a=document.body}return e.wrap(n),(e[0]===a||t.contains(e[0],a))&&t(a).focus(),n=e.parent(),\"static\"===e.css(\"position\")?(n.css({position:\"relative\"}),e.css({position:\"relative\"})):(t.extend(i,{position:e.css(\"position\"),zIndex:e.css(\"z-index\")}),t.each([\"top\",\"left\",\"bottom\",\"right\"],function(t,n){i[n]=e.css(n),isNaN(parseInt(i[n],10))&&(i[n]=\"auto\")}),e.css({position:\"relative\",top:0,left:0,right:\"auto\",bottom:\"auto\"})),e.css(s),n.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(\".ui-effects-wrapper\")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).focus()),e},setTransition:function(e,i,n,s){return s=s||{},t.each(i,function(t,i){var a=e.cssUnit(i);a[0]>0&&(s[i]=a[0]*n+a[1])}),s}}),t.fn.extend({effect:function(){function e(e){function n(){t.isFunction(a)&&a.call(s[0]),t.isFunction(e)&&e()}var s=t(this),a=i.complete,r=i.mode;(s.is(\":hidden\")?\"hide\"===r:\"show\"===r)?(s[r](),n()):o.call(s[0],i,n)}var i=n.apply(this,arguments),s=i.mode,a=i.queue,o=t.effects.effect[i.effect];return t.fx.off||!o?s?this[s](i.duration,i.complete):this.each(function(){i.complete&&i.complete.call(this)}):a===!1?this.each(e):this.queue(a||\"fx\",e)},show:function(t){return function(e){if(s(e))return t.apply(this,arguments);var i=n.apply(this,arguments);return i.mode=\"show\",this.effect.call(this,i)}}(t.fn.show),hide:function(t){return function(e){if(s(e))return t.apply(this,arguments);var i=n.apply(this,arguments);return i.mode=\"hide\",this.effect.call(this,i)}}(t.fn.hide),toggle:function(t){return function(e){if(s(e)||\"boolean\"==typeof e)return t.apply(this,arguments);var i=n.apply(this,arguments);return i.mode=\"toggle\",this.effect.call(this,i)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),n=[];return t.each([\"em\",\"px\",\"%\",\"pt\"],function(t,e){i.indexOf(e)>0&&(n=[parseFloat(i),e])}),n}})}(),function(){var e={};t.each([\"Quad\",\"Cubic\",\"Quart\",\"Quint\",\"Expo\"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing[\"easeIn\"+e]=i,t.easing[\"easeOut\"+e]=function(t){return 1-i(1-t)},t.easing[\"easeInOut\"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}()}(jQuery),function(t){var e=/up|down|vertical/,i=/up|left|vertical|horizontal/;t.effects.effect.blind=function(n,s){var a,o,r,l=t(this),h=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],u=t.effects.setMode(l,n.mode||\"hide\"),c=n.direction||\"up\",d=e.test(c),p=d?\"height\":\"width\",f=d?\"top\":\"left\",m=i.test(c),g={},v=\"show\"===u;l.parent().is(\".ui-effects-wrapper\")?t.effects.save(l.parent(),h):t.effects.save(l,h),l.show(),a=t.effects.createWrapper(l).css({overflow:\"hidden\"}),o=a[p](),r=parseFloat(a.css(f))||0,g[p]=v?o:0,m||(l.css(d?\"bottom\":\"right\",0).css(d?\"top\":\"left\",\"auto\").css({position:\"absolute\"}),g[f]=v?r:o+r),v&&(a.css(p,0),m||a.css(f,r+o)),a.animate(g,{duration:n.duration,easing:n.easing,queue:!1,complete:function(){\"hide\"===u&&l.hide(),t.effects.restore(l,h),t.effects.removeWrapper(l),s()}})}}(jQuery),function(t){t.effects.effect.bounce=function(e,i){var n,s,a,o=t(this),r=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],l=t.effects.setMode(o,e.mode||\"effect\"),h=\"hide\"===l,u=\"show\"===l,c=e.direction||\"up\",d=e.distance,p=e.times||5,f=2*p+(u||h?1:0),m=e.duration/f,g=e.easing,v=\"up\"===c||\"down\"===c?\"top\":\"left\",_=\"up\"===c||\"left\"===c,b=o.queue(),y=b.length;for((u||h)&&r.push(\"opacity\"),t.effects.save(o,r),o.show(),t.effects.createWrapper(o),d||(d=o[\"top\"===v?\"outerHeight\":\"outerWidth\"]()/3),u&&(a={opacity:1},a[v]=0,o.css(\"opacity\",0).css(v,_?2*-d:2*d).animate(a,m,g)),h&&(d/=Math.pow(2,p-1)),a={},a[v]=0,n=0;p>n;n++)s={},s[v]=(_?\"-=\":\"+=\")+d,o.animate(s,m,g).animate(a,m,g),d=h?2*d:d/2;h&&(s={opacity:0},s[v]=(_?\"-=\":\"+=\")+d,o.animate(s,m,g)),o.queue(function(){h&&o.hide(),t.effects.restore(o,r),t.effects.removeWrapper(o),i()}),y>1&&b.splice.apply(b,[1,0].concat(b.splice(y,f+1))),o.dequeue()}}(jQuery),function(t){t.effects.effect.clip=function(e,i){var n,s,a,o=t(this),r=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],l=t.effects.setMode(o,e.mode||\"hide\"),h=\"show\"===l,u=e.direction||\"vertical\",c=\"vertical\"===u,d=c?\"height\":\"width\",p=c?\"top\":\"left\",f={};t.effects.save(o,r),o.show(),n=t.effects.createWrapper(o).css({overflow:\"hidden\"}),s=\"IMG\"===o[0].tagName?n:o,a=s[d](),h&&(s.css(d,0),s.css(p,a/2)),f[d]=h?a:0,f[p]=h?0:a/2,s.animate(f,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){h||o.hide(),t.effects.restore(o,r),t.effects.removeWrapper(o),i()}})}}(jQuery),function(t){t.effects.effect.drop=function(e,i){var n,s=t(this),a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"opacity\",\"height\",\"width\"],o=t.effects.setMode(s,e.mode||\"hide\"),r=\"show\"===o,l=e.direction||\"left\",h=\"up\"===l||\"down\"===l?\"top\":\"left\",u=\"up\"===l||\"left\"===l?\"pos\":\"neg\",c={opacity:r?1:0};t.effects.save(s,a),s.show(),t.effects.createWrapper(s),n=e.distance||s[\"top\"===h?\"outerHeight\":\"outerWidth\"](!0)/2,r&&s.css(\"opacity\",0).css(h,\"pos\"===u?-n:n),c[h]=(r?\"pos\"===u?\"+=\":\"-=\":\"pos\"===u?\"-=\":\"+=\")+n,s.animate(c,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){\"hide\"===o&&s.hide(),t.effects.restore(s,a),t.effects.removeWrapper(s),i()}})}}(jQuery),function(t){t.effects.effect.explode=function(e,i){function n(){b.push(this),b.length===c*d&&s()}function s(){p.css({visibility:\"visible\"}),t(b).remove(),m||p.hide(),i()}var a,o,r,l,h,u,c=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=c,p=t(this),f=t.effects.setMode(p,e.mode||\"hide\"),m=\"show\"===f,g=p.show().css(\"visibility\",\"hidden\").offset(),v=Math.ceil(p.outerWidth()/d),_=Math.ceil(p.outerHeight()/c),b=[];for(a=0;c>a;a++)for(l=g.top+a*_,u=a-(c-1)/2,o=0;d>o;o++)r=g.left+o*v,h=o-(d-1)/2,p.clone().appendTo(\"body\").wrap(\"<div></div>\").css({position:\"absolute\",visibility:\"visible\",left:-o*v,top:-a*_}).parent().addClass(\"ui-effects-explode\").css({position:\"absolute\",overflow:\"hidden\",width:v,height:_,left:r+(m?h*v:0),top:l+(m?u*_:0),opacity:m?0:1}).animate({left:r+(m?0:h*v),top:l+(m?0:u*_),opacity:m?1:0},e.duration||500,e.easing,n)}}(jQuery),function(t){t.effects.effect.fade=function(e,i){var n=t(this),s=t.effects.setMode(n,e.mode||\"toggle\");n.animate({opacity:s},{queue:!1,duration:e.duration,easing:e.easing,complete:i})}}(jQuery),function(t){t.effects.effect.fold=function(e,i){var n,s,a=t(this),o=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],r=t.effects.setMode(a,e.mode||\"hide\"),l=\"show\"===r,h=\"hide\"===r,u=e.size||15,c=/([0-9]+)%/.exec(u),d=!!e.horizFirst,p=l!==d,f=p?[\"width\",\"height\"]:[\"height\",\"width\"],m=e.duration/2,g={},v={};t.effects.save(a,o),a.show(),n=t.effects.createWrapper(a).css({overflow:\"hidden\"}),s=p?[n.width(),n.height()]:[n.height(),n.width()],c&&(u=parseInt(c[1],10)/100*s[h?0:1]),l&&n.css(d?{height:0,width:u}:{height:u,width:0}),g[f[0]]=l?s[0]:u,v[f[1]]=l?s[1]:0,n.animate(g,m,e.easing).animate(v,m,e.easing,function(){h&&a.hide(),t.effects.restore(a,o),t.effects.removeWrapper(a),i()})}}(jQuery),function(t){t.effects.effect.highlight=function(e,i){var n=t(this),s=[\"backgroundImage\",\"backgroundColor\",\"opacity\"],a=t.effects.setMode(n,e.mode||\"show\"),o={backgroundColor:n.css(\"backgroundColor\")};\n\"hide\"===a&&(o.opacity=0),t.effects.save(n,s),n.show().css({backgroundImage:\"none\",backgroundColor:e.color||\"#ffff99\"}).animate(o,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){\"hide\"===a&&n.hide(),t.effects.restore(n,s),i()}})}}(jQuery),function(t){t.effects.effect.pulsate=function(e,i){var n,s=t(this),a=t.effects.setMode(s,e.mode||\"show\"),o=\"show\"===a,r=\"hide\"===a,l=o||\"hide\"===a,h=2*(e.times||5)+(l?1:0),u=e.duration/h,c=0,d=s.queue(),p=d.length;for((o||!s.is(\":visible\"))&&(s.css(\"opacity\",0).show(),c=1),n=1;h>n;n++)s.animate({opacity:c},u,e.easing),c=1-c;s.animate({opacity:c},u,e.easing),s.queue(function(){r&&s.hide(),i()}),p>1&&d.splice.apply(d,[1,0].concat(d.splice(p,h+1))),s.dequeue()}}(jQuery),function(t){t.effects.effect.puff=function(e,i){var n=t(this),s=t.effects.setMode(n,e.mode||\"hide\"),a=\"hide\"===s,o=parseInt(e.percent,10)||150,r=o/100,l={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};t.extend(e,{effect:\"scale\",queue:!1,fade:!0,mode:s,complete:i,percent:a?o:100,from:a?l:{height:l.height*r,width:l.width*r,outerHeight:l.outerHeight*r,outerWidth:l.outerWidth*r}}),n.effect(e)},t.effects.effect.scale=function(e,i){var n=t(this),s=t.extend(!0,{},e),a=t.effects.setMode(n,e.mode||\"effect\"),o=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:\"hide\"===a?0:100),r=e.direction||\"both\",l=e.origin,h={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()},u={y:\"horizontal\"!==r?o/100:1,x:\"vertical\"!==r?o/100:1};s.effect=\"size\",s.queue=!1,s.complete=i,\"effect\"!==a&&(s.origin=l||[\"middle\",\"center\"],s.restore=!0),s.from=e.from||(\"show\"===a?{height:0,width:0,outerHeight:0,outerWidth:0}:h),s.to={height:h.height*u.y,width:h.width*u.x,outerHeight:h.outerHeight*u.y,outerWidth:h.outerWidth*u.x},s.fade&&(\"show\"===a&&(s.from.opacity=0,s.to.opacity=1),\"hide\"===a&&(s.from.opacity=1,s.to.opacity=0)),n.effect(s)},t.effects.effect.size=function(e,i){var n,s,a,o=t(this),r=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\",\"overflow\",\"opacity\"],l=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"overflow\",\"opacity\"],h=[\"width\",\"height\",\"overflow\"],u=[\"fontSize\"],c=[\"borderTopWidth\",\"borderBottomWidth\",\"paddingTop\",\"paddingBottom\"],d=[\"borderLeftWidth\",\"borderRightWidth\",\"paddingLeft\",\"paddingRight\"],p=t.effects.setMode(o,e.mode||\"effect\"),f=e.restore||\"effect\"!==p,m=e.scale||\"both\",g=e.origin||[\"middle\",\"center\"],v=o.css(\"position\"),_=f?r:l,b={height:0,width:0,outerHeight:0,outerWidth:0};\"show\"===p&&o.show(),n={height:o.height(),width:o.width(),outerHeight:o.outerHeight(),outerWidth:o.outerWidth()},\"toggle\"===e.mode&&\"show\"===p?(o.from=e.to||b,o.to=e.from||n):(o.from=e.from||(\"show\"===p?b:n),o.to=e.to||(\"hide\"===p?b:n)),a={from:{y:o.from.height/n.height,x:o.from.width/n.width},to:{y:o.to.height/n.height,x:o.to.width/n.width}},(\"box\"===m||\"both\"===m)&&(a.from.y!==a.to.y&&(_=_.concat(c),o.from=t.effects.setTransition(o,c,a.from.y,o.from),o.to=t.effects.setTransition(o,c,a.to.y,o.to)),a.from.x!==a.to.x&&(_=_.concat(d),o.from=t.effects.setTransition(o,d,a.from.x,o.from),o.to=t.effects.setTransition(o,d,a.to.x,o.to))),(\"content\"===m||\"both\"===m)&&a.from.y!==a.to.y&&(_=_.concat(u).concat(h),o.from=t.effects.setTransition(o,u,a.from.y,o.from),o.to=t.effects.setTransition(o,u,a.to.y,o.to)),t.effects.save(o,_),o.show(),t.effects.createWrapper(o),o.css(\"overflow\",\"hidden\").css(o.from),g&&(s=t.effects.getBaseline(g,n),o.from.top=(n.outerHeight-o.outerHeight())*s.y,o.from.left=(n.outerWidth-o.outerWidth())*s.x,o.to.top=(n.outerHeight-o.to.outerHeight)*s.y,o.to.left=(n.outerWidth-o.to.outerWidth)*s.x),o.css(o.from),(\"content\"===m||\"both\"===m)&&(c=c.concat([\"marginTop\",\"marginBottom\"]).concat(u),d=d.concat([\"marginLeft\",\"marginRight\"]),h=r.concat(c).concat(d),o.find(\"*[width]\").each(function(){var i=t(this),n={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};f&&t.effects.save(i,h),i.from={height:n.height*a.from.y,width:n.width*a.from.x,outerHeight:n.outerHeight*a.from.y,outerWidth:n.outerWidth*a.from.x},i.to={height:n.height*a.to.y,width:n.width*a.to.x,outerHeight:n.height*a.to.y,outerWidth:n.width*a.to.x},a.from.y!==a.to.y&&(i.from=t.effects.setTransition(i,c,a.from.y,i.from),i.to=t.effects.setTransition(i,c,a.to.y,i.to)),a.from.x!==a.to.x&&(i.from=t.effects.setTransition(i,d,a.from.x,i.from),i.to=t.effects.setTransition(i,d,a.to.x,i.to)),i.css(i.from),i.animate(i.to,e.duration,e.easing,function(){f&&t.effects.restore(i,h)})})),o.animate(o.to,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){0===o.to.opacity&&o.css(\"opacity\",o.from.opacity),\"hide\"===p&&o.hide(),t.effects.restore(o,_),f||(\"static\"===v?o.css({position:\"relative\",top:o.to.top,left:o.to.left}):t.each([\"top\",\"left\"],function(t,e){o.css(e,function(e,i){var n=parseInt(i,10),s=t?o.to.left:o.to.top;return\"auto\"===i?s+\"px\":n+s+\"px\"})})),t.effects.removeWrapper(o),i()}})}}(jQuery),function(t){t.effects.effect.shake=function(e,i){var n,s=t(this),a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"height\",\"width\"],o=t.effects.setMode(s,e.mode||\"effect\"),r=e.direction||\"left\",l=e.distance||20,h=e.times||3,u=2*h+1,c=Math.round(e.duration/u),d=\"up\"===r||\"down\"===r?\"top\":\"left\",p=\"up\"===r||\"left\"===r,f={},m={},g={},v=s.queue(),_=v.length;for(t.effects.save(s,a),s.show(),t.effects.createWrapper(s),f[d]=(p?\"-=\":\"+=\")+l,m[d]=(p?\"+=\":\"-=\")+2*l,g[d]=(p?\"-=\":\"+=\")+2*l,s.animate(f,c,e.easing),n=1;h>n;n++)s.animate(m,c,e.easing).animate(g,c,e.easing);s.animate(m,c,e.easing).animate(f,c/2,e.easing).queue(function(){\"hide\"===o&&s.hide(),t.effects.restore(s,a),t.effects.removeWrapper(s),i()}),_>1&&v.splice.apply(v,[1,0].concat(v.splice(_,u+1))),s.dequeue()}}(jQuery),function(t){t.effects.effect.slide=function(e,i){var n,s=t(this),a=[\"position\",\"top\",\"bottom\",\"left\",\"right\",\"width\",\"height\"],o=t.effects.setMode(s,e.mode||\"show\"),r=\"show\"===o,l=e.direction||\"left\",h=\"up\"===l||\"down\"===l?\"top\":\"left\",u=\"up\"===l||\"left\"===l,c={};t.effects.save(s,a),s.show(),n=e.distance||s[\"top\"===h?\"outerHeight\":\"outerWidth\"](!0),t.effects.createWrapper(s).css({overflow:\"hidden\"}),r&&s.css(h,u?isNaN(n)?\"-\"+n:-n:n),c[h]=(r?u?\"+=\":\"-=\":u?\"-=\":\"+=\")+n,s.animate(c,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){\"hide\"===o&&s.hide(),t.effects.restore(s,a),t.effects.removeWrapper(s),i()}})}}(jQuery),function(t){t.effects.effect.transfer=function(e,i){var n=t(this),s=t(e.to),a=\"fixed\"===s.css(\"position\"),o=t(\"body\"),r=a?o.scrollTop():0,l=a?o.scrollLeft():0,h=s.offset(),u={top:h.top-r,left:h.left-l,height:s.innerHeight(),width:s.innerWidth()},c=n.offset(),d=t(\"<div class='ui-effects-transfer'></div>\").appendTo(document.body).addClass(e.className).css({top:c.top-r,left:c.left-l,height:n.innerHeight(),width:n.innerWidth(),position:a?\"fixed\":\"absolute\"}).animate(u,e.duration,e.easing,function(){d.remove(),i()})}}(jQuery),function(t){t.widget(\"ui.menu\",{version:\"1.10.4\",defaultElement:\"<ul>\",delay:300,options:{icons:{submenu:\"ui-icon-carat-1-e\"},menus:\"ul\",position:{my:\"left top\",at:\"right top\"},role:\"menu\",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-menu-icons\",!!this.element.find(\".ui-icon\").length).attr({role:this.options.role,tabIndex:0}).bind(\"click\"+this.eventNamespace,t.proxy(function(t){this.options.disabled&&t.preventDefault()},this)),this.options.disabled&&this.element.addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this._on({\"mousedown .ui-menu-item > a\":function(t){t.preventDefault()},\"click .ui-state-disabled > a\":function(t){t.preventDefault()},\"click .ui-menu-item:has(a)\":function(e){var i=t(e.target).closest(\".ui-menu-item\");!this.mouseHandled&&i.not(\".ui-state-disabled\").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(\".ui-menu\").length?this.expand(e):!this.element.is(\":focus\")&&t(this.document[0].activeElement).closest(\".ui-menu\").length&&(this.element.trigger(\"focus\",[!0]),this.active&&1===this.active.parents(\".ui-menu\").length&&clearTimeout(this.timer)))},\"mouseenter .ui-menu-item\":function(e){var i=t(e.currentTarget);i.siblings().children(\".ui-state-active\").removeClass(\"ui-state-active\"),this.focus(e,i)},mouseleave:\"collapseAll\",\"mouseleave .ui-menu\":\"collapseAll\",focus:function(t,e){var i=this.active||this.element.children(\".ui-menu-item\").eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){t.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(e)})},keydown:\"_keydown\"}),this.refresh(),this._on(this.document,{click:function(e){t(e.target).closest(\".ui-menu\").length||this.collapseAll(e),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeClass(\"ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-expanded\").removeAttr(\"aria-hidden\").removeAttr(\"aria-disabled\").removeUniqueId().show(),this.element.find(\".ui-menu-item\").removeClass(\"ui-menu-item\").removeAttr(\"role\").removeAttr(\"aria-disabled\").children(\"a\").removeUniqueId().removeClass(\"ui-corner-all ui-state-hover\").removeAttr(\"tabIndex\").removeAttr(\"role\").removeAttr(\"aria-haspopup\").children().each(function(){var e=t(this);e.data(\"ui-menu-submenu-carat\")&&e.remove()}),this.element.find(\".ui-menu-divider\").removeClass(\"ui-menu-divider ui-widget-content\")},_keydown:function(e){function i(t){return t.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g,\"\\\\$&\")}var n,s,a,o,r,l=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move(\"first\",\"first\",e);break;case t.ui.keyCode.END:this._move(\"last\",\"last\",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(\".ui-state-disabled\")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:l=!1,s=this.previousFilter||\"\",a=String.fromCharCode(e.keyCode),o=!1,clearTimeout(this.filterTimer),a===s?o=!0:a=s+a,r=RegExp(\"^\"+i(a),\"i\"),n=this.activeMenu.children(\".ui-menu-item\").filter(function(){return r.test(t(this).children(\"a\").text())}),n=o&&-1!==n.index(this.active.next())?this.active.nextAll(\".ui-menu-item\"):n,n.length||(a=String.fromCharCode(e.keyCode),r=RegExp(\"^\"+i(a),\"i\"),n=this.activeMenu.children(\".ui-menu-item\").filter(function(){return r.test(t(this).children(\"a\").text())})),n.length?(this.focus(e,n),n.length>1?(this.previousFilter=a,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter):delete this.previousFilter}l&&e.preventDefault()},_activate:function(t){this.active.is(\".ui-state-disabled\")||(this.active.children(\"a[aria-haspopup='true']\").length?this.expand(t):this.select(t))},refresh:function(){var e,i=this.options.icons.submenu,n=this.element.find(this.options.menus);this.element.toggleClass(\"ui-menu-icons\",!!this.element.find(\".ui-icon\").length),n.filter(\":not(.ui-menu)\").addClass(\"ui-menu ui-widget ui-widget-content ui-corner-all\").hide().attr({role:this.options.role,\"aria-hidden\":\"true\",\"aria-expanded\":\"false\"}).each(function(){var e=t(this),n=e.prev(\"a\"),s=t(\"<span>\").addClass(\"ui-menu-icon ui-icon \"+i).data(\"ui-menu-submenu-carat\",!0);n.attr(\"aria-haspopup\",\"true\").prepend(s),e.attr(\"aria-labelledby\",n.attr(\"id\"))}),e=n.add(this.element),e.children(\":not(.ui-menu-item):has(a)\").addClass(\"ui-menu-item\").attr(\"role\",\"presentation\").children(\"a\").uniqueId().addClass(\"ui-corner-all\").attr({tabIndex:-1,role:this._itemRole()}),e.children(\":not(.ui-menu-item)\").each(function(){var e=t(this);/[^\\-\\u2014\\u2013\\s]/.test(e.text())||e.addClass(\"ui-widget-content ui-menu-divider\")}),e.children(\".ui-state-disabled\").attr(\"aria-disabled\",\"true\"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:\"menuitem\",listbox:\"option\"}[this.options.role]},_setOption:function(t,e){\"icons\"===t&&this.element.find(\".ui-menu-icon\").removeClass(this.options.icons.submenu).addClass(e.submenu),this._super(t,e)},focus:function(t,e){var i,n;this.blur(t,t&&\"focus\"===t.type),this._scrollIntoView(e),this.active=e.first(),n=this.active.children(\"a\").addClass(\"ui-state-focus\"),this.options.role&&this.element.attr(\"aria-activedescendant\",n.attr(\"id\")),this.active.parent().closest(\".ui-menu-item\").children(\"a:first\").addClass(\"ui-state-active\"),t&&\"keydown\"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(\".ui-menu\"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger(\"focus\",t,{item:e})},_scrollIntoView:function(e){var i,n,s,a,o,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],\"borderTopWidth\"))||0,n=parseFloat(t.css(this.activeMenu[0],\"paddingTop\"))||0,s=e.offset().top-this.activeMenu.offset().top-i-n,a=this.activeMenu.scrollTop(),o=this.activeMenu.height(),r=e.height(),0>s?this.activeMenu.scrollTop(a+s):s+r>o&&this.activeMenu.scrollTop(a+s-o+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this.active.children(\"a\").removeClass(\"ui-state-focus\"),this.active=null,this._trigger(\"blur\",t,{item:this.active}))},_startOpening:function(t){clearTimeout(this.timer),\"true\"===t.attr(\"aria-hidden\")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(\".ui-menu\").not(e.parents(\".ui-menu\")).hide().attr(\"aria-hidden\",\"true\"),e.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\",\"true\").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var n=i?this.element:t(e&&e.target).closest(this.element.find(\".ui-menu\"));n.length||(n=this.element),this._close(n),this.blur(e),this.activeMenu=n},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(\".ui-menu\").hide().attr(\"aria-hidden\",\"true\").attr(\"aria-expanded\",\"false\").end().find(\"a.ui-state-active\").removeClass(\"ui-state-active\")},collapse:function(t){var e=this.active&&this.active.parent().closest(\".ui-menu-item\",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(\".ui-menu \").children(\".ui-menu-item\").first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move(\"next\",\"first\",t)},previous:function(t){this._move(\"prev\",\"last\",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(\".ui-menu-item\").length},isLastItem:function(){return this.active&&!this.active.nextAll(\".ui-menu-item\").length},_move:function(t,e,i){var n;this.active&&(n=\"first\"===t||\"last\"===t?this.active[\"first\"===t?\"prevAll\":\"nextAll\"](\".ui-menu-item\").eq(-1):this.active[t+\"All\"](\".ui-menu-item\").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.children(\".ui-menu-item\")[e]()),this.focus(i,n)},nextPage:function(e){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.nextAll(\".ui-menu-item\").each(function(){return i=t(this),0>i.offset().top-n-s}),this.focus(e,i)):this.focus(e,this.activeMenu.children(\".ui-menu-item\")[this.active?\"last\":\"first\"]()))):void this.next(e)},previousPage:function(e){var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(\".ui-menu-item\").each(function(){return i=t(this),i.offset().top-n+s>0}),this.focus(e,i)):this.focus(e,this.activeMenu.children(\".ui-menu-item\").first()))):void this.next(e)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop(\"scrollHeight\")},select:function(e){this.active=this.active||t(e.target).closest(\".ui-menu-item\");var i={item:this.active};this.active.has(\".ui-menu\").length||this.collapseAll(e,!0),this._trigger(\"select\",e,i)}})}(jQuery),function(t,e){t.widget(\"ui.progressbar\",{version:\"1.10.4\",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").attr({role:\"progressbar\",\"aria-valuemin\":this.min}),this.valueDiv=t(\"<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>\").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass(\"ui-progressbar ui-widget ui-widget-content ui-corner-all\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.valueDiv.remove()},value:function(t){return t===e?this.options.value:(this.options.value=this._constrainedValue(t),this._refreshValue(),e)},_constrainedValue:function(t){return t===e&&(t=this.options.value),this.indeterminate=t===!1,\"number\"!=typeof t&&(t=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){\"max\"===t&&(e=Math.max(this.min,e)),this._super(t,e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).toggleClass(\"ui-corner-right\",e===this.options.max).width(i.toFixed(0)+\"%\"),this.element.toggleClass(\"ui-progressbar-indeterminate\",this.indeterminate),this.indeterminate?(this.element.removeAttr(\"aria-valuenow\"),this.overlayDiv||(this.overlayDiv=t(\"<div class='ui-progressbar-overlay'></div>\").appendTo(this.valueDiv))):(this.element.attr({\"aria-valuemax\":this.options.max,\"aria-valuenow\":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger(\"change\")),e===this.options.max&&this._trigger(\"complete\")}})}(jQuery),function(t){function e(t){return parseInt(t,10)||0}function i(t){return!isNaN(parseInt(t,10))}t.widget(\"ui.resizable\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"resize\",options:{alsoResize:!1,animate:!1,animateDuration:\"slow\",animateEasing:\"swing\",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:\"e,s,se\",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_create:function(){var e,i,n,s,a,o=this,r=this.options;if(this.element.addClass(\"ui-resizable\"),t.extend(this,{_aspectRatio:!!r.aspectRatio,aspectRatio:r.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:r.helper||r.ghost||r.animate?r.helper||\"ui-resizable-helper\":null}),this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)&&(this.element.wrap(t(\"<div class='ui-wrapper' style='overflow: hidden;'></div>\").css({position:this.element.css(\"position\"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css(\"top\"),left:this.element.css(\"left\")})),this.element=this.element.parent().data(\"ui-resizable\",this.element.data(\"ui-resizable\")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css(\"marginLeft\"),marginTop:this.originalElement.css(\"marginTop\"),marginRight:this.originalElement.css(\"marginRight\"),marginBottom:this.originalElement.css(\"marginBottom\")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css(\"resize\"),this.originalElement.css(\"resize\",\"none\"),this._proportionallyResizeElements.push(this.originalElement.css({position:\"static\",zoom:1,display:\"block\"})),this.originalElement.css({margin:this.originalElement.css(\"margin\")}),this._proportionallyResize()),this.handles=r.handles||(t(\".ui-resizable-handle\",this.element).length?{n:\".ui-resizable-n\",e:\".ui-resizable-e\",s:\".ui-resizable-s\",w:\".ui-resizable-w\",se:\".ui-resizable-se\",sw:\".ui-resizable-sw\",ne:\".ui-resizable-ne\",nw:\".ui-resizable-nw\"}:\"e,s,se\"),this.handles.constructor===String)for(\"all\"===this.handles&&(this.handles=\"n,e,s,w,se,sw,ne,nw\"),e=this.handles.split(\",\"),this.handles={},i=0;e.length>i;i++)n=t.trim(e[i]),a=\"ui-resizable-\"+n,s=t(\"<div class='ui-resizable-handle \"+a+\"'></div>\"),s.css({zIndex:r.zIndex}),\"se\"===n&&s.addClass(\"ui-icon ui-icon-gripsmall-diagonal-se\"),this.handles[n]=\".ui-resizable-\"+n,this.element.append(s);this._renderAxis=function(e){var i,n,s,a;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String&&(this.handles[i]=t(this.handles[i],this.element).show()),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/textarea|input|select|button/i)&&(n=t(this.handles[i],this.element),a=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=[\"padding\",/ne|nw|n/.test(i)?\"Top\":/se|sw|s/.test(i)?\"Bottom\":/^e$/.test(i)?\"Right\":\"Left\"].join(\"\"),e.css(s,a),this._proportionallyResize()),t(this.handles[i]).length},this._renderAxis(this.element),this._handles=t(\".ui-resizable-handle\",this.element).disableSelection(),this._handles.mouseover(function(){o.resizing||(this.className&&(s=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),o.axis=s&&s[1]?s[1]:\"se\")}),r.autoHide&&(this._handles.hide(),t(this.element).addClass(\"ui-resizable-autohide\").mouseenter(function(){r.disabled||(t(this).removeClass(\"ui-resizable-autohide\"),o._handles.show())}).mouseleave(function(){r.disabled||o.resizing||(t(this).addClass(\"ui-resizable-autohide\"),o._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeClass(\"ui-resizable ui-resizable-disabled ui-resizable-resizing\").removeData(\"resizable\").removeData(\"ui-resizable\").unbind(\".resizable\").find(\".ui-resizable-handle\").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css(\"position\"),width:e.outerWidth(),height:e.outerHeight(),top:e.css(\"top\"),left:e.css(\"left\")}).insertAfter(e),e.remove()),this.originalElement.css(\"resize\",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(e){var i,n,s=!1;for(i in this.handles)n=t(this.handles[i])[0],(n===e.target||t.contains(n,e.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(i){var n,s,a,o=this.options,r=this.element.position(),l=this.element;return this.resizing=!0,/absolute/.test(l.css(\"position\"))?l.css({position:\"absolute\",top:l.css(\"top\"),left:l.css(\"left\")}):l.is(\".ui-draggable\")&&l.css({position:\"absolute\",top:r.top,left:r.left}),this._renderProxy(),n=e(this.helper.css(\"left\")),s=e(this.helper.css(\"top\")),o.containment&&(n+=t(o.containment).scrollLeft()||0,s+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:n,top:s},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:l.width(),height:l.height()},this.originalSize=this._helper?{width:l.outerWidth(),height:l.outerHeight()}:{width:l.width(),height:l.height()},this.originalPosition={left:n,top:s},this.sizeDiff={width:l.outerWidth()-l.width(),height:l.outerHeight()-l.height()},this.originalMousePosition={left:i.pageX,top:i.pageY},this.aspectRatio=\"number\"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,a=t(\".ui-resizable-\"+this.axis).css(\"cursor\"),t(\"body\").css(\"cursor\",\"auto\"===a?this.axis+\"-resize\":a),l.addClass(\"ui-resizable-resizing\"),this._propagate(\"start\",i),!0},_mouseDrag:function(e){var i,n=this.helper,s={},a=this.originalMousePosition,o=this.axis,r=this.position.top,l=this.position.left,h=this.size.width,u=this.size.height,c=e.pageX-a.left||0,d=e.pageY-a.top||0,p=this._change[o];return p?(i=p.apply(this,[e,c,d]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate(\"resize\",e),this.position.top!==r&&(s.top=this.position.top+\"px\"),this.position.left!==l&&(s.left=this.position.left+\"px\"),this.size.width!==h&&(s.width=this.size.width+\"px\"),this.size.height!==u&&(s.height=this.size.height+\"px\"),n.css(s),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(s)||this._trigger(\"resize\",e,this.ui()),!1):!1},_mouseStop:function(e){this.resizing=!1;var i,n,s,a,o,r,l,h=this.options,u=this;return this._helper&&(i=this._proportionallyResizeElements,n=i.length&&/textarea/i.test(i[0].nodeName),s=n&&t.ui.hasScroll(i[0],\"left\")?0:u.sizeDiff.height,a=n?0:u.sizeDiff.width,o={width:u.helper.width()-a,height:u.helper.height()-s},r=parseInt(u.element.css(\"left\"),10)+(u.position.left-u.originalPosition.left)||null,l=parseInt(u.element.css(\"top\"),10)+(u.position.top-u.originalPosition.top)||null,h.animate||this.element.css(t.extend(o,{top:l,left:r})),u.helper.height(u.size.height),u.helper.width(u.size.width),this._helper&&!h.animate&&this._proportionallyResize()),t(\"body\").css(\"cursor\",\"auto\"),this.element.removeClass(\"ui-resizable-resizing\"),this._propagate(\"stop\",e),this._helper&&this.helper.remove(),!1},_updateVirtualBoundaries:function(t){var e,n,s,a,o,r=this.options;o={minWidth:i(r.minWidth)?r.minWidth:0,maxWidth:i(r.maxWidth)?r.maxWidth:1/0,minHeight:i(r.minHeight)?r.minHeight:0,maxHeight:i(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,s=o.minWidth/this.aspectRatio,n=o.maxHeight*this.aspectRatio,a=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),s>o.minHeight&&(o.minHeight=s),o.maxWidth>n&&(o.maxWidth=n),o.maxHeight>a&&(o.maxHeight=a)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),i(t.left)&&(this.position.left=t.left),i(t.top)&&(this.position.top=t.top),i(t.height)&&(this.size.height=t.height),i(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,n=this.size,s=this.axis;return i(t.height)?t.width=t.height*this.aspectRatio:i(t.width)&&(t.height=t.width/this.aspectRatio),\"sw\"===s&&(t.left=e.left+(n.width-t.width),t.top=null),\"nw\"===s&&(t.top=e.top+(n.height-t.height),t.left=e.left+(n.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,n=this.axis,s=i(t.width)&&e.maxWidth&&e.maxWidth<t.width,a=i(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=i(t.width)&&e.minWidth&&e.minWidth>t.width,r=i(t.height)&&e.minHeight&&e.minHeight>t.height,l=this.originalPosition.left+this.originalSize.width,h=this.position.top+this.size.height,u=/sw|nw|w/.test(n),c=/nw|ne|n/.test(n);return o&&(t.width=e.minWidth),r&&(t.height=e.minHeight),s&&(t.width=e.maxWidth),a&&(t.height=e.maxHeight),o&&u&&(t.left=l-e.minWidth),s&&u&&(t.left=l-e.maxWidth),r&&c&&(t.top=h-e.minHeight),a&&c&&(t.top=h-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_proportionallyResize:function(){if(this._proportionallyResizeElements.length){var t,e,i,n,s,a=this.helper||this.element;for(t=0;this._proportionallyResizeElements.length>t;t++){if(s=this._proportionallyResizeElements[t],!this.borderDif)for(this.borderDif=[],i=[s.css(\"borderTopWidth\"),s.css(\"borderRightWidth\"),s.css(\"borderBottomWidth\"),s.css(\"borderLeftWidth\")],n=[s.css(\"paddingTop\"),s.css(\"paddingRight\"),s.css(\"paddingBottom\"),s.css(\"paddingLeft\")],e=0;i.length>e;e++)this.borderDif[e]=(parseInt(i[e],10)||0)+(parseInt(n[e],10)||0);s.css({height:a.height()-this.borderDif[0]-this.borderDif[2]||0,width:a.width()-this.borderDif[1]-this.borderDif[3]||0})}}},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t(\"<div style='overflow:hidden;'></div>\"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:\"absolute\",left:this.elementOffset.left+\"px\",top:this.elementOffset.top+\"px\",zIndex:++i.zIndex}),this.helper.appendTo(\"body\").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,n=this.originalPosition;return{left:n.left+e,width:i.width-e}},n:function(t,e,i){var n=this.originalSize,s=this.originalPosition;return{top:s.top+i,height:n.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},sw:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,n]))},ne:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},nw:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,n]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),\"resize\"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add(\"resizable\",\"animate\",{stop:function(e){var i=t(this).data(\"ui-resizable\"),n=i.options,s=i._proportionallyResizeElements,a=s.length&&/textarea/i.test(s[0].nodeName),o=a&&t.ui.hasScroll(s[0],\"left\")?0:i.sizeDiff.height,r=a?0:i.sizeDiff.width,l={width:i.size.width-r,height:i.size.height-o},h=parseInt(i.element.css(\"left\"),10)+(i.position.left-i.originalPosition.left)||null,u=parseInt(i.element.css(\"top\"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,u&&h?{top:u,left:h}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseInt(i.element.css(\"width\"),10),height:parseInt(i.element.css(\"height\"),10),top:parseInt(i.element.css(\"top\"),10),left:parseInt(i.element.css(\"left\"),10)};s&&s.length&&t(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate(\"resize\",e)}})}}),t.ui.plugin.add(\"resizable\",\"containment\",{start:function(){var i,n,s,a,o,r,l,h=t(this).data(\"ui-resizable\"),u=h.options,c=h.element,d=u.containment,p=d instanceof t?d.get(0):/parent/.test(d)?c.parent().get(0):d;p&&(h.containerElement=t(p),/document/.test(d)||d===document?(h.containerOffset={left:0,top:0},h.containerPosition={left:0,top:0},h.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(i=t(p),n=[],t([\"Top\",\"Right\",\"Left\",\"Bottom\"]).each(function(t,s){n[t]=e(i.css(\"padding\"+s))}),h.containerOffset=i.offset(),h.containerPosition=i.position(),h.containerSize={height:i.innerHeight()-n[3],width:i.innerWidth()-n[1]},s=h.containerOffset,a=h.containerSize.height,o=h.containerSize.width,r=t.ui.hasScroll(p,\"left\")?p.scrollWidth:o,l=t.ui.hasScroll(p)?p.scrollHeight:a,h.parentData={element:p,left:s.left,top:s.top,width:r,height:l}))},resize:function(e){var i,n,s,a,o=t(this).data(\"ui-resizable\"),r=o.options,l=o.containerOffset,h=o.position,u=o._aspectRatio||e.shiftKey,c={top:0,left:0},d=o.containerElement;d[0]!==document&&/static/.test(d.css(\"position\"))&&(c=l),h.left<(o._helper?l.left:0)&&(o.size.width=o.size.width+(o._helper?o.position.left-l.left:o.position.left-c.left),u&&(o.size.height=o.size.width/o.aspectRatio),o.position.left=r.helper?l.left:0),h.top<(o._helper?l.top:0)&&(o.size.height=o.size.height+(o._helper?o.position.top-l.top:o.position.top),u&&(o.size.width=o.size.height*o.aspectRatio),o.position.top=o._helper?l.top:0),o.offset.left=o.parentData.left+o.position.left,o.offset.top=o.parentData.top+o.position.top,i=Math.abs((o._helper?o.offset.left-c.left:o.offset.left-c.left)+o.sizeDiff.width),n=Math.abs((o._helper?o.offset.top-c.top:o.offset.top-l.top)+o.sizeDiff.height),s=o.containerElement.get(0)===o.element.parent().get(0),a=/relative|absolute/.test(o.containerElement.css(\"position\")),s&&a&&(i-=Math.abs(o.parentData.left)),i+o.size.width>=o.parentData.width&&(o.size.width=o.parentData.width-i,u&&(o.size.height=o.size.width/o.aspectRatio)),n+o.size.height>=o.parentData.height&&(o.size.height=o.parentData.height-n,u&&(o.size.width=o.size.height*o.aspectRatio))\n},stop:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,n=e.containerOffset,s=e.containerPosition,a=e.containerElement,o=t(e.helper),r=o.offset(),l=o.outerWidth()-e.sizeDiff.width,h=o.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(a.css(\"position\"))&&t(this).css({left:r.left-s.left-n.left,width:l,height:h}),e._helper&&!i.animate&&/static/.test(a.css(\"position\"))&&t(this).css({left:r.left-s.left-n.left,width:l,height:h})}}),t.ui.plugin.add(\"resizable\",\"alsoResize\",{start:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,n=function(e){t(e).each(function(){var e=t(this);e.data(\"ui-resizable-alsoresize\",{width:parseInt(e.width(),10),height:parseInt(e.height(),10),left:parseInt(e.css(\"left\"),10),top:parseInt(e.css(\"top\"),10)})})};\"object\"!=typeof i.alsoResize||i.alsoResize.parentNode?n(i.alsoResize):i.alsoResize.length?(i.alsoResize=i.alsoResize[0],n(i.alsoResize)):t.each(i.alsoResize,function(t){n(t)})},resize:function(e,i){var n=t(this).data(\"ui-resizable\"),s=n.options,a=n.originalSize,o=n.originalPosition,r={height:n.size.height-a.height||0,width:n.size.width-a.width||0,top:n.position.top-o.top||0,left:n.position.left-o.left||0},l=function(e,n){t(e).each(function(){var e=t(this),s=t(this).data(\"ui-resizable-alsoresize\"),a={},o=n&&n.length?n:e.parents(i.originalElement[0]).length?[\"width\",\"height\"]:[\"width\",\"height\",\"top\",\"left\"];t.each(o,function(t,e){var i=(s[e]||0)+(r[e]||0);i&&i>=0&&(a[e]=i||null)}),e.css(a)})};\"object\"!=typeof s.alsoResize||s.alsoResize.nodeType?l(s.alsoResize):t.each(s.alsoResize,function(t,e){l(t,e)})},stop:function(){t(this).removeData(\"resizable-alsoresize\")}}),t.ui.plugin.add(\"resizable\",\"ghost\",{start:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,n=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:\"block\",position:\"relative\",height:n.height,width:n.width,margin:0,left:0,top:0}).addClass(\"ui-resizable-ghost\").addClass(\"string\"==typeof i.ghost?i.ghost:\"\"),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).data(\"ui-resizable\");e.ghost&&e.ghost.css({position:\"relative\",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).data(\"ui-resizable\");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add(\"resizable\",\"grid\",{resize:function(){var e=t(this).data(\"ui-resizable\"),i=e.options,n=e.size,s=e.originalSize,a=e.originalPosition,o=e.axis,r=\"number\"==typeof i.grid?[i.grid,i.grid]:i.grid,l=r[0]||1,h=r[1]||1,u=Math.round((n.width-s.width)/l)*l,c=Math.round((n.height-s.height)/h)*h,d=s.width+u,p=s.height+c,f=i.maxWidth&&d>i.maxWidth,m=i.maxHeight&&p>i.maxHeight,g=i.minWidth&&i.minWidth>d,v=i.minHeight&&i.minHeight>p;i.grid=r,g&&(d+=l),v&&(p+=h),f&&(d-=l),m&&(p-=h),/^(se|s|e)$/.test(o)?(e.size.width=d,e.size.height=p):/^(ne)$/.test(o)?(e.size.width=d,e.size.height=p,e.position.top=a.top-c):/^(sw)$/.test(o)?(e.size.width=d,e.size.height=p,e.position.left=a.left-u):(p-h>0?(e.size.height=p,e.position.top=a.top-c):(e.size.height=h,e.position.top=a.top+s.height-h),d-l>0?(e.size.width=d,e.position.left=a.left-u):(e.size.width=l,e.position.left=a.left+s.width-l))}})}(jQuery),function(t){t.widget(\"ui.selectable\",t.ui.mouse,{version:\"1.10.4\",options:{appendTo:\"body\",autoRefresh:!0,distance:0,filter:\"*\",tolerance:\"touch\",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e,i=this;this.element.addClass(\"ui-selectable\"),this.dragged=!1,this.refresh=function(){e=t(i.options.filter,i.element[0]),e.addClass(\"ui-selectee\"),e.each(function(){var e=t(this),i=e.offset();t.data(this,\"selectable-item\",{element:this,$element:e,left:i.left,top:i.top,right:i.left+e.outerWidth(),bottom:i.top+e.outerHeight(),startselected:!1,selected:e.hasClass(\"ui-selected\"),selecting:e.hasClass(\"ui-selecting\"),unselecting:e.hasClass(\"ui-unselecting\")})})},this.refresh(),this.selectees=e.addClass(\"ui-selectee\"),this._mouseInit(),this.helper=t(\"<div class='ui-selectable-helper'></div>\")},_destroy:function(){this.selectees.removeClass(\"ui-selectee\").removeData(\"selectable-item\"),this.element.removeClass(\"ui-selectable ui-selectable-disabled\"),this._mouseDestroy()},_mouseStart:function(e){var i=this,n=this.options;this.opos=[e.pageX,e.pageY],this.options.disabled||(this.selectees=t(n.filter,this.element[0]),this._trigger(\"start\",e),t(n.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(\".ui-selected\").each(function(){var n=t.data(this,\"selectable-item\");n.startselected=!0,e.metaKey||e.ctrlKey||(n.$element.removeClass(\"ui-selected\"),n.selected=!1,n.$element.addClass(\"ui-unselecting\"),n.unselecting=!0,i._trigger(\"unselecting\",e,{unselecting:n.element}))}),t(e.target).parents().addBack().each(function(){var n,s=t.data(this,\"selectable-item\");return s?(n=!e.metaKey&&!e.ctrlKey||!s.$element.hasClass(\"ui-selected\"),s.$element.removeClass(n?\"ui-unselecting\":\"ui-selected\").addClass(n?\"ui-selecting\":\"ui-unselecting\"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger(\"selecting\",e,{selecting:s.element}):i._trigger(\"unselecting\",e,{unselecting:s.element}),!1):void 0}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,a=this.opos[0],o=this.opos[1],r=e.pageX,l=e.pageY;return a>r&&(i=r,r=a,a=i),o>l&&(i=l,l=o,o=i),this.helper.css({left:a,top:o,width:r-a,height:l-o}),this.selectees.each(function(){var i=t.data(this,\"selectable-item\"),h=!1;i&&i.element!==n.element[0]&&(\"touch\"===s.tolerance?h=!(i.left>r||a>i.right||i.top>l||o>i.bottom):\"fit\"===s.tolerance&&(h=i.left>a&&r>i.right&&i.top>o&&l>i.bottom),h?(i.selected&&(i.$element.removeClass(\"ui-selected\"),i.selected=!1),i.unselecting&&(i.$element.removeClass(\"ui-unselecting\"),i.unselecting=!1),i.selecting||(i.$element.addClass(\"ui-selecting\"),i.selecting=!0,n._trigger(\"selecting\",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(i.$element.removeClass(\"ui-selecting\"),i.selecting=!1,i.$element.addClass(\"ui-selected\"),i.selected=!0):(i.$element.removeClass(\"ui-selecting\"),i.selecting=!1,i.startselected&&(i.$element.addClass(\"ui-unselecting\"),i.unselecting=!0),n._trigger(\"unselecting\",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(i.$element.removeClass(\"ui-selected\"),i.selected=!1,i.$element.addClass(\"ui-unselecting\"),i.unselecting=!0,n._trigger(\"unselecting\",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(\".ui-unselecting\",this.element[0]).each(function(){var n=t.data(this,\"selectable-item\");n.$element.removeClass(\"ui-unselecting\"),n.unselecting=!1,n.startselected=!1,i._trigger(\"unselected\",e,{unselected:n.element})}),t(\".ui-selecting\",this.element[0]).each(function(){var n=t.data(this,\"selectable-item\");n.$element.removeClass(\"ui-selecting\").addClass(\"ui-selected\"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger(\"selected\",e,{selected:n.element})}),this._trigger(\"stop\",e),this.helper.remove(),!1}})}(jQuery),function(t){var e=5;t.widget(\"ui.slider\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"slide\",options:{animate:!1,distance:0,max:100,min:0,orientation:\"horizontal\",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass(\"ui-slider ui-slider-\"+this.orientation+\" ui-widget ui-widget-content ui-corner-all\"),this._refresh(),this._setOption(\"disabled\",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,n=this.options,s=this.element.find(\".ui-slider-handle\").addClass(\"ui-state-default ui-corner-all\"),a=\"<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>\",o=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),e=s.length;i>e;e++)o.push(a);this.handles=s.add(t(o.join(\"\")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data(\"ui-slider-handle-index\",e)})},_createRange:function(){var e=this.options,i=\"\";e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?this.range.removeClass(\"ui-slider-range-min ui-slider-range-max\").css({left:\"\",bottom:\"\"}):(this.range=t(\"<div></div>\").appendTo(this.element),i=\"ui-slider-range ui-widget-header ui-corner-all\"),this.range.addClass(i+(\"min\"===e.range||\"max\"===e.range?\" ui-slider-range-\"+e.range:\"\"))):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){var t=this.handles.add(this.range).filter(\"a\");this._off(t),this._on(t,this._handleEvents),this._hoverable(t),this._focusable(t)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this.element.removeClass(\"ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all\"),this._mouseDestroy()},_mouseCapture:function(e){var i,n,s,a,o,r,l,h,u=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(n-u.values(e));(s>i||s===i&&(e===u._lastChangedValue||u.values(e)===c.min))&&(s=i,a=t(this),o=e)}),r=this._start(e,o),r===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,a.addClass(\"ui-state-active\").focus(),l=a.offset(),h=!t(e.target).parents().addBack().is(\".ui-slider-handle\"),this._clickOffset=h?{left:0,top:0}:{left:e.pageX-l.left-a.width()/2,top:e.pageY-l.top-a.height()/2-(parseInt(a.css(\"borderTopWidth\"),10)||0)-(parseInt(a.css(\"borderBottomWidth\"),10)||0)+(parseInt(a.css(\"marginTop\"),10)||0)},this.handles.hasClass(\"ui-state-hover\")||this._slide(e,o,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this.handles.removeClass(\"ui-state-active\"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=\"vertical\"===this.options.orientation?\"vertical\":\"horizontal\"},_normValueFromMouse:function(t){var e,i,n,s,a;return\"horizontal\"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),n=i/e,n>1&&(n=1),0>n&&(n=0),\"vertical\"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),a=this._valueMin()+n*s,this._trimAlignValue(a)},_start:function(t,e){var i={handle:this.handles[e],value:this.value()};return this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger(\"start\",t,i)},_slide:function(t,e,i){var n,s,a;this.options.values&&this.options.values.length?(n=this.values(e?0:1),2===this.options.values.length&&this.options.range===!0&&(0===e&&i>n||1===e&&n>i)&&(i=n),i!==this.values(e)&&(s=this.values(),s[e]=i,a=this._trigger(\"slide\",t,{handle:this.handles[e],value:i,values:s}),n=this.values(e?0:1),a!==!1&&this.values(e,i))):i!==this.value()&&(a=this._trigger(\"slide\",t,{handle:this.handles[e],value:i}),a!==!1&&this.value(i))},_stop:function(t,e){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger(\"stop\",t,i)},_change:function(t,e){if(!this._keySliding&&!this._mouseSliding){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._lastChangedValue=e,this._trigger(\"change\",t,i)}},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(e,i){var n,s,a;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,e);if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(e):this.value();for(n=this.options.values,s=arguments[0],a=0;n.length>a;a+=1)n[a]=this._trimAlignValue(s[a]),this._change(null,a);this._refreshValue()},_setOption:function(e,i){var n,s=0;switch(\"range\"===e&&this.options.range===!0&&(\"min\"===i?(this.options.value=this._values(0),this.options.values=null):\"max\"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(s=this.options.values.length),t.Widget.prototype._setOption.apply(this,arguments),e){case\"orientation\":this._detectOrientation(),this.element.removeClass(\"ui-slider-horizontal ui-slider-vertical\").addClass(\"ui-slider-\"+this.orientation),this._refreshValue();break;case\"value\":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case\"values\":for(this._animateOff=!0,this._refreshValue(),n=0;s>n;n+=1)this._change(null,n);this._animateOff=!1;break;case\"min\":case\"max\":this._animateOff=!0,this._refreshValue(),this._animateOff=!1;break;case\"range\":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,n;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this.options.values&&this.options.values.length){for(i=this.options.values.slice(),n=0;i.length>n;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,n=t-i;return 2*Math.abs(i)>=e&&(n+=i>0?e:-e),parseFloat(n.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var e,i,n,s,a,o=this.options.range,r=this.options,l=this,h=this._animateOff?!1:r.animate,u={};this.options.values&&this.options.values.length?this.handles.each(function(n){i=100*((l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())),u[\"horizontal\"===l.orientation?\"left\":\"bottom\"]=i+\"%\",t(this).stop(1,1)[h?\"animate\":\"css\"](u,r.animate),l.options.range===!0&&(\"horizontal\"===l.orientation?(0===n&&l.range.stop(1,1)[h?\"animate\":\"css\"]({left:i+\"%\"},r.animate),1===n&&l.range[h?\"animate\":\"css\"]({width:i-e+\"%\"},{queue:!1,duration:r.animate})):(0===n&&l.range.stop(1,1)[h?\"animate\":\"css\"]({bottom:i+\"%\"},r.animate),1===n&&l.range[h?\"animate\":\"css\"]({height:i-e+\"%\"},{queue:!1,duration:r.animate}))),e=i}):(n=this.value(),s=this._valueMin(),a=this._valueMax(),i=a!==s?100*((n-s)/(a-s)):0,u[\"horizontal\"===this.orientation?\"left\":\"bottom\"]=i+\"%\",this.handle.stop(1,1)[h?\"animate\":\"css\"](u,r.animate),\"min\"===o&&\"horizontal\"===this.orientation&&this.range.stop(1,1)[h?\"animate\":\"css\"]({width:i+\"%\"},r.animate),\"max\"===o&&\"horizontal\"===this.orientation&&this.range[h?\"animate\":\"css\"]({width:100-i+\"%\"},{queue:!1,duration:r.animate}),\"min\"===o&&\"vertical\"===this.orientation&&this.range.stop(1,1)[h?\"animate\":\"css\"]({height:i+\"%\"},r.animate),\"max\"===o&&\"vertical\"===this.orientation&&this.range[h?\"animate\":\"css\"]({height:100-i+\"%\"},{queue:!1,duration:r.animate}))},_handleEvents:{keydown:function(i){var n,s,a,o,r=t(i.target).data(\"ui-slider-handle-index\");switch(i.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(i.preventDefault(),!this._keySliding&&(this._keySliding=!0,t(i.target).addClass(\"ui-state-active\"),n=this._start(i,r),n===!1))return}switch(o=this.options.step,s=a=this.options.values&&this.options.values.length?this.values(r):this.value(),i.keyCode){case t.ui.keyCode.HOME:a=this._valueMin();break;case t.ui.keyCode.END:a=this._valueMax();break;case t.ui.keyCode.PAGE_UP:a=this._trimAlignValue(s+(this._valueMax()-this._valueMin())/e);break;case t.ui.keyCode.PAGE_DOWN:a=this._trimAlignValue(s-(this._valueMax()-this._valueMin())/e);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(s===this._valueMax())return;a=this._trimAlignValue(s+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(s===this._valueMin())return;a=this._trimAlignValue(s-o)}this._slide(i,r,a)},click:function(t){t.preventDefault()},keyup:function(e){var i=t(e.target).data(\"ui-slider-handle-index\");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),t(e.target).removeClass(\"ui-state-active\"))}}})}(jQuery),function(t){function e(t,e,i){return t>e&&e+i>t}function i(t){return/left|right/.test(t.css(\"float\"))||/inline|table-cell/.test(t.css(\"display\"))}t.widget(\"ui.sortable\",t.ui.mouse,{version:\"1.10.4\",widgetEventPrefix:\"sort\",ready:!1,options:{appendTo:\"parent\",axis:!1,connectWith:!1,containment:!1,cursor:\"auto\",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:\"original\",items:\"> *\",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:\"default\",tolerance:\"intersect\",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_create:function(){var t=this.options;this.containerCache={},this.element.addClass(\"ui-sortable\"),this.refresh(),this.floating=this.items.length?\"x\"===t.axis||i(this.items[0].item):!1,this.offset=this.element.offset(),this._mouseInit(),this.ready=!0},_destroy:function(){this.element.removeClass(\"ui-sortable ui-sortable-disabled\"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+\"-item\");return this},_setOption:function(e,i){\"disabled\"===e?(this.options[e]=i,this.widget().toggleClass(\"ui-sortable-disabled\",!!i)):t.Widget.prototype._setOption.apply(this,arguments)},_mouseCapture:function(e,i){var n=null,s=!1,a=this;return this.reverting?!1:this.options.disabled||\"static\"===this.options.type?!1:(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,a.widgetName+\"-item\")===a?(n=t(this),!1):void 0}),t.data(e.target,a.widgetName+\"-item\")===a&&(n=t(e.target)),n&&(!this.options.handle||i||(t(this.options.handle,n).find(\"*\").addBack().each(function(){this===e.target&&(s=!0)}),s))?(this.currentItem=n,this._removeCurrentsFromItems(),!0):!1)},_mouseStart:function(e,i,n){var s,a,o=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css(\"position\",\"absolute\"),this.cssPosition=this.helper.css(\"position\"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,o.cursorAt&&this._adjustOffsetFromHelper(o.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),o.containment&&this._setContainment(),o.cursor&&\"auto\"!==o.cursor&&(a=this.document.find(\"body\"),this.storedCursor=a.css(\"cursor\"),a.css(\"cursor\",o.cursor),this.storedStylesheet=t(\"<style>*{ cursor: \"+o.cursor+\" !important; }</style>\").appendTo(a)),o.opacity&&(this.helper.css(\"opacity\")&&(this._storedOpacity=this.helper.css(\"opacity\")),this.helper.css(\"opacity\",o.opacity)),o.zIndex&&(this.helper.css(\"zIndex\")&&(this._storedZIndex=this.helper.css(\"zIndex\")),this.helper.css(\"zIndex\",o.zIndex)),this.scrollParent[0]!==document&&\"HTML\"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger(\"start\",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger(\"activate\",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass(\"ui-sortable-helper\"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,n,s,a,o=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo(\"absolute\"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==document&&\"HTML\"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<o.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+o.scrollSpeed:e.pageY-this.overflowOffset.top<o.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-o.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<o.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+o.scrollSpeed:e.pageX-this.overflowOffset.left<o.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-o.scrollSpeed)):(e.pageY-t(document).scrollTop()<o.scrollSensitivity?r=t(document).scrollTop(t(document).scrollTop()-o.scrollSpeed):t(window).height()-(e.pageY-t(document).scrollTop())<o.scrollSensitivity&&(r=t(document).scrollTop(t(document).scrollTop()+o.scrollSpeed)),e.pageX-t(document).scrollLeft()<o.scrollSensitivity?r=t(document).scrollLeft(t(document).scrollLeft()-o.scrollSpeed):t(window).width()-(e.pageX-t(document).scrollLeft())<o.scrollSensitivity&&(r=t(document).scrollLeft(t(document).scrollLeft()+o.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!o.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo(\"absolute\"),this.options.axis&&\"y\"===this.options.axis||(this.helper[0].style.left=this.position.left+\"px\"),this.options.axis&&\"x\"===this.options.axis||(this.helper[0].style.top=this.position.top+\"px\"),i=this.items.length-1;i>=0;i--)if(n=this.items[i],s=n.item[0],a=this._intersectsWithPointer(n),a&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===a?\"next\":\"prev\"]()[0]!==s&&!t.contains(this.placeholder[0],s)&&(\"semi-dynamic\"===this.options.type?!t.contains(this.element[0],s):!0)){if(this.direction=1===a?\"down\":\"up\",\"pointer\"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(e,n),this._trigger(\"change\",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger(\"sort\",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var n=this,s=this.placeholder.offset(),a=this.options.axis,o={};a&&\"x\"!==a||(o.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollLeft)),a&&\"y\"!==a||(o.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===document.body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(o,parseInt(this.options.revert,10)||500,function(){n._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),\"original\"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger(\"deactivate\",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger(\"out\",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),\"original\"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||\"id\")||\"\").match(e.expression||/(.+)[\\-=_](.+)/);i&&n.push((e.key||i[1]+\"[]\")+\"=\"+(e.key&&e.expression?i[1]:i[2]))}),!n.length&&e.key&&n.push(e.key+\"=\"),n.join(\"&\")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},i.each(function(){n.push(t(e.item||this).attr(e.attribute||\"id\")||\"\")}),n},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,a=t.left,o=a+t.width,r=t.top,l=r+t.height,h=this.offset.click.top,u=this.offset.click.left,c=\"x\"===this.options.axis||n+h>r&&l>n+h,d=\"y\"===this.options.axis||e+u>a&&o>e+u,p=c&&d;return\"pointer\"===this.options.tolerance||this.options.forcePointerForContainers||\"pointer\"!==this.options.tolerance&&this.helperProportions[this.floating?\"width\":\"height\"]>t[this.floating?\"width\":\"height\"]?p:e+this.helperProportions.width/2>a&&o>i-this.helperProportions.width/2&&n+this.helperProportions.height/2>r&&l>s-this.helperProportions.height/2},_intersectsWithPointer:function(t){var i=\"x\"===this.options.axis||e(this.positionAbs.top+this.offset.click.top,t.top,t.height),n=\"y\"===this.options.axis||e(this.positionAbs.left+this.offset.click.left,t.left,t.width),s=i&&n,a=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return s?this.floating?o&&\"right\"===o||\"down\"===a?2:1:a&&(\"down\"===a?2:1):!1},_intersectsWithSides:function(t){var i=e(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),n=e(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),s=this._getDragVerticalDirection(),a=this._getDragHorizontalDirection();return this.floating&&a?\"right\"===a&&n||\"left\"===a&&!n:s&&(\"down\"===s&&i||\"up\"===s&&!i)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?\"down\":\"up\")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?\"right\":\"left\")},refresh:function(t){return this._refreshItems(t),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var n,s,a,o,r=[],l=[],h=this._connectWith();if(h&&e)for(n=h.length-1;n>=0;n--)for(a=t(h[n]),s=a.length-1;s>=0;s--)o=t.data(a[s],this.widgetFullName),o&&o!==this&&!o.options.disabled&&l.push([t.isFunction(o.options.items)?o.options.items.call(o.element):t(o.options.items,o.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),o]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(\":data(\"+this.widgetName+\"-item)\");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,n,s,a,o,r,l,h,u=this.items,c=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(s=t(d[i]),n=s.length-1;n>=0;n--)a=t.data(s[n],this.widgetFullName),a&&a!==this&&!a.options.disabled&&(c.push([t.isFunction(a.options.items)?a.options.items.call(a.element[0],e,{item:this.currentItem}):t(a.options.items,a.element),a]),this.containers.push(a));for(i=c.length-1;i>=0;i--)for(o=c[i][1],r=c[i][0],n=0,h=r.length;h>n;n++)l=t(r[n]),l.data(this.widgetName+\"-item\",o),u.push({item:l,instance:o,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,n,s,a;for(i=this.items.length-1;i>=0;i--)n=this.items[i],n.instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?t(this.options.toleranceElement,n.item):n.item,e||(n.width=s.outerWidth(),n.height=s.outerHeight()),a=s.offset(),n.left=a.left,n.top=a.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)a=this.containers[i].element.offset(),this.containers[i].containerCache.left=a.left,this.containers[i].containerCache.top=a.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,n=e.options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=e.currentItem[0].nodeName.toLowerCase(),s=t(\"<\"+n+\">\",e.document[0]).addClass(i||e.currentItem[0].className+\" ui-sortable-placeholder\").removeClass(\"ui-sortable-helper\");return\"tr\"===n?e.currentItem.children().each(function(){t(\"<td>&#160;</td>\",e.document[0]).attr(\"colspan\",t(this).attr(\"colspan\")||1).appendTo(s)}):\"img\"===n&&s.attr(\"src\",e.currentItem.attr(\"src\")),i||s.css(\"visibility\",\"hidden\"),s},update:function(t,s){(!i||n.forcePlaceholderSize)&&(s.height()||s.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css(\"paddingTop\")||0,10)-parseInt(e.currentItem.css(\"paddingBottom\")||0,10)),s.width()||s.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css(\"paddingLeft\")||0,10)-parseInt(e.currentItem.css(\"paddingRight\")||0,10)))}}),e.placeholder=t(n.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),n.placeholder.update(e,e.placeholder)},_contactContainers:function(n){var s,a,o,r,l,h,u,c,d,p,f=null,m=null;for(s=this.containers.length-1;s>=0;s--)if(!t.contains(this.currentItem[0],this.containers[s].element[0]))if(this._intersectsWith(this.containers[s].containerCache)){if(f&&t.contains(this.containers[s].element[0],f.element[0]))continue;f=this.containers[s],m=s}else this.containers[s].containerCache.over&&(this.containers[s]._trigger(\"out\",n,this._uiHash(this)),this.containers[s].containerCache.over=0);if(f)if(1===this.containers.length)this.containers[m].containerCache.over||(this.containers[m]._trigger(\"over\",n,this._uiHash(this)),this.containers[m].containerCache.over=1);else{for(o=1e4,r=null,p=f.floating||i(this.currentItem),l=p?\"left\":\"top\",h=p?\"width\":\"height\",u=this.positionAbs[l]+this.offset.click[l],a=this.items.length-1;a>=0;a--)t.contains(this.containers[m].element[0],this.items[a].item[0])&&this.items[a].item[0]!==this.currentItem[0]&&(!p||e(this.positionAbs.top+this.offset.click.top,this.items[a].top,this.items[a].height))&&(c=this.items[a].item.offset()[l],d=!1,Math.abs(c-u)>Math.abs(c+this.items[a][h]-u)&&(d=!0,c+=this.items[a][h]),o>Math.abs(c-u)&&(o=Math.abs(c-u),r=this.items[a],this.direction=d?\"up\":\"down\"));if(!r&&!this.options.dropOnEmpty)return;\nif(this.currentContainer===this.containers[m])return;r?this._rearrange(n,r,null,!0):this._rearrange(n,null,this.containers[m].element,!0),this._trigger(\"change\",n,this._uiHash()),this.containers[m]._trigger(\"change\",n,this._uiHash(this)),this.currentContainer=this.containers[m],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[m]._trigger(\"over\",n,this._uiHash(this)),this.containers[m].containerCache.over=1}},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):\"clone\"===i.helper?this.currentItem.clone():this.currentItem;return n.parents(\"body\").length||t(\"parent\"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css(\"position\"),top:this.currentItem.css(\"top\"),left:this.currentItem.css(\"left\")}),(!n[0].style.width||i.forceHelperSize)&&n.width(this.currentItem.width()),(!n[0].style.height||i.forceHelperSize)&&n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(e){\"string\"==typeof e&&(e=e.split(\" \")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),\"left\"in e&&(this.offset.click.left=e.left+this.margins.left),\"right\"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),\"top\"in e&&(this.offset.click.top=e.top+this.margins.top),\"bottom\"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return\"absolute\"===this.cssPosition&&this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===document.body||this.offsetParent[0].tagName&&\"html\"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css(\"borderTopWidth\"),10)||0),left:e.left+(parseInt(this.offsetParent.css(\"borderLeftWidth\"),10)||0)}},_getRelativeOffset:function(){if(\"relative\"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css(\"top\"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css(\"left\"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css(\"marginLeft\"),10)||0,top:parseInt(this.currentItem.css(\"marginTop\"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options;\"parent\"===s.containment&&(s.containment=this.helper[0].parentNode),(\"document\"===s.containment||\"window\"===s.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,t(\"document\"===s.containment?document:window).width()-this.helperProportions.width-this.margins.left,(t(\"document\"===s.containment?document:window).height()||document.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(e=t(s.containment)[0],i=t(s.containment).offset(),n=\"hidden\"!==t(e).css(\"overflow\"),this.containment=[i.left+(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)+(parseInt(t(e).css(\"paddingLeft\"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css(\"borderTopWidth\"),10)||0)+(parseInt(t(e).css(\"paddingTop\"),10)||0)-this.margins.top,i.left+(n?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css(\"borderLeftWidth\"),10)||0)-(parseInt(t(e).css(\"paddingRight\"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css(\"borderTopWidth\"),10)||0)-(parseInt(t(e).css(\"paddingBottom\"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var n=\"absolute\"===e?1:-1,s=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,a=/(html|body)/i.test(s[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():a?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():a?0:s.scrollLeft())*n}},_generatePosition:function(e){var i,n,s=this.options,a=e.pageX,o=e.pageY,r=\"absolute\"!==this.cssPosition||this.scrollParent[0]!==document&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(r[0].tagName);return\"relative\"!==this.cssPosition||this.scrollParent[0]!==document&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(a=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(o=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(a=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(o=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((o-this.originalPageY)/s.grid[1])*s.grid[1],o=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((a-this.originalPageX)/s.grid[0])*s.grid[0],a=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:o-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollTop():l?0:r.scrollTop()),left:a-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+(\"fixed\"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:r.scrollLeft())}},_rearrange:function(t,e,i,n){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],\"down\"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay(function(){s===this.counter&&this.refreshPositions(!n)})},_clear:function(t,e){function i(t,e,i){return function(n){i._trigger(t,n,e._uiHash(e))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)(\"auto\"===this._storedCSS[n]||\"static\"===this._storedCSS[n])&&(this._storedCSS[n]=\"\");this.currentItem.css(this._storedCSS).removeClass(\"ui-sortable-helper\")}else this.currentItem.show();for(this.fromOutside&&!e&&s.push(function(t){this._trigger(\"receive\",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(\".ui-sortable-helper\")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push(function(t){this._trigger(\"update\",t,this._uiHash())}),this!==this.currentContainer&&(e||(s.push(function(t){this._trigger(\"remove\",t,this._uiHash())}),s.push(function(t){return function(e){t._trigger(\"receive\",e,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(t){return function(e){t._trigger(\"update\",e,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)e||s.push(i(\"deactivate\",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i(\"out\",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find(\"body\").css(\"cursor\",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css(\"opacity\",this._storedOpacity),this._storedZIndex&&this.helper.css(\"zIndex\",\"auto\"===this._storedZIndex?\"\":this._storedZIndex),this.dragging=!1,this.cancelHelperRemoval){if(!e){for(this._trigger(\"beforeStop\",t,this._uiHash()),n=0;s.length>n;n++)s[n].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!1}if(e||this._trigger(\"beforeStop\",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null,!e){for(n=0;s.length>n;n++)s[n].call(this,t);this._trigger(\"stop\",t,this._uiHash())}return this.fromOutside=!1,!0},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}})}(jQuery),function(t){function e(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger(\"change\")}}t.widget(\"ui.spinner\",{version:\"1.10.4\",defaultElement:\"<input>\",widgetEventPrefix:\"spin\",options:{culture:null,icons:{down:\"ui-icon-triangle-1-s\",up:\"ui-icon-triangle-1-n\"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption(\"max\",this.options.max),this._setOption(\"min\",this.options.min),this._setOption(\"step\",this.options.step),\"\"!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr(\"autocomplete\")}})},_getCreateOptions:function(){var e={},i=this.element;return t.each([\"min\",\"max\",\"step\"],function(t,n){var s=i.attr(n);void 0!==s&&s.length&&(e[n]=s)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:\"_stop\",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger(\"change\",t)))},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},\"mousedown .ui-spinner-button\":function(e){function i(){var t=this.element[0]===this.document[0].activeElement;t||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,e)},\"mouseup .ui-spinner-button\":\"_stop\",\"mouseenter .ui-spinner-button\":function(e){return t(e.currentTarget).hasClass(\"ui-state-active\")?this._start(e)===!1?!1:void this._repeat(null,t(e.currentTarget).hasClass(\"ui-spinner-up\")?1:-1,e):void 0},\"mouseleave .ui-spinner-button\":\"_stop\"},_draw:function(){var t=this.uiSpinner=this.element.addClass(\"ui-spinner-input\").attr(\"autocomplete\",\"off\").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr(\"role\",\"spinbutton\"),this.buttons=t.find(\".ui-spinner-button\").attr(\"tabIndex\",-1).button().removeClass(\"ui-corner-all\"),this.buttons.height()>Math.ceil(.5*t.height())&&t.height()>0&&t.height(t.height()),this.options.disabled&&this.disable()},_keydown:function(e){var i=this.options,n=t.ui.keyCode;switch(e.keyCode){case n.UP:return this._repeat(null,1,e),!0;case n.DOWN:return this._repeat(null,-1,e),!0;case n.PAGE_UP:return this._repeat(null,i.page,e),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_uiSpinnerHtml:function(){return\"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>\"},_buttonHtml:function(){return\"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon \"+this.options.icons.up+\"'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon \"+this.options.icons.down+\"'>&#9660;</span></a>\"},_start:function(t){return this.spinning||this._trigger(\"start\",t)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger(\"spin\",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=\"\"+t,i=e.indexOf(\".\");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,n=this.options;return e=null!==n.min?n.min:0,i=t-e,i=Math.round(i/n.step)*n.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==n.max&&t>n.max?n.max:null!==n.min&&n.min>t?n.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger(\"stop\",t))},_setOption:function(t,e){if(\"culture\"===t||\"numberFormat\"===t){var i=this._parse(this.element.val());return this.options[t]=e,void this.element.val(this._format(i))}(\"max\"===t||\"min\"===t||\"step\"===t)&&\"string\"==typeof e&&(e=this._parse(e)),\"icons\"===t&&(this.buttons.first().find(\".ui-icon\").removeClass(this.options.icons.up).addClass(e.up),this.buttons.last().find(\".ui-icon\").removeClass(this.options.icons.down).addClass(e.down)),this._super(t,e),\"disabled\"===t&&(e?(this.element.prop(\"disabled\",!0),this.buttons.button(\"disable\")):(this.element.prop(\"disabled\",!1),this.buttons.button(\"enable\")))},_setOptions:e(function(t){this._super(t),this._value(this.element.val())}),_parse:function(t){return\"string\"==typeof t&&\"\"!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),\"\"===t||isNaN(t)?null:t},_format:function(t){return\"\"===t?\"\":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({\"aria-valuemin\":this.options.min,\"aria-valuemax\":this.options.max,\"aria-valuenow\":this._parse(this.element.val())})},_value:function(t,e){var i;\"\"!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.removeClass(\"ui-spinner-input\").prop(\"disabled\",!1).removeAttr(\"autocomplete\").removeAttr(\"role\").removeAttr(\"aria-valuemin\").removeAttr(\"aria-valuemax\").removeAttr(\"aria-valuenow\"),this.uiSpinner.replaceWith(this.element)},stepUp:e(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:e(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:e(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:e(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?void e(this._value).call(this,t):this._parse(this.element.val())},widget:function(){return this.uiSpinner}})}(jQuery),function(t,e){function i(){return++s}function n(t){return t=t.cloneNode(!1),t.hash.length>1&&decodeURIComponent(t.href.replace(a,\"\"))===decodeURIComponent(location.href.replace(a,\"\"))}var s=0,a=/#.*$/;t.widget(\"ui.tabs\",{version:\"1.10.4\",delay:300,options:{active:null,collapsible:!1,event:\"click\",heightStyle:\"content\",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_create:function(){var e=this,i=this.options;this.running=!1,this.element.addClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all\").toggleClass(\"ui-tabs-collapsible\",i.collapsible).delegate(\".ui-tabs-nav > li\",\"mousedown\"+this.eventNamespace,function(e){t(this).is(\".ui-state-disabled\")&&e.preventDefault()}).delegate(\".ui-tabs-anchor\",\"focus\"+this.eventNamespace,function(){t(this).closest(\"li\").is(\".ui-state-disabled\")&&this.blur()}),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(\".ui-state-disabled\"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var i=this.options.active,n=this.options.collapsible,s=location.hash.substring(1);return null===i&&(s&&this.tabs.each(function(n,a){return t(a).attr(\"aria-controls\")===s?(i=n,!1):e}),null===i&&(i=this.tabs.index(this.tabs.filter(\".ui-tabs-active\"))),(null===i||-1===i)&&(i=this.tabs.length?0:!1)),i!==!1&&(i=this.tabs.index(this.tabs.eq(i)),-1===i&&(i=n?!1:0)),!n&&i===!1&&this.anchors.length&&(i=0),i},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(i){var n=t(this.document[0].activeElement).closest(\"li\"),s=this.tabs.index(n),a=!0;if(!this._handlePageNav(i)){switch(i.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:s++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:a=!1,s--;break;case t.ui.keyCode.END:s=this.anchors.length-1;break;case t.ui.keyCode.HOME:s=0;break;case t.ui.keyCode.SPACE:return i.preventDefault(),clearTimeout(this.activating),this._activate(s),e;case t.ui.keyCode.ENTER:return i.preventDefault(),clearTimeout(this.activating),this._activate(s===this.options.active?!1:s),e;default:return}i.preventDefault(),clearTimeout(this.activating),s=this._focusNextTab(s,a),i.ctrlKey||(n.attr(\"aria-selected\",\"false\"),this.tabs.eq(s).attr(\"aria-selected\",\"true\"),this.activating=this._delay(function(){this.option(\"active\",s)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.focus())},_handlePageNav:function(i){return i.altKey&&i.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):i.altKey&&i.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):e},_findNextTab:function(e,i){function n(){return e>s&&(e=0),0>e&&(e=s),e}for(var s=this.tabs.length-1;-1!==t.inArray(n(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).focus(),t},_setOption:function(t,i){return\"active\"===t?(this._activate(i),e):\"disabled\"===t?(this._setupDisabled(i),e):(this._super(t,i),\"collapsible\"===t&&(this.element.toggleClass(\"ui-tabs-collapsible\",i),i||this.options.active!==!1||this._activate(0)),\"event\"===t&&this._setupEvents(i),\"heightStyle\"===t&&this._setupHeightStyle(i),e)},_tabId:function(t){return t.attr(\"aria-controls\")||\"ui-tabs-\"+i()},_sanitizeSelector:function(t){return t?t.replace(/[!\"$%&'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g,\"\\\\$&\"):\"\"},refresh:function(){var e=this.options,i=this.tablist.children(\":has(a[href])\");e.disabled=t.map(i.filter(\".ui-state-disabled\"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({\"aria-selected\":\"false\",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),this.active.length?(this.active.addClass(\"ui-tabs-active ui-state-active\").attr({\"aria-selected\":\"true\",tabIndex:0}),this._getPanelForTab(this.active).show().attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"})):this.tabs.eq(0).attr(\"tabIndex\",0)},_processTabs:function(){var e=this;this.tablist=this._getList().addClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").attr(\"role\",\"tablist\"),this.tabs=this.tablist.find(\"> li:has(a[href])\").addClass(\"ui-state-default ui-corner-top\").attr({role:\"tab\",tabIndex:-1}),this.anchors=this.tabs.map(function(){return t(\"a\",this)[0]}).addClass(\"ui-tabs-anchor\").attr({role:\"presentation\",tabIndex:-1}),this.panels=t(),this.anchors.each(function(i,s){var a,o,r,l=t(s).uniqueId().attr(\"id\"),h=t(s).closest(\"li\"),u=h.attr(\"aria-controls\");n(s)?(a=s.hash,o=e.element.find(e._sanitizeSelector(a))):(r=e._tabId(h),a=\"#\"+r,o=e.element.find(a),o.length||(o=e._createPanel(r),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr(\"aria-live\",\"polite\")),o.length&&(e.panels=e.panels.add(o)),u&&h.data(\"ui-tabs-aria-controls\",u),h.attr({\"aria-controls\":a.substring(1),\"aria-labelledby\":l}),o.attr(\"aria-labelledby\",l)}),this.panels.addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").attr(\"role\",\"tabpanel\")},_getList:function(){return this.tablist||this.element.find(\"ol,ul\").eq(0)},_createPanel:function(e){return t(\"<div>\").attr(\"id\",e).addClass(\"ui-tabs-panel ui-widget-content ui-corner-bottom\").data(\"ui-tabs-destroy\",!0)},_setupDisabled:function(e){t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1);for(var i,n=0;i=this.tabs[n];n++)e===!0||-1!==t.inArray(n,e)?t(i).addClass(\"ui-state-disabled\").attr(\"aria-disabled\",\"true\"):t(i).removeClass(\"ui-state-disabled\").removeAttr(\"aria-disabled\");this.options.disabled=e},_setupEvents:function(e){var i={click:function(t){t.preventDefault()}};e&&t.each(e.split(\" \"),function(t,e){i[e]=\"_eventHandler\"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(this.anchors,i),this._on(this.tabs,{keydown:\"_tabKeydown\"}),this._on(this.panels,{keydown:\"_panelKeydown\"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,n=this.element.parent();\"fill\"===e?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(\":visible\").each(function(){var e=t(this),n=e.css(\"position\");\"absolute\"!==n&&\"fixed\"!==n&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css(\"overflow\",\"auto\")):\"auto\"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height(\"\").height())}).height(i))},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget),a=s.closest(\"li\"),o=a[0]===n[0],r=o&&i.collapsible,l=r?t():this._getPanelForTab(a),h=n.length?this._getPanelForTab(n):t(),u={oldTab:n,oldPanel:h,newTab:r?t():a,newPanel:l};e.preventDefault(),a.hasClass(\"ui-state-disabled\")||a.hasClass(\"ui-tabs-loading\")||this.running||o&&!i.collapsible||this._trigger(\"beforeActivate\",e,u)===!1||(i.active=r?!1:this.tabs.index(a),this.active=o?t():a,this.xhr&&this.xhr.abort(),h.length||l.length||t.error(\"jQuery UI Tabs: Mismatching fragment identifier.\"),l.length&&this.load(this.tabs.index(a),e),this._toggle(e,u))},_toggle:function(e,i){function n(){a.running=!1,a._trigger(\"activate\",e,i)}function s(){i.newTab.closest(\"li\").addClass(\"ui-tabs-active ui-state-active\"),o.length&&a.options.show?a._show(o,a.options.show,n):(o.show(),n())}var a=this,o=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){i.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),s()}):(i.oldTab.closest(\"li\").removeClass(\"ui-tabs-active ui-state-active\"),r.hide(),s()),r.attr({\"aria-expanded\":\"false\",\"aria-hidden\":\"true\"}),i.oldTab.attr(\"aria-selected\",\"false\"),o.length&&r.length?i.oldTab.attr(\"tabIndex\",-1):o.length&&this.tabs.filter(function(){return 0===t(this).attr(\"tabIndex\")}).attr(\"tabIndex\",-1),o.attr({\"aria-expanded\":\"true\",\"aria-hidden\":\"false\"}),i.newTab.attr({\"aria-selected\":\"true\",tabIndex:0})},_activate:function(e){var i,n=this._findActive(e);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(\".ui-tabs-anchor\")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(t){return\"string\"==typeof t&&(t=this.anchors.index(this.anchors.filter(\"[href$='\"+t+\"']\"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass(\"ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible\"),this.tablist.removeClass(\"ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\").removeAttr(\"role\"),this.anchors.removeClass(\"ui-tabs-anchor\").removeAttr(\"role\").removeAttr(\"tabIndex\").removeUniqueId(),this.tabs.add(this.panels).each(function(){t.data(this,\"ui-tabs-destroy\")?t(this).remove():t(this).removeClass(\"ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel\").removeAttr(\"tabIndex\").removeAttr(\"aria-live\").removeAttr(\"aria-busy\").removeAttr(\"aria-selected\").removeAttr(\"aria-labelledby\").removeAttr(\"aria-hidden\").removeAttr(\"aria-expanded\").removeAttr(\"role\")}),this.tabs.each(function(){var e=t(this),i=e.data(\"ui-tabs-aria-controls\");i?e.attr(\"aria-controls\",i).removeData(\"ui-tabs-aria-controls\"):e.removeAttr(\"aria-controls\")}),this.panels.show(),\"content\"!==this.options.heightStyle&&this.panels.css(\"height\",\"\")},enable:function(i){var n=this.options.disabled;n!==!1&&(i===e?n=!1:(i=this._getIndex(i),n=t.isArray(n)?t.map(n,function(t){return t!==i?t:null}):t.map(this.tabs,function(t,e){return e!==i?e:null})),this._setupDisabled(n))},disable:function(i){var n=this.options.disabled;if(n!==!0){if(i===e)n=!0;else{if(i=this._getIndex(i),-1!==t.inArray(i,n))return;n=t.isArray(n)?t.merge([i],n).sort():[i]}this._setupDisabled(n)}},load:function(e,i){e=this._getIndex(e);var s=this,a=this.tabs.eq(e),o=a.find(\".ui-tabs-anchor\"),r=this._getPanelForTab(a),l={tab:a,panel:r};n(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,l)),this.xhr&&\"canceled\"!==this.xhr.statusText&&(a.addClass(\"ui-tabs-loading\"),r.attr(\"aria-busy\",\"true\"),this.xhr.success(function(t){setTimeout(function(){r.html(t),s._trigger(\"load\",i,l)},1)}).complete(function(t,e){setTimeout(function(){\"abort\"===e&&s.panels.stop(!1,!0),a.removeClass(\"ui-tabs-loading\"),r.removeAttr(\"aria-busy\"),t===s.xhr&&delete s.xhr},1)})))},_ajaxSettings:function(e,i,n){var s=this;return{url:e.attr(\"href\"),beforeSend:function(e,a){return s._trigger(\"beforeLoad\",i,t.extend({jqXHR:e,ajaxSettings:a},n))}}},_getPanelForTab:function(e){var i=t(e).attr(\"aria-controls\");return this.element.find(this._sanitizeSelector(\"#\"+i))}})}(jQuery),function(t){function e(e,i){var n=(e.attr(\"aria-describedby\")||\"\").split(/\\s+/);n.push(i),e.data(\"ui-tooltip-id\",i).attr(\"aria-describedby\",t.trim(n.join(\" \")))}function i(e){var i=e.data(\"ui-tooltip-id\"),n=(e.attr(\"aria-describedby\")||\"\").split(/\\s+/),s=t.inArray(i,n);-1!==s&&n.splice(s,1),e.removeData(\"ui-tooltip-id\"),n=t.trim(n.join(\" \")),n?e.attr(\"aria-describedby\",n):e.removeAttr(\"aria-describedby\")}var n=0;t.widget(\"ui.tooltip\",{version:\"1.10.4\",options:{content:function(){var e=t(this).attr(\"title\")||\"\";return t(\"<a>\").text(e).html()},hide:!0,items:\"[title]:not([disabled])\",position:{my:\"left top+15\",at:\"left bottom\",collision:\"flipfit flip\"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_create:function(){this._on({mouseover:\"open\",focusin:\"open\"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable()},_setOption:function(e,i){var n=this;return\"disabled\"===e?(this[i?\"_disable\":\"_enable\"](),void(this.options[e]=i)):(this._super(e,i),void(\"content\"===e&&t.each(this.tooltips,function(t,e){n._updateContent(e)})))},_disable:function(){var e=this;t.each(this.tooltips,function(i,n){var s=t.Event(\"blur\");s.target=s.currentTarget=n[0],e.close(s,!0)}),this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.is(\"[title]\")&&e.data(\"ui-tooltip-title\",e.attr(\"title\")).attr(\"title\",\"\")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.data(\"ui-tooltip-title\")&&e.attr(\"title\",e.data(\"ui-tooltip-title\"))})},open:function(e){var i=this,n=t(e?e.target:this.element).closest(this.options.items);n.length&&!n.data(\"ui-tooltip-id\")&&(n.attr(\"title\")&&n.data(\"ui-tooltip-title\",n.attr(\"title\")),n.data(\"ui-tooltip-open\",!0),e&&\"mouseover\"===e.type&&n.parents().each(function(){var e,n=t(this);n.data(\"ui-tooltip-open\")&&(e=t.Event(\"blur\"),e.target=e.currentTarget=this,i.close(e,!0)),n.attr(\"title\")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr(\"title\")},n.attr(\"title\",\"\"))}),this._updateContent(n,e))},_updateContent:function(t,e){var i,n=this.options.content,s=this,a=e?e.type:null;return\"string\"==typeof n?this._open(e,t,n):(i=n.call(t[0],function(i){t.data(\"ui-tooltip-open\")&&s._delay(function(){e&&(e.type=a),this._open(e,t,i)})}),void(i&&this._open(e,t,i)))},_open:function(i,n,s){function a(t){h.of=t,o.is(\":hidden\")||o.position(h)}var o,r,l,h=t.extend({},this.options.position);if(s){if(o=this._find(n),o.length)return void o.find(\".ui-tooltip-content\").html(s);n.is(\"[title]\")&&(i&&\"mouseover\"===i.type?n.attr(\"title\",\"\"):n.removeAttr(\"title\")),o=this._tooltip(n),e(n,o.attr(\"id\")),o.find(\".ui-tooltip-content\").html(s),this.options.track&&i&&/^mouse/.test(i.type)?(this._on(this.document,{mousemove:a}),a(i)):o.position(t.extend({of:n},this.options.position)),o.hide(),this._show(o,this.options.show),this.options.show&&this.options.show.delay&&(l=this.delayedShow=setInterval(function(){o.is(\":visible\")&&(a(h.of),clearInterval(l))},t.fx.interval)),this._trigger(\"open\",i,{tooltip:o}),r={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var i=t.Event(e);i.currentTarget=n[0],this.close(i,!0)}},remove:function(){this._removeTooltip(o)}},i&&\"mouseover\"!==i.type||(r.mouseleave=\"close\"),i&&\"focusin\"!==i.type||(r.focusout=\"close\"),this._on(!0,n,r)}},close:function(e){var n=this,s=t(e?e.currentTarget:this.element),a=this._find(s);this.closing||(clearInterval(this.delayedShow),s.data(\"ui-tooltip-title\")&&s.attr(\"title\",s.data(\"ui-tooltip-title\")),i(s),a.stop(!0),this._hide(a,this.options.hide,function(){n._removeTooltip(t(this))}),s.removeData(\"ui-tooltip-open\"),this._off(s,\"mouseleave focusout keyup\"),s[0]!==this.element[0]&&this._off(s,\"remove\"),this._off(this.document,\"mousemove\"),e&&\"mouseleave\"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr(\"title\",i.title),delete n.parents[e]}),this.closing=!0,this._trigger(\"close\",e,{tooltip:a}),this.closing=!1)},_tooltip:function(e){var i=\"ui-tooltip-\"+n++,s=t(\"<div>\").attr({id:i,role:\"tooltip\"}).addClass(\"ui-tooltip ui-widget ui-corner-all ui-widget-content \"+(this.options.tooltipClass||\"\"));return t(\"<div>\").addClass(\"ui-tooltip-content\").appendTo(s),s.appendTo(this.document[0].body),this.tooltips[i]=e,s},_find:function(e){var i=e.data(\"ui-tooltip-id\");return i?t(\"#\"+i):t()},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr(\"id\")]},_destroy:function(){var e=this;t.each(this.tooltips,function(i,n){var s=t.Event(\"blur\");s.target=s.currentTarget=n[0],e.close(s,!0),t(\"#\"+i).remove(),n.data(\"ui-tooltip-title\")&&(n.attr(\"title\",n.data(\"ui-tooltip-title\")),n.removeData(\"ui-tooltip-title\"))})}})}(jQuery),define(\"lib.jquery-ui\",function(){}),function($){if($.ui.timepicker=$.ui.timepicker||{},!$.ui.timepicker.version){$.extend($.ui,{timepicker:{version:\"1.4.3\"}});\nvar Timepicker=function(){this.regional=[],this.regional[\"\"]={currentText:\"Now\",closeText:\"Done\",amNames:[\"AM\",\"A\"],pmNames:[\"PM\",\"P\"],timeFormat:\"HH:mm\",timeSuffix:\"\",timeOnlyTitle:\"Choose Time\",timeText:\"Time\",hourText:\"Hour\",minuteText:\"Minute\",secondText:\"Second\",millisecText:\"Millisecond\",microsecText:\"Microsecond\",timezoneText:\"Time Zone\",isRTL:!1},this._defaults={showButtonPanel:!0,timeOnly:!1,showHour:null,showMinute:null,showSecond:null,showMillisec:null,showMicrosec:null,showTimezone:null,showTime:!0,stepHour:1,stepMinute:1,stepSecond:1,stepMillisec:1,stepMicrosec:1,hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null,hourMin:0,minuteMin:0,secondMin:0,millisecMin:0,microsecMin:0,hourMax:23,minuteMax:59,secondMax:59,millisecMax:999,microsecMax:999,minDateTime:null,maxDateTime:null,onSelect:null,hourGrid:0,minuteGrid:0,secondGrid:0,millisecGrid:0,microsecGrid:0,alwaysSetTime:!0,separator:\" \",altFieldTimeOnly:!0,altTimeFormat:null,altSeparator:null,altTimeSuffix:null,pickerTimeFormat:null,pickerTimeSuffix:null,showTimepicker:!0,timezoneList:null,addSliderAccess:!1,sliderAccessArgs:null,controlType:\"slider\",defaultValue:null,parse:\"strict\"},$.extend(this._defaults,this.regional[\"\"])};$.extend(Timepicker.prototype,{$input:null,$altInput:null,$timeObj:null,inst:null,hour_slider:null,minute_slider:null,second_slider:null,millisec_slider:null,microsec_slider:null,timezone_select:null,hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null,hourMinOriginal:null,minuteMinOriginal:null,secondMinOriginal:null,millisecMinOriginal:null,microsecMinOriginal:null,hourMaxOriginal:null,minuteMaxOriginal:null,secondMaxOriginal:null,millisecMaxOriginal:null,microsecMaxOriginal:null,ampm:\"\",formattedDate:\"\",formattedTime:\"\",formattedDateTime:\"\",timezoneList:null,units:[\"hour\",\"minute\",\"second\",\"millisec\",\"microsec\"],support:{},control:null,setDefaults:function(t){return extendRemove(this._defaults,t||{}),this},_newInst:function($input,opts){var tp_inst=new Timepicker,inlineSettings={},fns={},overrides,i;for(var attrName in this._defaults)if(this._defaults.hasOwnProperty(attrName)){var attrValue=$input.attr(\"time:\"+attrName);if(attrValue)try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}overrides={beforeShow:function(t,e){return $.isFunction(tp_inst._defaults.evnts.beforeShow)?tp_inst._defaults.evnts.beforeShow.call($input[0],t,e,tp_inst):void 0},onChangeMonthYear:function(t,e,i){tp_inst._updateDateTime(i),$.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)&&tp_inst._defaults.evnts.onChangeMonthYear.call($input[0],t,e,i,tp_inst)},onClose:function(t,e){tp_inst.timeDefined===!0&&\"\"!==$input.val()&&tp_inst._updateDateTime(e),$.isFunction(tp_inst._defaults.evnts.onClose)&&tp_inst._defaults.evnts.onClose.call($input[0],t,e,tp_inst)}};for(i in overrides)overrides.hasOwnProperty(i)&&(fns[i]=opts[i]||null);tp_inst._defaults=$.extend({},this._defaults,inlineSettings,opts,overrides,{evnts:fns,timepicker:tp_inst}),tp_inst.amNames=$.map(tp_inst._defaults.amNames,function(t){return t.toUpperCase()}),tp_inst.pmNames=$.map(tp_inst._defaults.pmNames,function(t){return t.toUpperCase()}),tp_inst.support=detectSupport(tp_inst._defaults.timeFormat+(tp_inst._defaults.pickerTimeFormat?tp_inst._defaults.pickerTimeFormat:\"\")+(tp_inst._defaults.altTimeFormat?tp_inst._defaults.altTimeFormat:\"\")),\"string\"==typeof tp_inst._defaults.controlType?(\"slider\"===tp_inst._defaults.controlType&&\"undefined\"==typeof $.ui.slider&&(tp_inst._defaults.controlType=\"select\"),tp_inst.control=tp_inst._controls[tp_inst._defaults.controlType]):tp_inst.control=tp_inst._defaults.controlType;var timezoneList=[-720,-660,-600,-570,-540,-480,-420,-360,-300,-270,-240,-210,-180,-120,-60,0,60,120,180,210,240,270,300,330,345,360,390,420,480,525,540,570,600,630,660,690,720,765,780,840];null!==tp_inst._defaults.timezoneList&&(timezoneList=tp_inst._defaults.timezoneList);var tzl=timezoneList.length,tzi=0,tzv=null;if(tzl>0&&\"object\"!=typeof timezoneList[0])for(;tzl>tzi;tzi++)tzv=timezoneList[tzi],timezoneList[tzi]={value:tzv,label:$.timepicker.timezoneOffsetString(tzv,tp_inst.support.iso8601)};return tp_inst._defaults.timezoneList=timezoneList,tp_inst.timezone=null!==tp_inst._defaults.timezone?$.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone):-1*(new Date).getTimezoneOffset(),tp_inst.hour=tp_inst._defaults.hour<tp_inst._defaults.hourMin?tp_inst._defaults.hourMin:tp_inst._defaults.hour>tp_inst._defaults.hourMax?tp_inst._defaults.hourMax:tp_inst._defaults.hour,tp_inst.minute=tp_inst._defaults.minute<tp_inst._defaults.minuteMin?tp_inst._defaults.minuteMin:tp_inst._defaults.minute>tp_inst._defaults.minuteMax?tp_inst._defaults.minuteMax:tp_inst._defaults.minute,tp_inst.second=tp_inst._defaults.second<tp_inst._defaults.secondMin?tp_inst._defaults.secondMin:tp_inst._defaults.second>tp_inst._defaults.secondMax?tp_inst._defaults.secondMax:tp_inst._defaults.second,tp_inst.millisec=tp_inst._defaults.millisec<tp_inst._defaults.millisecMin?tp_inst._defaults.millisecMin:tp_inst._defaults.millisec>tp_inst._defaults.millisecMax?tp_inst._defaults.millisecMax:tp_inst._defaults.millisec,tp_inst.microsec=tp_inst._defaults.microsec<tp_inst._defaults.microsecMin?tp_inst._defaults.microsecMin:tp_inst._defaults.microsec>tp_inst._defaults.microsecMax?tp_inst._defaults.microsecMax:tp_inst._defaults.microsec,tp_inst.ampm=\"\",tp_inst.$input=$input,tp_inst._defaults.altField&&(tp_inst.$altInput=$(tp_inst._defaults.altField).css({cursor:\"pointer\"}).focus(function(){$input.trigger(\"focus\")})),(0===tp_inst._defaults.minDate||0===tp_inst._defaults.minDateTime)&&(tp_inst._defaults.minDate=new Date),(0===tp_inst._defaults.maxDate||0===tp_inst._defaults.maxDateTime)&&(tp_inst._defaults.maxDate=new Date),void 0!==tp_inst._defaults.minDate&&tp_inst._defaults.minDate instanceof Date&&(tp_inst._defaults.minDateTime=new Date(tp_inst._defaults.minDate.getTime())),void 0!==tp_inst._defaults.minDateTime&&tp_inst._defaults.minDateTime instanceof Date&&(tp_inst._defaults.minDate=new Date(tp_inst._defaults.minDateTime.getTime())),void 0!==tp_inst._defaults.maxDate&&tp_inst._defaults.maxDate instanceof Date&&(tp_inst._defaults.maxDateTime=new Date(tp_inst._defaults.maxDate.getTime())),void 0!==tp_inst._defaults.maxDateTime&&tp_inst._defaults.maxDateTime instanceof Date&&(tp_inst._defaults.maxDate=new Date(tp_inst._defaults.maxDateTime.getTime())),tp_inst.$input.bind(\"focus\",function(){tp_inst._onFocus()}),tp_inst},_addTimePicker:function(t){var e=this.$altInput&&this._defaults.altFieldTimeOnly?this.$input.val()+\" \"+this.$altInput.val():this.$input.val();this.timeDefined=this._parseTime(e),this._limitMinMaxDateTime(t,!1),this._injectTimePicker()},_parseTime:function(t,e){if(this.inst||(this.inst=$.datepicker._getInst(this.$input[0])),e||!this._defaults.timeOnly){var i=$.datepicker._get(this.inst,\"dateFormat\");try{var n=parseDateTimeInternal(i,this._defaults.timeFormat,t,$.datepicker._getFormatConfig(this.inst),this._defaults);if(!n.timeObj)return!1;$.extend(this,n.timeObj)}catch(s){return $.timepicker.log(\"Error parsing the date/time string: \"+s+\"\\ndate/time string = \"+t+\"\\ntimeFormat = \"+this._defaults.timeFormat+\"\\ndateFormat = \"+i),!1}return!0}var a=$.datepicker.parseTime(this._defaults.timeFormat,t,this._defaults);return a?($.extend(this,a),!0):!1},_injectTimePicker:function(){var t=this.inst.dpDiv,e=this.inst.settings,i=this,n=\"\",s=\"\",a=null,o={},r={},l=null,h=0,u=0;if(0===t.find(\"div.ui-timepicker-div\").length&&e.showTimepicker){var c=' style=\"display:none;\"',d='<div class=\"ui-timepicker-div'+(e.isRTL?\" ui-timepicker-rtl\":\"\")+'\"><dl><dt class=\"ui_tpicker_time_label\"'+(e.showTime?\"\":c)+\">\"+e.timeText+'</dt><dd class=\"ui_tpicker_time\"'+(e.showTime?\"\":c)+\"></dd>\";for(h=0,u=this.units.length;u>h;h++){if(n=this.units[h],s=n.substr(0,1).toUpperCase()+n.substr(1),a=null!==e[\"show\"+s]?e[\"show\"+s]:this.support[n],o[n]=parseInt(e[n+\"Max\"]-(e[n+\"Max\"]-e[n+\"Min\"])%e[\"step\"+s],10),r[n]=0,d+='<dt class=\"ui_tpicker_'+n+'_label\"'+(a?\"\":c)+\">\"+e[n+\"Text\"]+'</dt><dd class=\"ui_tpicker_'+n+'\"><div class=\"ui_tpicker_'+n+'_slider\"'+(a?\"\":c)+\"></div>\",a&&e[n+\"Grid\"]>0){if(d+='<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>',\"hour\"===n)for(var p=e[n+\"Min\"];p<=o[n];p+=parseInt(e[n+\"Grid\"],10)){r[n]++;var f=$.datepicker.formatTime(this.support.ampm?\"hht\":\"HH\",{hour:p},e);d+='<td data-for=\"'+n+'\">'+f+\"</td>\"}else for(var m=e[n+\"Min\"];m<=o[n];m+=parseInt(e[n+\"Grid\"],10))r[n]++,d+='<td data-for=\"'+n+'\">'+(10>m?\"0\":\"\")+m+\"</td>\";d+=\"</tr></table></div>\"}d+=\"</dd>\"}var g=null!==e.showTimezone?e.showTimezone:this.support.timezone;d+='<dt class=\"ui_tpicker_timezone_label\"'+(g?\"\":c)+\">\"+e.timezoneText+\"</dt>\",d+='<dd class=\"ui_tpicker_timezone\" '+(g?\"\":c)+\"></dd>\",d+=\"</dl></div>\";var v=$(d);for(e.timeOnly===!0&&(v.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\"><div class=\"ui-datepicker-title\">'+e.timeOnlyTitle+\"</div></div>\"),t.find(\".ui-datepicker-header, .ui-datepicker-calendar\").hide()),h=0,u=i.units.length;u>h;h++)n=i.units[h],s=n.substr(0,1).toUpperCase()+n.substr(1),a=null!==e[\"show\"+s]?e[\"show\"+s]:this.support[n],i[n+\"_slider\"]=i.control.create(i,v.find(\".ui_tpicker_\"+n+\"_slider\"),n,i[n],e[n+\"Min\"],o[n],e[\"step\"+s]),a&&e[n+\"Grid\"]>0&&(l=100*r[n]*e[n+\"Grid\"]/(o[n]-e[n+\"Min\"]),v.find(\".ui_tpicker_\"+n+\" table\").css({width:l+\"%\",marginLeft:e.isRTL?\"0\":l/(-2*r[n])+\"%\",marginRight:e.isRTL?l/(-2*r[n])+\"%\":\"0\",borderCollapse:\"collapse\"}).find(\"td\").click(function(){var t=$(this),e=t.html(),s=parseInt(e.replace(/[^0-9]/g),10),a=e.replace(/[^apm]/gi),o=t.data(\"for\");\"hour\"===o&&(-1!==a.indexOf(\"p\")&&12>s?s+=12:-1!==a.indexOf(\"a\")&&12===s&&(s=0)),i.control.value(i,i[o+\"_slider\"],n,s),i._onTimeChange(),i._onSelectHandler()}).css({cursor:\"pointer\",width:100/r[n]+\"%\",textAlign:\"center\",overflow:\"hidden\"}));if(this.timezone_select=v.find(\".ui_tpicker_timezone\").append(\"<select></select>\").find(\"select\"),$.fn.append.apply(this.timezone_select,$.map(e.timezoneList,function(t){return $(\"<option />\").val(\"object\"==typeof t?t.value:t).text(\"object\"==typeof t?t.label:t)})),\"undefined\"!=typeof this.timezone&&null!==this.timezone&&\"\"!==this.timezone){var _=-1*new Date(this.inst.selectedYear,this.inst.selectedMonth,this.inst.selectedDay,12).getTimezoneOffset();_===this.timezone?selectLocalTimezone(i):this.timezone_select.val(this.timezone)}else\"undefined\"!=typeof this.hour&&null!==this.hour&&\"\"!==this.hour?this.timezone_select.val(e.timezone):selectLocalTimezone(i);this.timezone_select.change(function(){i._onTimeChange(),i._onSelectHandler()});var b=t.find(\".ui-datepicker-buttonpane\");if(b.length?b.before(v):t.append(v),this.$timeObj=v.find(\".ui_tpicker_time\"),null!==this.inst){var y=this.timeDefined;this._onTimeChange(),this.timeDefined=y}if(this._defaults.addSliderAccess){var x=this._defaults.sliderAccessArgs,w=this._defaults.isRTL;x.isRTL=w,setTimeout(function(){if(0===v.find(\".ui-slider-access\").length){v.find(\".ui-slider:visible\").sliderAccess(x);var t=v.find(\".ui-slider-access:eq(0)\").outerWidth(!0);t&&v.find(\"table:visible\").each(function(){var e=$(this),i=e.outerWidth(),n=e.css(w?\"marginRight\":\"marginLeft\").toString().replace(\"%\",\"\"),s=i-t,a=n*s/i+\"%\",o={width:s,marginRight:0,marginLeft:0};o[w?\"marginRight\":\"marginLeft\"]=a,e.css(o)})}},10)}i._limitMinMaxDateTime(this.inst,!0)}},_limitMinMaxDateTime:function(t,e){var i=this._defaults,n=new Date(t.selectedYear,t.selectedMonth,t.selectedDay);if(this._defaults.showTimepicker){if(null!==$.datepicker._get(t,\"minDateTime\")&&void 0!==$.datepicker._get(t,\"minDateTime\")&&n){var s=$.datepicker._get(t,\"minDateTime\"),a=new Date(s.getFullYear(),s.getMonth(),s.getDate(),0,0,0,0);(null===this.hourMinOriginal||null===this.minuteMinOriginal||null===this.secondMinOriginal||null===this.millisecMinOriginal||null===this.microsecMinOriginal)&&(this.hourMinOriginal=i.hourMin,this.minuteMinOriginal=i.minuteMin,this.secondMinOriginal=i.secondMin,this.millisecMinOriginal=i.millisecMin,this.microsecMinOriginal=i.microsecMin),t.settings.timeOnly||a.getTime()===n.getTime()?(this._defaults.hourMin=s.getHours(),this.hour<=this._defaults.hourMin?(this.hour=this._defaults.hourMin,this._defaults.minuteMin=s.getMinutes(),this.minute<=this._defaults.minuteMin?(this.minute=this._defaults.minuteMin,this._defaults.secondMin=s.getSeconds(),this.second<=this._defaults.secondMin?(this.second=this._defaults.secondMin,this._defaults.millisecMin=s.getMilliseconds(),this.millisec<=this._defaults.millisecMin?(this.millisec=this._defaults.millisecMin,this._defaults.microsecMin=s.getMicroseconds()):(this.microsec<this._defaults.microsecMin&&(this.microsec=this._defaults.microsecMin),this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.minuteMin=this.minuteMinOriginal,this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.hourMin=this.hourMinOriginal,this._defaults.minuteMin=this.minuteMinOriginal,this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)}if(null!==$.datepicker._get(t,\"maxDateTime\")&&void 0!==$.datepicker._get(t,\"maxDateTime\")&&n){var o=$.datepicker._get(t,\"maxDateTime\"),r=new Date(o.getFullYear(),o.getMonth(),o.getDate(),0,0,0,0);(null===this.hourMaxOriginal||null===this.minuteMaxOriginal||null===this.secondMaxOriginal||null===this.millisecMaxOriginal)&&(this.hourMaxOriginal=i.hourMax,this.minuteMaxOriginal=i.minuteMax,this.secondMaxOriginal=i.secondMax,this.millisecMaxOriginal=i.millisecMax,this.microsecMaxOriginal=i.microsecMax),t.settings.timeOnly||r.getTime()===n.getTime()?(this._defaults.hourMax=o.getHours(),this.hour>=this._defaults.hourMax?(this.hour=this._defaults.hourMax,this._defaults.minuteMax=o.getMinutes(),this.minute>=this._defaults.minuteMax?(this.minute=this._defaults.minuteMax,this._defaults.secondMax=o.getSeconds(),this.second>=this._defaults.secondMax?(this.second=this._defaults.secondMax,this._defaults.millisecMax=o.getMilliseconds(),this.millisec>=this._defaults.millisecMax?(this.millisec=this._defaults.millisecMax,this._defaults.microsecMax=o.getMicroseconds()):(this.microsec>this._defaults.microsecMax&&(this.microsec=this._defaults.microsecMax),this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.minuteMax=this.minuteMaxOriginal,this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.hourMax=this.hourMaxOriginal,this._defaults.minuteMax=this.minuteMaxOriginal,this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)}if(void 0!==e&&e===!0){var l=parseInt(this._defaults.hourMax-(this._defaults.hourMax-this._defaults.hourMin)%this._defaults.stepHour,10),h=parseInt(this._defaults.minuteMax-(this._defaults.minuteMax-this._defaults.minuteMin)%this._defaults.stepMinute,10),u=parseInt(this._defaults.secondMax-(this._defaults.secondMax-this._defaults.secondMin)%this._defaults.stepSecond,10),c=parseInt(this._defaults.millisecMax-(this._defaults.millisecMax-this._defaults.millisecMin)%this._defaults.stepMillisec,10),d=parseInt(this._defaults.microsecMax-(this._defaults.microsecMax-this._defaults.microsecMin)%this._defaults.stepMicrosec,10);this.hour_slider&&(this.control.options(this,this.hour_slider,\"hour\",{min:this._defaults.hourMin,max:l}),this.control.value(this,this.hour_slider,\"hour\",this.hour-this.hour%this._defaults.stepHour)),this.minute_slider&&(this.control.options(this,this.minute_slider,\"minute\",{min:this._defaults.minuteMin,max:h}),this.control.value(this,this.minute_slider,\"minute\",this.minute-this.minute%this._defaults.stepMinute)),this.second_slider&&(this.control.options(this,this.second_slider,\"second\",{min:this._defaults.secondMin,max:u}),this.control.value(this,this.second_slider,\"second\",this.second-this.second%this._defaults.stepSecond)),this.millisec_slider&&(this.control.options(this,this.millisec_slider,\"millisec\",{min:this._defaults.millisecMin,max:c}),this.control.value(this,this.millisec_slider,\"millisec\",this.millisec-this.millisec%this._defaults.stepMillisec)),this.microsec_slider&&(this.control.options(this,this.microsec_slider,\"microsec\",{min:this._defaults.microsecMin,max:d}),this.control.value(this,this.microsec_slider,\"microsec\",this.microsec-this.microsec%this._defaults.stepMicrosec))}}},_onTimeChange:function(){if(this._defaults.showTimepicker){var t=this.hour_slider?this.control.value(this,this.hour_slider,\"hour\"):!1,e=this.minute_slider?this.control.value(this,this.minute_slider,\"minute\"):!1,i=this.second_slider?this.control.value(this,this.second_slider,\"second\"):!1,n=this.millisec_slider?this.control.value(this,this.millisec_slider,\"millisec\"):!1,s=this.microsec_slider?this.control.value(this,this.microsec_slider,\"microsec\"):!1,a=this.timezone_select?this.timezone_select.val():!1,o=this._defaults,r=o.pickerTimeFormat||o.timeFormat,l=o.pickerTimeSuffix||o.timeSuffix;\"object\"==typeof t&&(t=!1),\"object\"==typeof e&&(e=!1),\"object\"==typeof i&&(i=!1),\"object\"==typeof n&&(n=!1),\"object\"==typeof s&&(s=!1),\"object\"==typeof a&&(a=!1),t!==!1&&(t=parseInt(t,10)),e!==!1&&(e=parseInt(e,10)),i!==!1&&(i=parseInt(i,10)),n!==!1&&(n=parseInt(n,10)),s!==!1&&(s=parseInt(s,10)),a!==!1&&(a=a.toString());var h=o[12>t?\"amNames\":\"pmNames\"][0],u=t!==parseInt(this.hour,10)||e!==parseInt(this.minute,10)||i!==parseInt(this.second,10)||n!==parseInt(this.millisec,10)||s!==parseInt(this.microsec,10)||this.ampm.length>0&&12>t!=(-1!==$.inArray(this.ampm.toUpperCase(),this.amNames))||null!==this.timezone&&a!==this.timezone.toString();u&&(t!==!1&&(this.hour=t),e!==!1&&(this.minute=e),i!==!1&&(this.second=i),n!==!1&&(this.millisec=n),s!==!1&&(this.microsec=s),a!==!1&&(this.timezone=a),this.inst||(this.inst=$.datepicker._getInst(this.$input[0])),this._limitMinMaxDateTime(this.inst,!0)),this.support.ampm&&(this.ampm=h),this.formattedTime=$.datepicker.formatTime(o.timeFormat,this,o),this.$timeObj&&this.$timeObj.text(r===o.timeFormat?this.formattedTime+l:$.datepicker.formatTime(r,this,o)+l),this.timeDefined=!0,u&&(this._updateDateTime(),this.$input.focus())}},_onSelectHandler:function(){var t=this._defaults.onSelect||this.inst.settings.onSelect,e=this.$input?this.$input[0]:null;t&&e&&t.apply(e,[this.formattedDateTime,this])},_updateDateTime:function(t){t=this.inst||t;var e=t.currentYear>0?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(t.selectedYear,t.selectedMonth,t.selectedDay),i=$.datepicker._daylightSavingAdjust(e),n=$.datepicker._get(t,\"dateFormat\"),s=$.datepicker._getFormatConfig(t),a=null!==i&&this.timeDefined;this.formattedDate=$.datepicker.formatDate(n,null===i?new Date:i,s);var o=this.formattedDate;if(\"\"===t.lastVal&&(t.currentYear=t.selectedYear,t.currentMonth=t.selectedMonth,t.currentDay=t.selectedDay),this._defaults.timeOnly===!0?o=this.formattedTime:this._defaults.timeOnly!==!0&&(this._defaults.alwaysSetTime||a)&&(o+=this._defaults.separator+this.formattedTime+this._defaults.timeSuffix),this.formattedDateTime=o,this._defaults.showTimepicker)if(this.$altInput&&this._defaults.timeOnly===!1&&this._defaults.altFieldTimeOnly===!0)this.$altInput.val(this.formattedTime),this.$input.val(this.formattedDate);else if(this.$altInput){this.$input.val(o);var r=\"\",l=this._defaults.altSeparator?this._defaults.altSeparator:this._defaults.separator,h=this._defaults.altTimeSuffix?this._defaults.altTimeSuffix:this._defaults.timeSuffix;this._defaults.timeOnly||(r=this._defaults.altFormat?$.datepicker.formatDate(this._defaults.altFormat,null===i?new Date:i,s):this.formattedDate,r&&(r+=l)),r+=this._defaults.altTimeFormat?$.datepicker.formatTime(this._defaults.altTimeFormat,this,this._defaults)+h:this.formattedTime+h,this.$altInput.val(r)}else this.$input.val(o);else this.$input.val(this.formattedDate);this.$input.trigger(\"change\")},_onFocus:function(){if(!this.$input.val()&&this._defaults.defaultValue){this.$input.val(this._defaults.defaultValue);var t=$.datepicker._getInst(this.$input.get(0)),e=$.datepicker._get(t,\"timepicker\");if(e&&e._defaults.timeOnly&&t.input.val()!==t.lastVal)try{$.datepicker._updateDatepicker(t)}catch(i){$.timepicker.log(i)}}},_controls:{slider:{create:function(t,e,i,n,s,a,o){var r=t._defaults.isRTL;return e.prop(\"slide\",null).slider({orientation:\"horizontal\",value:r?-1*n:n,min:r?-1*a:s,max:r?-1*s:a,step:o,slide:function(e,n){t.control.value(t,$(this),i,r?-1*n.value:n.value),t._onTimeChange()},stop:function(){t._onSelectHandler()}})},options:function(t,e,i,n,s){if(t._defaults.isRTL){if(\"string\"==typeof n)return\"min\"===n||\"max\"===n?void 0!==s?e.slider(n,-1*s):Math.abs(e.slider(n)):e.slider(n);var a=n.min,o=n.max;return n.min=n.max=null,void 0!==a&&(n.max=-1*a),void 0!==o&&(n.min=-1*o),e.slider(n)}return\"string\"==typeof n&&void 0!==s?e.slider(n,s):e.slider(n)},value:function(t,e,i,n){return t._defaults.isRTL?void 0!==n?e.slider(\"value\",-1*n):Math.abs(e.slider(\"value\")):void 0!==n?e.slider(\"value\",n):e.slider(\"value\")}},select:{create:function(t,e,i,n,s,a,o){for(var r='<select class=\"ui-timepicker-select\" data-unit=\"'+i+'\" data-min=\"'+s+'\" data-max=\"'+a+'\" data-step=\"'+o+'\">',l=t._defaults.pickerTimeFormat||t._defaults.timeFormat,h=s;a>=h;h+=o)r+='<option value=\"'+h+'\"'+(h===n?\" selected\":\"\")+\">\",r+=\"hour\"===i?$.datepicker.formatTime($.trim(l.replace(/[^ht ]/gi,\"\")),{hour:h},t._defaults):\"millisec\"===i||\"microsec\"===i||h>=10?h:\"0\"+h.toString(),r+=\"</option>\";return r+=\"</select>\",e.children(\"select\").remove(),$(r).appendTo(e).change(function(){t._onTimeChange(),t._onSelectHandler()}),e},options:function(t,e,i,n,s){var a={},o=e.children(\"select\");if(\"string\"==typeof n){if(void 0===s)return o.data(n);a[n]=s}else a=n;return t.control.create(t,e,o.data(\"unit\"),o.val(),a.min||o.data(\"min\"),a.max||o.data(\"max\"),a.step||o.data(\"step\"))},value:function(t,e,i,n){var s=e.children(\"select\");return void 0!==n?s.val(n):s.val()}}}}),$.fn.extend({timepicker:function(t){t=t||{};var e=Array.prototype.slice.call(arguments);return\"object\"==typeof t&&(e[0]=$.extend(t,{timeOnly:!0})),$(this).each(function(){$.fn.datetimepicker.apply($(this),e)})},datetimepicker:function(t){t=t||{};var e=arguments;return\"string\"==typeof t?\"getDate\"===t?$.fn.datepicker.apply($(this[0]),e):this.each(function(){var t=$(this);t.datepicker.apply(t,e)}):this.each(function(){var e=$(this);e.datepicker($.timepicker._newInst(e,t)._defaults)})}}),$.datepicker.parseDateTime=function(t,e,i,n,s){var a=parseDateTimeInternal(t,e,i,n,s);if(a.timeObj){var o=a.timeObj;a.date.setHours(o.hour,o.minute,o.second,o.millisec),a.date.setMicroseconds(o.microsec)}return a.date},$.datepicker.parseTime=function(t,e,i){var n=extendRemove(extendRemove({},$.timepicker._defaults),i||{}),s=(-1!==t.replace(/\\'.*?\\'/g,\"\").indexOf(\"Z\"),function(t,e,i){var n,s=function(t,e){var i=[];return t&&$.merge(i,t),e&&$.merge(i,e),i=$.map(i,function(t){return t.replace(/[.*+?|()\\[\\]{}\\\\]/g,\"\\\\$&\")}),\"(\"+i.join(\"|\")+\")?\"},a=function(t){var e=t.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g),i={h:-1,m:-1,s:-1,l:-1,c:-1,t:-1,z:-1};if(e)for(var n=0;n<e.length;n++)-1===i[e[n].toString().charAt(0)]&&(i[e[n].toString().charAt(0)]=n+1);return i},o=\"^\"+t.toString().replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g,function(t){var e=t.length;switch(t.charAt(0).toLowerCase()){case\"h\":return 1===e?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+e+\"})\";case\"m\":return 1===e?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+e+\"})\";case\"s\":return 1===e?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+e+\"})\";case\"l\":return\"(\\\\d?\\\\d?\\\\d)\";case\"c\":return\"(\\\\d?\\\\d?\\\\d)\";case\"z\":return\"(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?\";case\"t\":return s(i.amNames,i.pmNames);default:return\"(\"+t.replace(/\\'/g,\"\").replace(/(\\.|\\$|\\^|\\\\|\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)/g,function(t){return\"\\\\\"+t})+\")?\"}}).replace(/\\s/g,\"\\\\s?\")+i.timeSuffix+\"$\",r=a(t),l=\"\";n=e.match(new RegExp(o,\"i\"));var h={hour:0,minute:0,second:0,millisec:0,microsec:0};return n?(-1!==r.t&&(void 0===n[r.t]||0===n[r.t].length?(l=\"\",h.ampm=\"\"):(l=-1!==$.inArray(n[r.t].toUpperCase(),i.amNames)?\"AM\":\"PM\",h.ampm=i[\"AM\"===l?\"amNames\":\"pmNames\"][0])),-1!==r.h&&(h.hour=\"AM\"===l&&\"12\"===n[r.h]?0:\"PM\"===l&&\"12\"!==n[r.h]?parseInt(n[r.h],10)+12:Number(n[r.h])),-1!==r.m&&(h.minute=Number(n[r.m])),-1!==r.s&&(h.second=Number(n[r.s])),-1!==r.l&&(h.millisec=Number(n[r.l])),-1!==r.c&&(h.microsec=Number(n[r.c])),-1!==r.z&&void 0!==n[r.z]&&(h.timezone=$.timepicker.timezoneOffsetNumber(n[r.z])),h):!1}),a=function(t,e,i){try{var n=new Date(\"2012-01-01 \"+e);if(isNaN(n.getTime())&&(n=new Date(\"2012-01-01T\"+e),isNaN(n.getTime())&&(n=new Date(\"01/01/2012 \"+e),isNaN(n.getTime()))))throw\"Unable to parse time with native Date: \"+e;return{hour:n.getHours(),minute:n.getMinutes(),second:n.getSeconds(),millisec:n.getMilliseconds(),microsec:n.getMicroseconds(),timezone:-1*n.getTimezoneOffset()}}catch(a){try{return s(t,e,i)}catch(o){$.timepicker.log(\"Unable to parse \\ntimeString: \"+e+\"\\ntimeFormat: \"+t)}}return!1};return\"function\"==typeof n.parse?n.parse(t,e,n):\"loose\"===n.parse?a(t,e,n):s(t,e,n)},$.datepicker.formatTime=function(t,e,i){i=i||{},i=$.extend({},$.timepicker._defaults,i),e=$.extend({hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null},e);var n=t,s=i.amNames[0],a=parseInt(e.hour,10);return a>11&&(s=i.pmNames[0]),n=n.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g,function(t){switch(t){case\"HH\":return(\"0\"+a).slice(-2);case\"H\":return a;case\"hh\":return(\"0\"+convert24to12(a)).slice(-2);case\"h\":return convert24to12(a);case\"mm\":return(\"0\"+e.minute).slice(-2);case\"m\":return e.minute;case\"ss\":return(\"0\"+e.second).slice(-2);case\"s\":return e.second;case\"l\":return(\"00\"+e.millisec).slice(-3);case\"c\":return(\"00\"+e.microsec).slice(-3);case\"z\":return $.timepicker.timezoneOffsetString(null===e.timezone?i.timezone:e.timezone,!1);case\"Z\":return $.timepicker.timezoneOffsetString(null===e.timezone?i.timezone:e.timezone,!0);case\"T\":return s.charAt(0).toUpperCase();case\"TT\":return s.toUpperCase();case\"t\":return s.charAt(0).toLowerCase();case\"tt\":return s.toLowerCase();default:return t.replace(/'/g,\"\")}})},$.datepicker._base_selectDate=$.datepicker._selectDate,$.datepicker._selectDate=function(t,e){var i=this._getInst($(t)[0]),n=this._get(i,\"timepicker\");n?(n._limitMinMaxDateTime(i,!0),i.inline=i.stay_open=!0,this._base_selectDate(t,e),i.inline=i.stay_open=!1,this._notifyChange(i),this._updateDatepicker(i)):this._base_selectDate(t,e)},$.datepicker._base_updateDatepicker=$.datepicker._updateDatepicker,$.datepicker._updateDatepicker=function(t){var e=t.input[0];if(!($.datepicker._curInst&&$.datepicker._curInst!==t&&$.datepicker._datepickerShowing&&$.datepicker._lastInput!==e||\"boolean\"==typeof t.stay_open&&t.stay_open!==!1)){this._base_updateDatepicker(t);var i=this._get(t,\"timepicker\");i&&i._addTimePicker(t)}},$.datepicker._base_doKeyPress=$.datepicker._doKeyPress,$.datepicker._doKeyPress=function(t){var e=$.datepicker._getInst(t.target),i=$.datepicker._get(e,\"timepicker\");if(i&&$.datepicker._get(e,\"constrainInput\")){var n=i.support.ampm,s=null!==i._defaults.showTimezone?i._defaults.showTimezone:i.support.timezone,a=$.datepicker._possibleChars($.datepicker._get(e,\"dateFormat\")),o=i._defaults.timeFormat.toString().replace(/[hms]/g,\"\").replace(/TT/g,n?\"APM\":\"\").replace(/Tt/g,n?\"AaPpMm\":\"\").replace(/tT/g,n?\"AaPpMm\":\"\").replace(/T/g,n?\"AP\":\"\").replace(/tt/g,n?\"apm\":\"\").replace(/t/g,n?\"ap\":\"\")+\" \"+i._defaults.separator+i._defaults.timeSuffix+(s?i._defaults.timezoneList.join(\"\"):\"\")+i._defaults.amNames.join(\"\")+i._defaults.pmNames.join(\"\")+a,r=String.fromCharCode(void 0===t.charCode?t.keyCode:t.charCode);return t.ctrlKey||\" \">r||!a||o.indexOf(r)>-1}return $.datepicker._base_doKeyPress(t)},$.datepicker._base_updateAlternate=$.datepicker._updateAlternate,$.datepicker._updateAlternate=function(t){var e=this._get(t,\"timepicker\");if(e){var i=e._defaults.altField;if(i){var n=(e._defaults.altFormat||e._defaults.dateFormat,this._getDate(t)),s=$.datepicker._getFormatConfig(t),a=\"\",o=e._defaults.altSeparator?e._defaults.altSeparator:e._defaults.separator,r=e._defaults.altTimeSuffix?e._defaults.altTimeSuffix:e._defaults.timeSuffix,l=null!==e._defaults.altTimeFormat?e._defaults.altTimeFormat:e._defaults.timeFormat;a+=$.datepicker.formatTime(l,e,e._defaults)+r,e._defaults.timeOnly||e._defaults.altFieldTimeOnly||null===n||(a=e._defaults.altFormat?$.datepicker.formatDate(e._defaults.altFormat,n,s)+o+a:e.formattedDate+o+a),$(i).val(a)}}else $.datepicker._base_updateAlternate(t)},$.datepicker._base_doKeyUp=$.datepicker._doKeyUp,$.datepicker._doKeyUp=function(t){var e=$.datepicker._getInst(t.target),i=$.datepicker._get(e,\"timepicker\");if(i&&i._defaults.timeOnly&&e.input.val()!==e.lastVal)try{$.datepicker._updateDatepicker(e)}catch(n){$.timepicker.log(n)}return $.datepicker._base_doKeyUp(t)},$.datepicker._base_gotoToday=$.datepicker._gotoToday,$.datepicker._gotoToday=function(t){var e=this._getInst($(t)[0]),i=e.dpDiv;this._base_gotoToday(t);var n=this._get(e,\"timepicker\");selectLocalTimezone(n);var s=new Date;this._setTime(e,s),$(\".ui-datepicker-today\",i).click()},$.datepicker._disableTimepickerDatepicker=function(t){var e=this._getInst(t);if(e){var i=this._get(e,\"timepicker\");$(t).datepicker(\"getDate\"),i&&(e.settings.showTimepicker=!1,i._defaults.showTimepicker=!1,i._updateDateTime(e))}},$.datepicker._enableTimepickerDatepicker=function(t){var e=this._getInst(t);if(e){var i=this._get(e,\"timepicker\");$(t).datepicker(\"getDate\"),i&&(e.settings.showTimepicker=!0,i._defaults.showTimepicker=!0,i._addTimePicker(e),i._updateDateTime(e))}},$.datepicker._setTime=function(t,e){var i=this._get(t,\"timepicker\");if(i){var n=i._defaults;i.hour=e?e.getHours():n.hour,i.minute=e?e.getMinutes():n.minute,i.second=e?e.getSeconds():n.second,i.millisec=e?e.getMilliseconds():n.millisec,i.microsec=e?e.getMicroseconds():n.microsec,i._limitMinMaxDateTime(t,!0),i._onTimeChange(),i._updateDateTime(t)}},$.datepicker._setTimeDatepicker=function(t,e,i){var n=this._getInst(t);if(n){var s=this._get(n,\"timepicker\");if(s){this._setDateFromField(n);var a;e&&(\"string\"==typeof e?(s._parseTime(e,i),a=new Date,a.setHours(s.hour,s.minute,s.second,s.millisec),a.setMicroseconds(s.microsec)):(a=new Date(e.getTime()),a.setMicroseconds(e.getMicroseconds())),\"Invalid Date\"===a.toString()&&(a=void 0),this._setTime(n,a))}}},$.datepicker._base_setDateDatepicker=$.datepicker._setDateDatepicker,$.datepicker._setDateDatepicker=function(t,e){var i=this._getInst(t);if(i){\"string\"==typeof e&&(e=new Date(e),e.getTime()||$.timepicker.log(\"Error creating Date object from string.\"));var n,s=this._get(i,\"timepicker\");e instanceof Date?(n=new Date(e.getTime()),n.setMicroseconds(e.getMicroseconds())):n=e,s&&n&&(s.support.timezone||null!==s._defaults.timezone||(s.timezone=-1*n.getTimezoneOffset()),e=$.timepicker.timezoneAdjust(e,s.timezone),n=$.timepicker.timezoneAdjust(n,s.timezone)),this._updateDatepicker(i),this._base_setDateDatepicker.apply(this,arguments),this._setTimeDatepicker(t,n,!0)}},$.datepicker._base_getDateDatepicker=$.datepicker._getDateDatepicker,$.datepicker._getDateDatepicker=function(t,e){var i=this._getInst(t);if(i){var n=this._get(i,\"timepicker\");if(n){void 0===i.lastVal&&this._setDateFromField(i,e);var s=this._getDate(i);return s&&n._parseTime($(t).val(),n.timeOnly)&&(s.setHours(n.hour,n.minute,n.second,n.millisec),s.setMicroseconds(n.microsec),null!=n.timezone&&(n.support.timezone||null!==n._defaults.timezone||(n.timezone=-1*s.getTimezoneOffset()),s=$.timepicker.timezoneAdjust(s,n.timezone))),s\n}return this._base_getDateDatepicker(t,e)}},$.datepicker._base_parseDate=$.datepicker.parseDate,$.datepicker.parseDate=function(t,e,i){var n;try{n=this._base_parseDate(t,e,i)}catch(s){if(!(s.indexOf(\":\")>=0))throw s;n=this._base_parseDate(t,e.substring(0,e.length-(s.length-s.indexOf(\":\")-2)),i),$.timepicker.log(\"Error parsing the date string: \"+s+\"\\ndate string = \"+e+\"\\ndate format = \"+t)}return n},$.datepicker._base_formatDate=$.datepicker._formatDate,$.datepicker._formatDate=function(t){var e=this._get(t,\"timepicker\");return e?(e._updateDateTime(t),e.$input.val()):this._base_formatDate(t)},$.datepicker._base_optionDatepicker=$.datepicker._optionDatepicker,$.datepicker._optionDatepicker=function(t,e,i){var n,s=this._getInst(t);if(!s)return null;var a=this._get(s,\"timepicker\");if(a){var o,r=null,l=null,h=null,u=a._defaults.evnts,c={};if(\"string\"==typeof e){if(\"minDate\"===e||\"minDateTime\"===e)r=i;else if(\"maxDate\"===e||\"maxDateTime\"===e)l=i;else if(\"onSelect\"===e)h=i;else if(u.hasOwnProperty(e)){if(\"undefined\"==typeof i)return u[e];c[e]=i,n={}}}else if(\"object\"==typeof e){e.minDate?r=e.minDate:e.minDateTime?r=e.minDateTime:e.maxDate?l=e.maxDate:e.maxDateTime&&(l=e.maxDateTime);for(o in u)u.hasOwnProperty(o)&&e[o]&&(c[o]=e[o])}for(o in c)c.hasOwnProperty(o)&&(u[o]=c[o],n||(n=$.extend({},e)),delete n[o]);if(n&&isEmptyObject(n))return;r?(r=0===r?new Date:new Date(r),a._defaults.minDate=r,a._defaults.minDateTime=r):l?(l=0===l?new Date:new Date(l),a._defaults.maxDate=l,a._defaults.maxDateTime=l):h&&(a._defaults.onSelect=h)}return void 0===i?this._base_optionDatepicker.call($.datepicker,t,e):this._base_optionDatepicker.call($.datepicker,t,n||e,i)};var isEmptyObject=function(t){var e;for(e in t)if(t.hasOwnProperty(e))return!1;return!0},extendRemove=function(t,e){$.extend(t,e);for(var i in e)(null===e[i]||void 0===e[i])&&(t[i]=e[i]);return t},detectSupport=function(t){var e=t.replace(/'.*?'/g,\"\").toLowerCase(),i=function(t,e){return-1!==t.indexOf(e)?!0:!1};return{hour:i(e,\"h\"),minute:i(e,\"m\"),second:i(e,\"s\"),millisec:i(e,\"l\"),microsec:i(e,\"c\"),timezone:i(e,\"z\"),ampm:i(e,\"t\")&&i(t,\"h\"),iso8601:i(t,\"Z\")}},convert24to12=function(t){return t%=12,0===t&&(t=12),String(t)},computeEffectiveSetting=function(t,e){return t&&t[e]?t[e]:$.timepicker._defaults[e]},splitDateTime=function(t,e){var i=computeEffectiveSetting(e,\"separator\"),n=computeEffectiveSetting(e,\"timeFormat\"),s=n.split(i),a=s.length,o=t.split(i),r=o.length;return r>1?{dateString:o.splice(0,r-a).join(i),timeString:o.splice(0,a).join(i)}:{dateString:t,timeString:\"\"}},parseDateTimeInternal=function(t,e,i,n,s){var a,o,r;if(o=splitDateTime(i,s),a=$.datepicker._base_parseDate(t,o.dateString,n),\"\"===o.timeString)return{date:a};if(r=$.datepicker.parseTime(e,o.timeString,s),!r)throw\"Wrong time format\";return{date:a,timeObj:r}},selectLocalTimezone=function(t,e){if(t&&t.timezone_select){var i=e||new Date;t.timezone_select.val(-i.getTimezoneOffset())}};$.timepicker=new Timepicker,$.timepicker.timezoneOffsetString=function(t,e){if(isNaN(t)||t>840||-720>t)return t;var i=t,n=i%60,s=(i-n)/60,a=e?\":\":\"\",o=(i>=0?\"+\":\"-\")+(\"0\"+Math.abs(s)).slice(-2)+a+(\"0\"+Math.abs(n)).slice(-2);return\"+00:00\"===o?\"Z\":o},$.timepicker.timezoneOffsetNumber=function(t){var e=t.toString().replace(\":\",\"\");return\"Z\"===e.toUpperCase()?0:/^(\\-|\\+)\\d{4}$/.test(e)?(\"-\"===e.substr(0,1)?-1:1)*(60*parseInt(e.substr(1,2),10)+parseInt(e.substr(3,2),10)):t},$.timepicker.timezoneAdjust=function(t,e){var i=$.timepicker.timezoneOffsetNumber(e);return isNaN(i)||t.setMinutes(t.getMinutes()+-t.getTimezoneOffset()-i),t},$.timepicker.timeRange=function(t,e,i){return $.timepicker.handleRange(\"timepicker\",t,e,i)},$.timepicker.datetimeRange=function(t,e,i){$.timepicker.handleRange(\"datetimepicker\",t,e,i)},$.timepicker.dateRange=function(t,e,i){$.timepicker.handleRange(\"datepicker\",t,e,i)},$.timepicker.handleRange=function(t,e,i,n){function s(s,a){var o=e[t](\"getDate\"),r=i[t](\"getDate\"),l=s[t](\"getDate\");if(null!==o){var h=new Date(o.getTime()),u=new Date(o.getTime());h.setMilliseconds(h.getMilliseconds()+n.minInterval),u.setMilliseconds(u.getMilliseconds()+n.maxInterval),n.minInterval>0&&h>r?i[t](\"setDate\",h):n.maxInterval>0&&r>u?i[t](\"setDate\",u):o>r&&a[t](\"setDate\",l)}}function a(e,i,s){if(e.val()){var a=e[t].call(e,\"getDate\");null!==a&&n.minInterval>0&&(\"minDate\"===s&&a.setMilliseconds(a.getMilliseconds()+n.minInterval),\"maxDate\"===s&&a.setMilliseconds(a.getMilliseconds()-n.minInterval)),a.getTime&&i[t].call(i,\"option\",s,a)}}return n=$.extend({},{minInterval:0,maxInterval:0,start:{},end:{}},n),$.fn[t].call(e,$.extend({onClose:function(){s($(this),i)},onSelect:function(){a($(this),i,\"minDate\")}},n,n.start)),$.fn[t].call(i,$.extend({onClose:function(){s($(this),e)},onSelect:function(){a($(this),e,\"maxDate\")}},n,n.end)),s(e,i),a(e,i,\"minDate\"),a(i,e,\"maxDate\"),$([e.get(0),i.get(0)])},$.timepicker.log=function(t){window.console&&window.console.log(t)},$.timepicker._util={_extendRemove:extendRemove,_isEmptyObject:isEmptyObject,_convert24to12:convert24to12,_detectSupport:detectSupport,_selectLocalTimezone:selectLocalTimezone,_computeEffectiveSetting:computeEffectiveSetting,_splitDateTime:splitDateTime,_parseDateTimeInternal:parseDateTimeInternal},Date.prototype.getMicroseconds||(Date.prototype.microseconds=0,Date.prototype.getMicroseconds=function(){return this.microseconds},Date.prototype.setMicroseconds=function(t){return this.setMilliseconds(this.getMilliseconds()+Math.floor(t/1e3)),this.microseconds=t%1e3,this}),$.timepicker.version=\"1.4.3\"}}(jQuery),define(\"lib.jquery-ui.timepicker\",function(){})});\n","/*\r\n * Date Format 1.2.3\r\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\r\n * MIT license\r\n *\r\n * Includes enhancements by Scott Trenda <scott.trenda.net>\r\n * and Kris Kowal <cixar.com/~kris.kowal/>\r\n *\r\n * Accepts a date, a mask, or a date and a mask.\r\n * Returns a formatted version of the given date.\r\n * The date defaults to the current date/time.\r\n * The mask defaults to dateFormat.masks.default.\r\n */\r\n\r\nvar dateFormat = function () {\r\n    var\ttoken = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZ]|\"[^\"]*\"|'[^']*'/g,\r\n        timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\r\n        timezoneClip = /[^-+\\dA-Z]/g,\r\n        pad = function (val, len) {\r\n            val = String(val);\r\n            len = len || 2;\r\n            while (val.length < len) val = \"0\" + val;\r\n            return val;\r\n        };\r\n\r\n    // Regexes and supporting functions are cached through closure\r\n    return function (date, mask, utc) {\r\n        var dF = dateFormat;\r\n\r\n        // You can't provide utc if you skip other args (use the \"UTC:\" mask prefix)\r\n        if (arguments.length == 1 && Object.prototype.toString.call(date) == \"[object String]\" && !/\\d/.test(date)) {\r\n            mask = date;\r\n            date = undefined;\r\n        }\r\n\r\n        // Passing date through Date applies Date.parse, if necessary\r\n        date = date ? new Date(date) : new Date;\r\n        if (isNaN(date)) throw SyntaxError(\"invalid date\");\r\n\r\n        mask = String(dF.masks[mask] || mask || dF.masks[\"default\"]);\r\n\r\n        // Allow setting the utc argument via the mask\r\n        if (mask.slice(0, 4) == \"UTC:\") {\r\n            mask = mask.slice(4);\r\n            utc = true;\r\n        }\r\n\r\n        var\t_ = utc ? \"getUTC\" : \"get\",\r\n            d = date[_ + \"Date\"](),\r\n            D = date[_ + \"Day\"](),\r\n            m = date[_ + \"Month\"](),\r\n            y = date[_ + \"FullYear\"](),\r\n            H = date[_ + \"Hours\"](),\r\n            M = date[_ + \"Minutes\"](),\r\n            s = date[_ + \"Seconds\"](),\r\n            L = date[_ + \"Milliseconds\"](),\r\n            o = utc ? 0 : date.getTimezoneOffset(),\r\n            flags = {\r\n                d:    d,\r\n                dd:   pad(d),\r\n                ddd:  dF.i18n.dayNames[D],\r\n                dddd: dF.i18n.dayNames[D + 7],\r\n                m:    m + 1,\r\n                mm:   pad(m + 1),\r\n                mmm:  dF.i18n.monthNames[m],\r\n                mmmm: dF.i18n.monthNames[m + 12],\r\n                yy:   String(y).slice(2),\r\n                yyyy: y,\r\n                h:    H % 12 || 12,\r\n                hh:   pad(H % 12 || 12),\r\n                H:    H,\r\n                HH:   pad(H),\r\n                M:    M,\r\n                MM:   pad(M),\r\n                s:    s,\r\n                ss:   pad(s),\r\n                l:    pad(L, 3),\r\n                L:    pad(L > 99 ? Math.round(L / 10) : L),\r\n                t:    H < 12 ? \"a\"  : \"p\",\r\n                tt:   H < 12 ? \"am\" : \"pm\",\r\n                T:    H < 12 ? \"A\"  : \"P\",\r\n                TT:   H < 12 ? \"AM\" : \"PM\",\r\n                Z:    utc ? \"UTC\" : (String(date).match(timezone) || [\"\"]).pop().replace(timezoneClip, \"\"),\r\n                o:    (o > 0 ? \"-\" : \"+\") + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\r\n                S:    [\"th\", \"st\", \"nd\", \"rd\"][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10]\r\n            };\r\n\r\n        return mask.replace(token, function ($0) {\r\n            return $0 in flags ? flags[$0] : $0.slice(1, $0.length - 1);\r\n        });\r\n    };\r\n}();\r\n\r\n// Some common format strings\r\ndateFormat.masks = {\r\n    \"default\":      \"ddd mmm dd yyyy HH:MM:ss\",\r\n    shortDate:      \"m/d/yy\",\r\n    mediumDate:     \"mmm d, yyyy\",\r\n    longDate:       \"mmmm d, yyyy\",\r\n    fullDate:       \"dddd, mmmm d, yyyy\",\r\n    shortTime:      \"h:MM TT\",\r\n    mediumTime:     \"h:MM:ss TT\",\r\n    longTime:       \"h:MM:ss TT Z\",\r\n    isoDate:        \"yyyy-mm-dd\",\r\n    isoTime:        \"HH:MM:ss\",\r\n    isoDateTime:    \"yyyy-mm-dd'T'HH:MM:ss\",\r\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\"\r\n};\r\n\r\n// Internationalization strings\r\ndateFormat.i18n = {\r\n    dayNames: [\r\n        \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\",\r\n        \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n    ],\r\n    monthNames: [\r\n        \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\",\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ]\r\n};\r\n\r\n// For convenience...\r\nDate.prototype.format = function (mask, utc) {\r\n    return dateFormat(this, mask, utc);\r\n};\r\n\ndefine(\"dnsmon.lib.date-format\", function(){});\n\n","define('dnsmon.env.utils',[\n    \"dnsmon.lib.date-format\"\n], function(){\n    var locale;\n\n    locale = {};\n    /**\n     * A collection of utilities\n     */\n\n    return {\n\n        addMinutes: function (date, minutes) {\n            return new Date(date.getTime() + (minutes * 60 * 1000));\n        },\n\n        subMinutes: function (date, minutes) {\n            return new Date(date.getTime() - (minutes * 60 * 1000));\n        },\n\n        translate: function (pointsArray, vector) {\n            var item, translatedArray;\n\n            translatedArray = [];\n\n            for (var n = 0, length = pointsArray.length; n < length; n++) {\n                item = pointsArray[n];\n                translatedArray.push({x: item.x + vector.x, y: item.y + vector.y});\n            }\n            return translatedArray;\n        },\n\n        computeColorScale: function (legend) {\n            var mapOut, legendItem;\n\n            mapOut = {valueRange: [], colorRange: []};\n\n            for (var n = 0, length = legend.length; n < length; n++) {\n                legendItem = legend[n];\n\n                mapOut.valueRange = mapOut.valueRange.concat(legendItem.valueRange);\n                mapOut.colorRange = mapOut.colorRange.concat(legendItem.colorRange);\n            }\n            return mapOut;\n        },\n\n        getLongestString: function (arrayOfStrings) {\n            var maximum, item;\n\n            maximum = -Infinity;\n            for (var n = 0, length = arrayOfStrings.length; n < length; n++) {\n                item = arrayOfStrings[n].length;\n\n                if (maximum < item) {\n                    maximum = item;\n                }\n            }\n\n            return maximum;\n        },\n\n        writeSvgText: function (container, textArray, position, padding) {\n            var textItem, actualPosition, interline, text;\n\n            actualPosition = 0;\n            interline = 15;\n\n            container\n                .selectAll(\"text\")\n                .remove();\n\n            for (var n = 0, length = textArray.length; n < length; n++) {\n                textItem = textArray[n];\n\n                actualPosition = interline * n;\n\n                container\n                    .append(\"text\")\n                    .attr(\"class\", \"popup-text\")\n                    .attr(\"dx\", position.x + padding.left)\n                    .attr(\"dy\", position.y + actualPosition + padding.top)\n                    .text(textItem);\n            }\n\n            return text;\n        },\n\n        lightClone: function (toBeCloned) {\n            var cloned, isArray;\n\n            isArray = toBeCloned instanceof Array;\n\n            if (isArray) {\n                cloned = [];\n\n                for (var n = 0, length = toBeCloned.length; n < length; n++) {\n                    cloned.push(toBeCloned[n]);\n                }\n\n            } else {\n                cloned = {};\n\n                for (var item in toBeCloned) {\n                    cloned[item] = toBeCloned[item];\n                }\n            }\n\n            return cloned;\n        },\n\n        log: function (text, debug) {\n            if (debug) {\n                console.log(new Date(), text);\n            }\n        },\n\n        getUrlParam: function (key) {\n            var regex, result, match, url;\n            url = document.location.search;\n            regex = new RegExp('(?:\\\\?|&)' + key + '=(.*?)(?=&|$)', 'gi');\n            result = [];\n\n            while ((match = regex.exec(url)) != null) {\n                result.push(match[1]);\n            }\n            return result;\n        },\n\n        indexOf: function (element, array) {\n            var index = -1;\n\n            if (array.indexOf) {\n                index = array.indexOf(element);\n            } else {\n\n                for (var n = 0, length = array.length; n < length; n++) {\n                    if (array[n] == element) {\n                        index = n;\n                        break;\n                    }\n                }\n            }\n            return index;\n        },\n\n        encapsulateDom: function (jQuerySelection) {\n            return {$: jQuerySelection, plain: jQuerySelection[0]};\n        },\n\n        loadStylesheets: function (cssFiles, callback) {\n            var cssRequested, stylesLoaded, cssListenerInterval, cssListenerTimeout, cssListener;\n\n            stylesLoaded = document.styleSheets.length; // Initial css loaded\n            cssRequested = cssFiles.length; // css to load\n\n            for (var n=0; n<cssRequested; n++){ // load css\n                this.loadCss(cssFiles[n]);\n            }\n\n            cssListenerInterval = 50; //50 ms\n            cssListenerTimeout = 10000; // 10 secs\n            cssListener = setInterval(function(){\n\n                if(document.styleSheets.length >= stylesLoaded + cssRequested){ // check if all the css are loaded\n                    clearInterval(cssListener);\n                    callback();\n                }else{\n                    if (cssListenerTimeout <= 0){\n                        clearInterval(cssListener);\n                        console.log(\"It is not possible to load stylesheets.\");\n                    }\n                    cssListenerTimeout -= cssListenerInterval;\n                }\n            }, cssListenerInterval);\n        },\n\n        loadCss: function (cssFile) {\n            var newLink;\n\n            newLink = document.createElement('link');\n            newLink.rel = 'stylesheet';\n            newLink.type = 'text/css';\n            newLink.href = cssFile;\n            newLink.async = true;\n            (document.head || document.getElementsByTagName(\"head\")[0]).appendChild(newLink);\n        },\n\n        getRectangularVertexPoints: function (x, y, width, height) {\n            var leftTop, leftBottom, rightTop, rightBottom;\n\n            leftTop = {x: x, y: y};\n            leftBottom = {x: x, y: y + height};\n\n            rightTop = {x: x + width, y: y};\n            rightBottom = {x: x + width, y: y + height};\n\n            return [leftTop, rightTop, rightBottom, leftBottom]; //returned clockwise\n        },\n\n        isThereAnIntersection: function (selectionVertices, cellVertices) {\n            var a, b, c, d, e, f, g, h, thereIsAnIntersection, cellCenter, isSelectionStartingInARect, isSelectionEndingInARect,\n                intersectionPoint;\n\n            a = selectionVertices[0];\n            b = selectionVertices[1];\n            c = selectionVertices[2];\n            d = selectionVertices[3];\n\n            e = cellVertices[0];\n            f = cellVertices[1];\n            g = cellVertices[2];\n            h = cellVertices[3];\n\n            intersectionPoint = this.getLinesIntersection(a, b, e, h);\n\n            function isPointInside(a, b, c, d, p) {\n                return p.x >= a.x && p.x <= b.x && p.y >= a.y && p.y <= d.y;\n            }\n\n            // Don't declare the single items in dedicated vars in order to calculate them only if needed\n            thereIsAnIntersection =\n                isPointInside(e, f, g, h, a) || //Is It starting in a rect?\n                isPointInside(a, b, c, d, this.getRectangleCenter(e, f, g, h)) ||\n                isPointInside(a, b, c, d, e) ||\n                isPointInside(a, b, c, d, h) ||\n                isPointInside(a, b, c, d, g) ||\n                isPointInside(a, b, c, d, f) ||\n                isPointInside(e, f, g, h, c) || //Is it ending in a rect?\n                (intersectionPoint != null);\n\n            return thereIsAnIntersection;\n        },\n\n        getLinesIntersection: function (a, b, c, d) {\n\n            /// \"unroll\" the objects\n            var p0x = a.x,\n                p0y = a.y,\n                p1x = b.x,\n                p1y = b.y,\n                p2x = c.x,\n                p2y = c.y,\n                p3x = d.x,\n                p3y = d.y,\n\n            /// calc difference between the coords\n                d1x = p1x - p0x,\n                d1y = p1y - p0y,\n                d2x = p3x - p2x,\n                d2y = p3y - p2y,\n\n            /// determinator\n                d = d1x * d2y - d2x * d1y,\n\n                px, py,\n                s, t;\n\n            /// if is not intersecting/is parallel then return immediately\n            if (d == 0.0)\n                return null;\n\n            /// solve x and y for intersecting point\n            px = p0x - p2x;\n            py = p0y - p2y;\n\n            s = (d1x * py - d1y * px) / d;\n            if (s >= 0 && s <= 1) {\n\n                /// if s was in range, calc t\n                t = (d2x * py - d2y * px) / d;\n                if (t >= 0 && t <= 1) {\n\n                    return {x: p0x + (t * d1x),\n                        y: p0y + (t * d1y)}\n                }\n            }\n\n            return null;\n        },\n\n        getRectangleCenter: function (a, b, c, d) {\n            var x, y;\n            x = ((b.x - a.x) / 2) + a.x;\n            y = ((d.y - a.y) / 2) + a.y;\n\n            return {x: x, y: y};\n        },\n\n        join: function (array, char) {\n            var stringOut = \"\";\n            if (array.join) {\n                stringOut = array.join(char);\n            } else {\n\n                for (var n = 0, length = array.length; n < length; n++) {\n                    stringOut += array[n];\n                    if (n != length - 1) {\n                        stringOut += '' + char;\n                    }\n                }\n            }\n\n            return stringOut;\n        },\n\n        split: function (string, char, skipEmpty) {\n            var arrayOut, item, tmp;\n\n            arrayOut = string.split(char);\n\n            if (skipEmpty) {\n\n                tmp = [];\n\n                for (var n = 0, length = arrayOut.length; n < length; n++) {\n                    item = arrayOut[n];\n                    if (item != '') {\n                        tmp.push(item);\n                    }\n                }\n\n                arrayOut = tmp;\n            }\n\n            return arrayOut;\n        },\n\n        logOnce: function (log) {\n            if (!window.once) {\n                window.once = true;\n                this.log(log);\n            }\n        },\n\n        reduceCalls: function (reductionId, reductionFactor) {\n            var callNow;\n            callNow = false;\n            if (!window.reductionCallsCounters) {\n                window.reductionCallsCounters = {};\n            }\n\n            if (window.reductionCallsCounters[reductionId] == null) {\n                window.reductionCallsCounters[reductionId] = reductionFactor;\n            }\n\n            if (window.reductionCallsCounters[reductionId] == 0) {\n                callNow = true;\n                window.reductionCallsCounters[reductionId] = reductionFactor\n            } else {\n                window.reductionCallsCounters[reductionId]--;\n            }\n\n            return callNow;\n        },\n\n        timestampToUTCDate: function (timestamp) {\n            var date = new Date(timestamp * 1000);\n            return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n        },\n\n        getInstanceSuffix: function (domName) {\n            var suffix;\n\n            suffix = domName.replace('.', '');\n            suffix = suffix.replace('#', '');\n\n            return suffix;\n        },\n\n        getUrlParameters: function (domName) { // Get a map composed of ALL the parameters\n            var map, suffix, parts, subElements, atLeastOne;\n\n            map = {};\n            atLeastOne = false;\n            suffix = this.getInstanceSuffix(domName) + '.';\n            parts = window.location.search.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n\n                key = key.toString().replace(suffix, ''); // Creates the map removing the suffix\n\n                if (key.indexOf('.') != -1) {\n                    subElements = key.split('.');\n                    if (!map[subElements[0]]) {\n                        map[subElements[0]] = {};\n                    }\n                    map[subElements[0]][subElements[1]] = value;\n                } else {\n                    map[key] = value;\n                }\n\n                atLeastOne = true;\n            });\n\n            return (atLeastOne) ? map : null;\n        },\n\n        mergeMaps: function (map1, map2) {\n            var mapOut;\n\n            mapOut = {};\n\n            for (var key in map1) {\n                mapOut[key] = map1[key];\n            }\n\n            for (var key in map2) {\n                mapOut[key] = map2[key];\n            }\n\n            return mapOut;\n        },\n\n        isNumber: function (n) {\n            return !isNaN(parseFloat(n)) && isFinite(n);\n        },\n\n        dateToString: function (date) { //This is an indirection, may be useful in the future to manipulate dates\n            return \"\" + date.getUTCFullYear() +\n                \"-\" + ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n                \"-\" + ('0' + date.getUTCDate()).slice(-2) +\n                \" \" + ('0' + date.getUTCHours()).slice(-2) +\n                \":\" + ('0' + date.getUTCMinutes()).slice(-2) +\n                \":\" + ('0' + date.getUTCSeconds()).slice(-2) +\n                \" UTC\";\n        },\n\n        dateToStringShort: function (date) { //This is an indirection, may be useful in the future to manipulate dates\n            return \"\" + date.getUTCFullYear() +\n                \"-\" + ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n                \"-\" + ('0' + date.getUTCDate()).slice(-2) +\n                \" \" + ('0' + date.getUTCHours()).slice(-2) +\n                \":\" + ('0' + date.getUTCMinutes()).slice(-2);\n        },\n\n        timestampToLocalDate: function (timestamp) {\n            var date;\n            date = new Date(timestamp * 1000);\n            return date;\n        },\n\n        localDateToUTCDate: function (date) {\n            var utcDate;\n\n            utcDate = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\n            return utcDate;\n        },\n\n        UTCDateToLocalDate: function (date) {\n            return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()));\n        },\n\n        dateToUTCTimestamp: function (date) {\n            return Math.ceil(date.getTime() / 1000);\n//            return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(),  date.getHours(), date.getMinutes(), date.getSeconds())).getTime()/1000;\n        },\n\n        callCallbacks: function (list, parameters) {\n            var item;\n\n            for (var n = 0, length = list.length; n < length; n++) {\n                item = list[n];\n                item.call(this, parameters);\n            }\n        },\n\n        getCurrentUrl: function () {\n            return window.location.href;\n        },\n\n        setParam: function (key, value, url) {\n            var baseUrl, paramsUrl, pair, query, pairs, keyTmp, valueTmp, newPairs, inserted, questionMarkPosition,\n                itemUrl, hash;\n\n            hash = window.location.hash || \"\";\n            newPairs = [];\n            inserted = false;\n\n            url = url.replace(hash, \"\"); // Remove hash\n\n            if (url) {\n                questionMarkPosition = url.indexOf('?');\n                if (questionMarkPosition == -1) {\n                    baseUrl = url;\n                    paramsUrl = '';\n                } else {\n                    baseUrl = url.substring(0, questionMarkPosition);\n                    paramsUrl = url.substring(questionMarkPosition + 1, url.length);\n                }\n            } else {\n                baseUrl = '';\n                paramsUrl = '';\n            }\n\n            pairs = paramsUrl.split('&');\n\n            for (var n = 0, length = pairs.length; n < length; n++) {\n                itemUrl = pairs[n];\n\n                if (itemUrl != \"\") {\n                    pair = (itemUrl).split('=');\n\n                    keyTmp = pair[0];\n                    valueTmp = pair[1];\n\n                    if (keyTmp == key) {\n                        if (value != null && value != '') {\n                            newPairs.push(keyTmp + \"=\" + value);\n                        }\n                        inserted = true;\n                    } else {\n                        newPairs.push(keyTmp + \"=\" + valueTmp);\n                    }\n                }\n            }\n\n            if (!inserted) {\n                if (value != null && value != \"\") {\n                    newPairs.push(key + \"=\" + value);\n                }\n            }\n\n            query = this.join(newPairs, '&');\n\n            return baseUrl + '?' + query + hash;\n        },\n\n\n        containsAll: function (containerArray, containedArray) {\n            var item;\n\n            for (var n = 0, length = containedArray.length; n < length; n++) {\n                item = containedArray[n];\n                if (this.indexOf(item, containerArray) == -1) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        objectSize: function (object) {\n            var recurse, objectList, bytes;\n\n            objectList = [];\n            recurse = function (value) {\n                bytes = 0;\n\n                if (typeof value === 'boolean') {\n                    bytes = 4;\n                } else if (typeof value === 'string') {\n                    bytes = value.length * 2;\n                } else if (typeof value === 'number') {\n                    bytes = 8;\n                } else if (typeof value === 'object'\n                    && objectList.indexOf(value) === -1) {\n                    objectList[objectList.length] = value;\n                    for (i in value) {\n                        bytes += 8;\n                        bytes += recurse(value[i]);\n                    }\n                }\n                return bytes;\n            };\n\n            return recurse(object);\n        },\n\n        removeSubArray: function (mainArray, subArray) {\n            var item, tmp;\n\n            tmp = [];\n            for (var n=0,length=mainArray.length; n<length; n++) {\n                item = mainArray[n];\n                if (subArray.indexOf(item) == -1){\n                    tmp.push(item);\n                }\n            }\n\n            return tmp;\n        },\n\n        validateIP: function(str){\n            var ipv6TestRegEx, ipv4TestRegEx;\n\n            ipv6TestRegEx = /^((?=.*::)(?!.*::.+::)(::)?([\\dA-F]{1,4}:(:|\\b)|){5}|([\\dA-F]{1,4}:){6})((([\\dA-F]{1,4}((?!\\3)::|:\\b|$))|(?!\\2\\3)){2}|(((2[0-4]|1\\d|[1-9])?\\d|25[0-5])\\.?\\b){4})$/;\n            ipv4TestRegEx = /^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$/;\n\n            return ipv4TestRegEx.test(str) || ipv6TestRegEx.test(str);\n\n//            return /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])$|^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/.test(str);\n        },\n\n        isLocalStorageAvailable: function(){\n            try {\n                return 'localStorage' in window && window['localStorage'] !== null;\n            } catch (e) {\n                return false;\n            }\n        },\n\n        getLocalData: function(key){\n            var storedValue, storedExpiration;\n\n            storedValue = localStorage[key];\n            storedExpiration = localStorage['expirationDates-' + key];\n\n            if (storedValue && (!storedExpiration || storedExpiration > (new Date()).getTime())){\n                return storedValue;\n            }\n\n            return null;\n        },\n\n        setLocalData: function(key, data, expiration){\n            try {\n\n                localStorage[key] = data;\n                localStorage['expirationDates-' + key] = expiration.getTime();\n\n            } catch(error) {\n\n                console.log('It was not possible to store the data: ' + error.toString());\n\n                return false;\n            }\n\n            return true;\n        },\n\n\n        globalizeIfUndefined: function(what, where){\n            for (var n=0,length=where.length; n<length; n++){\n                if (typeof window[where[n]] == 'undefined'){\n                    window[where[n]] = what;\n                }\n            }\n        },\n\n\n        getBrowserVersion: function(){\n\n            if (!locale.browser) {\n                locale.browser = (function () {\n                    var userAgent, appName, matched, tem;\n                    userAgent = navigator.userAgent;\n                    appName = navigator.appName;\n                    matched = userAgent.match(/(opera|chrome|safari|firefox|msie|trident|Windows Phone|BlackBerry|Opera Mini|IEMobile|iPhone|iPad|iPod|webOS|Android)\\/?\\s*([\\d\\.]+)/i) || [];\n                    matched = matched[2] ? [matched[1], matched[2]] : [appName, navigator.appVersion, '-?'];\n                    if (matched && (tem = userAgent.match(/version\\/([\\.\\d]+)/i)) != null) matched[2] = tem[1];\n                    return {name: matched[0], version: matched[1].split('.')};\n                })();\n            }\n\n            return locale.browser;\n        },\n\n\n        logErrors: function(callback){\n            if (callback){\n                window.onerror = function errorUnwrapper(errorMsg, url, lineNumber) {\n                    return callback(\"error\", errorMsg + ' at ' + url + ' on line ' + lineNumber);\n                }\n            } else {\n                window.onerror = null;\n            }\n        },\n\n        clearObject: function(objToBeCleaned){\n            for (var objKey in objToBeCleaned){\n                objToBeCleaned[objKey] = null;\n                delete objToBeCleaned[objKey];\n            }\n        },\n\n        htmlEncode: function(html){\n            if (html === undefined || html === null){\n                return html;\n            } else {\n                return html\n                    .replace(/&/g, '&amp;')\n                    .replace(/\"/g, '&quot;')\n                    .replace(/'/g, '&#39;')\n                    .replace(/</g, '&lt;')\n                    .replace(/>/g, '&gt;');\n            }\n        },\n\n        htmlDecode: function(string){\n            return string\n                .replace(/&quot;/g, '\"')\n                .replace(/&#39;/g, \"'\")\n                .replace(/&lt;/g, '<')\n                .replace(/&gt;/g, '>')\n                .replace(/&amp;/g, '&');\n        }\n\n    }\n});\n","/**\n * Created by mcandela on 23/01/14.\n */\n\n\ndefine('dnsmon.env.languages.en',[], function(){\n    return {\n        aggregationLevelLabel: \"Data resolution\",\n//        packetLossRangesLabel: \"Unanswered queries colours range:\",\n        packetLossLabel: \"Unanswered queries\",\n        responseTimeLabel: \"Response time\",\n        forwardTitle: \"Get the latest results\",\n        relativeResponseTimeLabel: \"Relative response time\",\n        viewSelectboxTitle: \"Inspect the same situation from another point of view\",\n        numberProbesLabel: \"Number of probes\",\n        startDateLabel: \"Start date:\",\n        endDateLabel: \"End date:\",\n        changeTimeWindowTitle: \"Change time window\",\n        changeColorsRangeTitle: \"Change colours range\",\n        shiftLeftTitle: \"Shift the time window left\",\n        shiftRightTitle: \"Shift the time window right\",\n        zoomInTitle: \"Zoom in\",\n        zoomOutTitle: \"Zoom out\",\n        closestTracerouteLabel: \"Closest traceroutes before and after the selected cell (enlarge the dialog to compare):\",\n        allRowsTitle: \"Display all rows\",\n        serverLevelLabel: \"server\",\n        zoneLevelLabel: \"zone\",\n        malformedDataset: \"Sorry, malformed input data\",\n        serverSlowMessage: \"Sorry, the server is responding slowly\",\n        connectionFailed: \"Sorry, it is impossible to connect to the server\",\n        lastQueryFails: \"Last query failed; the current visualisation is not up to date\",\n        waitingConnection: \"Waiting for connection\",\n        filtersPopupTitle: \"Filters\",\n        excludeErrorsFilterLabel: \"Exclude errors (exclude rcodes != 0)\",\n\n        pressToApply: \"Press Enter to apply\",\n        extraInfoDialogTitle: \"Result details\",\n\n        keepUpdatedTitle: \"Continually update results\",\n        keepUpdatedNotActive: \"Auto refresh disabled\",\n        keepUpdatedActive: \"Auto refresh enabled\",\n        extraInfoDialogTextSample: \"Data for the selected cell\",\n        extraInfoDialogTextOverview: \"Measurement overview on RIPE Atlas\",\n        minimumTimeSelectionReached: \"Sorry, minimum time window reached\",\n        fromTimeRange: \"From:\",\n        toTimeRange: \"To:\",\n        lastUpdateAt: \"Last update:\",\n        aggregationLevelTitle: \"Data resolution describes the amount of time represented by one cell\",\n        dnsResponsePrbId: \"Probe ID\",\n        dnsResponseRt: \"Response time\",\n        dnsResponseNsId: \"NSID\",\n        dnsResponseDate: \"Date\",\n        notYourConfig: \"This permalink is temporarily overriding your personal configurations\",\n        fullScreenTitle: \"Full screen\",\n\n\n        minimumSelectionImposed: \"Sorry, the selection was too small    \",\n        tooZoomedMessage: \"Sorry, we don't have more details. Try to click on a row's name\",\n        clickToRemoveRow: \"Click on a row's name to exclude it from the displayed results\",\n        bottomInfoSection: \"Use your mouse wheel or click and drag a selection to zoom, press the left/right arrow keys to shift the time window, press the shift key to remove rows from the displayed results\",\n\n        noDataForRow: \"We don't have data for this server in the selected time period\",\n\n        hostBindResponsePrbId: \"Probe ID\",\n        hostBindResponseRt: \"Response time\",\n        hostBindResponseMsmId: \"Measurement ID\",\n        hostBindResponseDate: \"Date\",\n        hostBindResponseNoAnswer: \"The response has no answer\",\n\n        tab1Title: 'DNS response',\n        tab2Title: 'Traceroute',\n        tab3Title: 'hostname.bind',\n\n        thresholdsDescritions: {\n            pls: \"Change the unanswered queries colours range: these thresholds are used to colours the cells based on the percentage of packets lost.\",\n            rtt: \"Change the response time colours range: these thresholds are used to colours the cells based on the response time.\",\n            \"relative-rtt\": \"Change the relative response time colours range: these thresholds are used to colours the cells based on the increase in the response time related to the minimum available for the row.\"\n        },\n\n\n        /*not revised*/\n        filterSelectionTitle: \"Filter the represented data:\",\n\n        protocol3SelectionFilterLabel: \"Layer 3 protocol\",\n        protocol4SelectionFilterLabel: \"Layer 4 protocol\",\n        probesLimitationAlert: \"Only showing the first %f of %o probes\",\n\n        emptyDataset: \"There is no data for this measurement yet. Please, try again later.\"\n    }\n});\n","/**\n * Copyright 2014 - mcandela\n * Date: 11/07/14\n * Time: 11:37\n */\ndefine('dnsmon.lib.jquery-libs-amd',[\"dnsmon.lib.jquery-libs\"], function () {\n    return jQuery.noConflict(true);\n});\n","/**\n * Created by mcandela on 11/12/13.\n */\n\ndefine('dnsmon.env.params-manager',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\"\n], function(utils, $){\n\n    /**\n     * ParamsManager is the only component aware about the translation between external and internal parameters.\n     * It allows to have high-level internal parameters expressed as visualisation terms and external domain related\n     * parameters. This approach allows to easily introduce at any time new \"views\" based on different data elements\n     * using the same graphic metaphor.\n     *\n     * @class ParamsManager\n     * @constructor\n     * @module environment\n     */\n\n    var ParamsManager = function(){\n\n\n        /**\n         * This method merges two parameters vectors\n         *\n         * @method mergeParams\n         * @input {Object} actualParams A vector of parameters\n         * @input {Object} newParams A vector of parameters\n         * @return {Object} A vector of parameters\n         */\n\n        this.mergeParams = function(actualParams, newParams){\n            for (var paramKey in newParams){ // MAP not Array\n                actualParams[paramKey] = newParams[paramKey];\n            }\n\n            return actualParams;\n        };\n\n\n        /**\n         * This method converts the parameters vector from the external to the internal format.\n         * It is an indirection layer able to converts parameters from an external domain to a graphical domain\n         * stopping at the same time the propagation of changes involving the external parameters.\n         *\n         * @method fromExternalToInternal\n         * @input {Object} params A vector of parameters\n         * @return {Object} A vector of parameters\n         */\n\n        this.fromExternalToInternal = function(params){\n            var zone, server, type, startDate, selectedRows, outParams, endDate, zoneName, serverName, typeName,\n                startDateName, endDateName, selectedRowsName, isTcp, ipVersion, isTcpName, ipVersionName, validatorMap,\n                timeWindowName, timeWindow, filterProbesName, filterProbes, measurementId, measurement, maxProbesName,\n                maxProbe;\n\n            zoneName = \"zone\";\n            serverName = \"server\";\n            measurementId = \"msm\";\n            maxProbesName = \"maxProbes\";\n            typeName = \"type\";\n            startDateName = \"startTime\";\n            endDateName = \"endTime\";\n            selectedRowsName = \"selectedRows\";\n            isTcpName = \"isTcp\";\n            ipVersionName = \"ipVersion\";\n            timeWindowName = \"defaultTimeWindow\";\n            filterProbesName = \"filterProbes\";\n\n            validatorMap = {\n                \"zone\": {\n                    type: \"string\",\n                    cast: function(val){\n                        return utils.htmlEncode(val);\n                    }\n                },\n\n                \"server\": {\n                    type: \"string\",\n                    cast: function(val){\n                        return utils.htmlEncode(val);\n                    }\n                },\n\n                \"msm\": {\n                    type: \"number\",\n                    cast: function(val){\n                        return parseInt(val);\n                    }\n                },\n\n                \"maxProbes\": {\n                    type: \"number\",\n                    cast: function(val){\n                        return parseInt(val);\n                    }\n                },\n\n                \"type\": {\n                    type: function(val){ return (val == \"zone-servers\" || val == \"server-probes\" || val == \"server-instances\");},\n                    message: \"The type param can be one of 'zone-servers', 'server-probes' or 'server-instances'\"\n                },\n\n                \"startTime\": {\n                    type: \"number\",\n                    cast: function(val){ return ((typeof val == \"string\") ? parseInt(val) : val); }, // This is a cast for multiple types input\n                    message: \"startTime it is not a valid Unix timestamp\"\n                },\n\n                \"endTime\": {\n                    type: \"number\",\n                    cast: function(val){ return ((typeof val == \"string\") ? parseInt(val) : val); }, // This is a cast for multiple types input\n                    message: \"endTime it is not a valid Unix timestamp\"\n                },\n\n                \"selectedRows\": {\n                    type: \"string\",\n                    cast: function(val){\n                        return utils.htmlEncode(val);\n                    },\n                    message: \"The selectedRows params must be a list of comma-separated ids\"\n                },\n\n                \"ipVersion\": {\n                    type: function(val){ return (val == \"6\" || val == \"4\" || val == \"both\");},\n                    cast: function(val){ return (val == \"6\" || val == \"4\") ? parseInt(val) : \"both\"; }, // This is a cast for multiple types input\n                    message: \"The ipVersion param can be '4', '6' or 'both'\"\n                },\n\n                \"isTcp\": {\n                    type: \"boolean\",\n                    cast: function(val){\n                        return ((typeof val == \"string\") ? (val == \"true\") : val);// This is a cast for multiple types input\n                    }\n                },\n\n                \"filterProbes\": {\n                    type: \"boolean\",\n                    cast: function(val){\n                        return ((typeof val == \"string\") ? (val == \"true\") : val);// This is a cast for multiple types input\n                    }\n                },\n\n                \"defaultTimeWindow\": {\n                    type: function(val){ return (val == \"5h\" || val == \"1d\" || val == \"1w\" || val == \"1m\");},\n                    message: \"The defaultTimeWindow param can be '5h', '1d', '1w', or '1m' or an interval expressed in seconds\"\n                }\n            };\n\n            params = this._helper(validatorMap, params);\n\n            outParams = {};\n\n            zone = params[zoneName];\n            server = params[serverName];\n            measurement = params[measurementId];\n            maxProbes = params[maxProbesName];\n            type = params[typeName];\n            startDate = params[startDateName];\n            endDate = params[endDateName];\n            timeWindow = params[timeWindowName];\n            selectedRows = params[selectedRowsName];\n            filterProbes = params[filterProbesName];\n            isTcp = params[isTcpName];\n            ipVersion = params[ipVersionName];\n\n            if (measurement) {\n                outParams.group = measurement;\n                outParams.root = \"udm\";\n                outParams.isUdm = true;\n            } else {\n                outParams.isUdm = false;\n                if (server) {\n                    outParams.group = this.convertRemoteToLocalId(server);\n                    if (zone) outParams.root = this.convertRemoteToLocalId(zone);\n                } else {\n                    if (zone) outParams.group = this.convertRemoteToLocalId(zone);\n                }\n            }\n\n            if (type) outParams.type = this.convertRemoteToLocalType(type);\n            if (filterProbes != null) outParams.filterProbes = filterProbes;\n            if (maxProbes) outParams.maxProbes = maxProbes;\n            if (startDate) outParams.startDate = this.convertRemoteToLocalDate(startDate);\n            if (endDate) outParams.endDate = this.convertRemoteToLocalDate(endDate);\n\n            if (selectedRows != null) outParams.selectedRows = this.convertRemoteToLocalSelectedRows(selectedRows);\n\n\n            if (ipVersion) outParams.ipVersion = ((ipVersion == 'both') ? null : ipVersion);\n            if (timeWindow) outParams.timeWindow = this.convertRemoteToLocalTimeWindow(timeWindow);\n\n            if (isTcp != null) outParams.isTcp = isTcp;\n\n            return outParams;\n        };\n\n\n        /**\n         * This method converts the parameters vector from the internal to the external format.\n         * It is the opposite of fromExternalToInternal.\n         *\n         * @method fromInternalToExternal\n         * @input {Object} params A vector of parameters\n         * @return {Object} A vector of parameters\n         */\n\n        this.fromInternalToExternal = function(params){\n            var zone, server, outParams, zoneName, serverName, typeName, startDateName, endDateName, selectedRowsName,\n                ipVersionName, isTcpName, timeWindowName, filterProbesName, measurementId, maxProbes;\n\n            zoneName = \"zone\";\n            serverName = \"server\";\n            measurementId = \"msm\";\n            typeName = \"type\";\n            startDateName = \"startTime\";\n            endDateName = \"endTime\";\n            selectedRowsName = \"selectedRows\";\n            ipVersionName = \"ipVersion\";\n            isTcpName = \"isTcp\";\n            timeWindowName = \"timeWindow\";\n            filterProbesName = \"filterProbes\";\n            maxProbes = \"maxProbes\";\n\n            outParams = {};\n\n            outParams[typeName] = this.convertLocalToRemoteType(params.type);\n\n            if (params.root == \"udm\"){\n                outParams[measurementId] = params.group;\n            } else {\n                if (params.type == 'probes') {\n                    outParams[serverName] = (params.group) ? this.convertLocalToRemoteId(params.group) : null;\n                    outParams[zoneName] = this.convertLocalToRemoteId(params.root);\n                } else if (params.type == 'servers') {\n                    outParams[serverName] = null;\n                    outParams[zoneName] = (params.group) ? this.convertLocalToRemoteId(params.group) : null;\n                }\n            }\n\n            outParams[maxProbes] = params.maxProbes;\n            outParams[startDateName] =  (params.startDate) ? this.convertLocalToRemoteDate(params.startDate) : null;\n\n            outParams[endDateName] = (params.endDate)  ? this.convertLocalToRemoteDate(params.endDate) : null;\n            outParams[selectedRowsName] = this.convertLocalToRemoteSelectedRows(params.selectedRows);\n\n            outParams[filterProbesName] = params.filterProbes;\n\n            outParams[timeWindowName] = (params.timeWindow) ? this.convertLocalToRemoteTimeWindow(params.timeWindow) : null;\n\n            outParams[ipVersionName] = params.ipVersion || 'both';\n\n            outParams[isTcpName] = params.isTcp;\n\n            return outParams;\n        };\n\n\n        /**\n         * This method is an input checker for the external parameters.\n         *\n         * @method _helper\n         * @private\n         * @input {Object} validationMap A validation Map composed of types, cast functions and error messages\n         * @input {Object} parameters A vector of parameters\n         * @return {Object} A vector of parameters cased with the cast functions described in the validationMap\n         */\n\n        this._helper = function(validationMap, parameters){\n            var validationItem, validator, messages, value;\n\n            messages = [];\n\n            for (var parameter in parameters){\n\n                validationItem = validationMap[parameter];\n                value = parameters[parameter];\n\n                if (value && validationItem){\n\n                    if (validationItem.cast){\n                        parameters[parameter] = validationItem.cast(value);\n                        value = parameters[parameter];\n                    }\n\n                    validator = (typeof validationItem.type == \"function\") ? validationItem.type : function(val){ return (typeof val == validationItem.type); };\n\n                    if (!validator(value)){\n                        if (validationItem.message){\n                            messages.push(validationItem.message);\n                        }else{\n                            messages.push(parameter + \" must be a \" + validationItem.type);\n                        }\n                    }\n                }\n            }\n\n            if (messages.length > 0){\n                alert(\"Input errors: \" + messages.join(', '));\n            }\n\n            return parameters;\n        };\n\n\n        /**\n         * This method initializes an empty/default vector of parameters\n         *\n         * @method createInternalParamVector\n         * @return {Object} A vector of parameters\n         */\n\n        this.createInternalParamVector = function(){\n            return {\n                startDate: null,\n                endDate : null,\n                type: null,\n                group: null,\n                root: null,\n                selectedRows: [],\n                ipVersion: null,\n                isTcp: null,\n                filterProbes: false,\n                defaultTimeWindow: null\n            };\n        };\n\n\n        /**\n         * This method converts a set of selectedRows from the internal to the external format\n         *\n         * @method convertLocalToRemoteSelectedRows\n         * @input {String} selectedRows An array of rows IDs\n         * @return {String} A string of comma separated rows IDs\n         */\n\n        this.convertLocalToRemoteSelectedRows = function(selectedRows){\n            return (selectedRows.length > 0) ? utils.join($.map(selectedRows, this.convertLocalToRemoteId), ',') : '';\n        };\n\n\n        /**\n         * This method converts a set of selectedRows from the external to the internal format\n         *\n         * @method convertRemoteToLocalSelectedRows\n         * @input {String} selectedRows A string of comma separated rows IDs\n         * @return {Array} An array of rows IDs\n         */\n        this.convertRemoteToLocalSelectedRows = function(selectedRows){\n            return (selectedRows != '') ? $.map(selectedRows.split(','), this.convertRemoteToLocalId) : [];\n        };\n\n\n        /**\n         * This method converts IDs from the external to the internal format\n         *\n         * @method convertRemoteToLocalId\n         * @input {String} remoteId An ID in the external format\n         * @return {String} An ID in the internal format\n         */\n\n        this.convertRemoteToLocalId = function(remoteId){\n            return new String(remoteId)\n                .replace(/\\./g, 'dnsmndt')\n                .replace(/\\:/g, 'dnsmnsmcl');\n        };\n\n\n        /**\n         * This method converts IDs from the internal to the external format\n         *\n         * @method convertLocalToRemoteId\n         * @input {String} remoteId An ID in the internal format\n         * @return {String} An ID in the external format\n         */\n\n        this.convertLocalToRemoteId = function(localId){\n            return new String(localId)\n                .replace(/dnsmndt/g, '.')\n                .replace(/dnsmnsmcl/g, ':');\n        };\n\n\n        /**\n         * This method converts Dates from the internal to the external format\n         *\n         * @method convertLocalToRemoteDate\n         * @input {Date} local A Date object\n         * @return {Number} A Unix timestamp\n         */\n\n        this.convertLocalToRemoteDate = function(local){\n            return (!local) ? null : utils.dateToUTCTimestamp(local);\n        };\n\n\n        /**\n         * This method converts Dates from the external to the internal format\n         *\n         * @method convertRemoteToLocalDate\n         * @input {Date} remote A date object in the external format\n         * @return {Number} A Unix timestamp\n         */\n\n        this.convertRemoteToLocalDate = function(remote){\n            return (!remote) ? null : utils.timestampToLocalDate(remote);\n        };\n\n\n        /**\n         * This method converts Types from the external to the internal format\n         *\n         * @method convertRemoteToLocalType\n         * @input {String} remote A Type in the external format\n         * @return {String} A Type in the internal format\n         */\n\n        this.convertRemoteToLocalType = function(remote){\n            var out;\n\n            switch(remote){\n                case \"zone-servers\":\n                    out = \"servers\";\n                    break;\n\n                case \"server-probes\":\n                    out = \"probes\";\n                    break;\n            }\n\n            return out;\n        };\n\n\n        /**\n         * This method converts types from the internal to the external format\n         *\n         * @method convertLocalToRemoteType\n         * @input {String} local A Type in the internal format\n         * @return {String} A Type in the external format\n         */\n\n        this.convertLocalToRemoteType = function(local){\n            var out;\n\n            switch(local){\n                case \"servers\":\n                    out = \"zone-servers\";\n                    break;\n\n                case \"probes\":\n                    out = \"server-probes\";\n                    break;\n            }\n\n            return out;\n        };\n\n\n        /**\n         * This method converts time windows from the external to the internal format\n         *\n         * @method convertRemoteToLocalTimeWindow\n         * @input {Object} remote A time window can be expressed as a string (i.e. \"5h\", \"1d\", \"1w\", \"1m\") or as an amount of seconds\n         * @return {Number} A time window expressed in seconds\n         */\n\n        this.convertRemoteToLocalTimeWindow = function(remote){\n            var value;\n\n            if (typeof remote == 'string'){\n\n                switch(remote){\n\n                    case \"5h\":\n                        value = 5 * 3600;\n                        break;\n\n                    case \"1d\":\n                        value = 24 * 3600;\n                        break;\n\n                    case \"1w\":\n                        value = 7 * 24 * 3600;\n                        break;\n\n                    case \"1m\":\n                        value = 30 * 24 * 3600;\n                        break;\n                }\n            }else{\n                value = remote;\n            }\n\n            return value; // seconds\n        };\n\n\n        /**\n         * This method converts time windows from the internal to the external format\n         *\n         * @method convertLocalToRemoteTimeWindow\n         * @input {Number} local A time window expressed in seconds\n         * @return {Object} A time window expressed in seconds, in future also strings can be used\n         */\n\n        this.convertLocalToRemoteTimeWindow = function(local){\n            return local; // No conversion\n        }\n\n\n\n    };\n\n    return new ParamsManager(); //singleton\n});\n","define('dnsmon.lib.d3',[], function () {\n    var d3 = {\n        version: \"3.4.1\"\n    };\n    if (!Date.now) Date.now = function () {\n        return +new Date();\n    };\n    var d3_arraySlice = [].slice, d3_array = function (list) {\n        return d3_arraySlice.call(list);\n    };\n    var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;\n    try {\n        d3_array(d3_documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n        d3_array = function (list) {\n            var i = list.length, array = new Array(i);\n            while (i--) array[i] = list[i];\n            return array;\n        };\n    }\n    try {\n        d3_document.createElement(\"div\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n        var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n        d3_element_prototype.setAttribute = function (name, value) {\n            d3_element_setAttribute.call(this, name, value + \"\");\n        };\n        d3_element_prototype.setAttributeNS = function (space, local, value) {\n            d3_element_setAttributeNS.call(this, space, local, value + \"\");\n        };\n        d3_style_prototype.setProperty = function (name, value, priority) {\n            d3_style_setProperty.call(this, name, value + \"\", priority);\n        };\n    }\n    d3.ascending = function (a, b) {\n        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n    };\n    d3.descending = function (a, b) {\n        return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n    };\n    d3.min = function (array, f) {\n        var i = -1, n = array.length, a, b;\n        if (arguments.length === 1) {\n            while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n        } else {\n            while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n        }\n        return a;\n    };\n    d3.max = function (array, f) {\n        var i = -1, n = array.length, a, b;\n        if (arguments.length === 1) {\n            while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n        } else {\n            while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n        }\n        return a;\n    };\n    d3.extent = function (array, f) {\n        var i = -1, n = array.length, a, b, c;\n        if (arguments.length === 1) {\n            while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;\n            while (++i < n) if ((b = array[i]) != null) {\n                if (a > b) a = b;\n                if (c < b) c = b;\n            }\n        } else {\n            while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;\n            while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n                if (a > b) a = b;\n                if (c < b) c = b;\n            }\n        }\n        return [a, c];\n    };\n    d3.sum = function (array, f) {\n        var s = 0, n = array.length, a, i = -1;\n        if (arguments.length === 1) {\n            while (++i < n) if (!isNaN(a = +array[i])) s += a;\n        } else {\n            while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;\n        }\n        return s;\n    };\n    function d3_number(x) {\n        return x != null && !isNaN(x);\n    }\n\n    d3.mean = function (array, f) {\n        var n = array.length, a, m = 0, i = -1, j = 0;\n        if (arguments.length === 1) {\n            while (++i < n) if (d3_number(a = array[i])) m += (a - m) / ++j;\n        } else {\n            while (++i < n) if (d3_number(a = f.call(array, array[i], i))) m += (a - m) / ++j;\n        }\n        return j ? m : undefined;\n    };\n    d3.quantile = function (values, p) {\n        var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n        return e ? v + e * (values[h] - v) : v;\n    };\n    d3.median = function (array, f) {\n        if (arguments.length > 1) array = array.map(f);\n        array = array.filter(d3_number);\n        return array.length ? d3.quantile(array.sort(d3.ascending), .5) : undefined;\n    };\n    d3.bisector = function (f) {\n        return {\n            left: function (a, x, lo, hi) {\n                if (arguments.length < 3) lo = 0;\n                if (arguments.length < 4) hi = a.length;\n                while (lo < hi) {\n                    var mid = lo + hi >>> 1;\n                    if (f.call(a, a[mid], mid) < x) lo = mid + 1; else hi = mid;\n                }\n                return lo;\n            },\n            right: function (a, x, lo, hi) {\n                if (arguments.length < 3) lo = 0;\n                if (arguments.length < 4) hi = a.length;\n                while (lo < hi) {\n                    var mid = lo + hi >>> 1;\n                    if (x < f.call(a, a[mid], mid)) hi = mid; else lo = mid + 1;\n                }\n                return lo;\n            }\n        };\n    };\n    var d3_bisector = d3.bisector(function (d) {\n        return d;\n    });\n    d3.bisectLeft = d3_bisector.left;\n    d3.bisect = d3.bisectRight = d3_bisector.right;\n    d3.shuffle = function (array) {\n        var m = array.length, t, i;\n        while (m) {\n            i = Math.random() * m-- | 0;\n            t = array[m], array[m] = array[i], array[i] = t;\n        }\n        return array;\n    };\n    d3.permute = function (array, indexes) {\n        var i = indexes.length, permutes = new Array(i);\n        while (i--) permutes[i] = array[indexes[i]];\n        return permutes;\n    };\n    d3.pairs = function (array) {\n        var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n        while (i < n) pairs[i] = [p0 = p1, p1 = array[++i]];\n        return pairs;\n    };\n    d3.zip = function () {\n        if (!(n = arguments.length)) return [];\n        for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m;) {\n            for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n;) {\n                zip[j] = arguments[j][i];\n            }\n        }\n        return zips;\n    };\n    function d3_zipLength(d) {\n        return d.length;\n    }\n\n    d3.transpose = function (matrix) {\n        return d3.zip.apply(d3, matrix);\n    };\n    d3.keys = function (map) {\n        var keys = [];\n        for (var key in map) keys.push(key);\n        return keys;\n    };\n    d3.values = function (map) {\n        var values = [];\n        for (var key in map) values.push(map[key]);\n        return values;\n    };\n    d3.entries = function (map) {\n        var entries = [];\n        for (var key in map) entries.push({\n            key: key,\n            value: map[key]\n        });\n        return entries;\n    };\n    d3.merge = function (arrays) {\n        var n = arrays.length, m, i = -1, j = 0, merged, array;\n        while (++i < n) j += arrays[i].length;\n        merged = new Array(j);\n        while (--n >= 0) {\n            array = arrays[n];\n            m = array.length;\n            while (--m >= 0) {\n                merged[--j] = array[m];\n            }\n        }\n        return merged;\n    };\n    var abs = Math.abs;\n    d3.range = function (start, stop, step) {\n        if (arguments.length < 3) {\n            step = 1;\n            if (arguments.length < 2) {\n                stop = start;\n                start = 0;\n            }\n        }\n        if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n        var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n        start *= k, stop *= k, step *= k;\n        if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n        return range;\n    };\n    function d3_range_integerScale(x) {\n        var k = 1;\n        while (x * k % 1) k *= 10;\n        return k;\n    }\n\n    function d3_class(ctor, properties) {\n        try {\n            for (var key in properties) {\n                Object.defineProperty(ctor.prototype, key, {\n                    value: properties[key],\n                    enumerable: false\n                });\n            }\n        } catch (e) {\n            ctor.prototype = properties;\n        }\n    }\n\n    d3.map = function (object) {\n        var map = new d3_Map();\n        if (object instanceof d3_Map) object.forEach(function (key, value) {\n            map.set(key, value);\n        }); else for (var key in object) map.set(key, object[key]);\n        return map;\n    };\n    function d3_Map() {\n    }\n\n    d3_class(d3_Map, {\n        has: d3_map_has,\n        get: function (key) {\n            return this[d3_map_prefix + key];\n        },\n        set: function (key, value) {\n            return this[d3_map_prefix + key] = value;\n        },\n        remove: d3_map_remove,\n        keys: d3_map_keys,\n        values: function () {\n            var values = [];\n            this.forEach(function (key, value) {\n                values.push(value);\n            });\n            return values;\n        },\n        entries: function () {\n            var entries = [];\n            this.forEach(function (key, value) {\n                entries.push({\n                    key: key,\n                    value: value\n                });\n            });\n            return entries;\n        },\n        size: d3_map_size,\n        empty: d3_map_empty,\n        forEach: function (f) {\n            for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);\n        }\n    });\n    var d3_map_prefix = \"\\x00\", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);\n\n    function d3_map_has(key) {\n        return d3_map_prefix + key in this;\n    }\n\n    function d3_map_remove(key) {\n        key = d3_map_prefix + key;\n        return key in this && delete this[key];\n    }\n\n    function d3_map_keys() {\n        var keys = [];\n        this.forEach(function (key) {\n            keys.push(key);\n        });\n        return keys;\n    }\n\n    function d3_map_size() {\n        var size = 0;\n        for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) ++size;\n        return size;\n    }\n\n    function d3_map_empty() {\n        for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) return false;\n        return true;\n    }\n\n    d3.nest = function () {\n        var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\n        function map(mapType, array, depth) {\n            if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n            var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n            while (++i < n) {\n                if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n                    values.push(object);\n                } else {\n                    valuesByKey.set(keyValue, [object]);\n                }\n            }\n            if (mapType) {\n                object = mapType();\n                setter = function (keyValue, values) {\n                    object.set(keyValue, map(mapType, values, depth));\n                };\n            } else {\n                object = {};\n                setter = function (keyValue, values) {\n                    object[keyValue] = map(mapType, values, depth);\n                };\n            }\n            valuesByKey.forEach(setter);\n            return object;\n        }\n\n        function entries(map, depth) {\n            if (depth >= keys.length) return map;\n            var array = [], sortKey = sortKeys[depth++];\n            map.forEach(function (key, keyMap) {\n                array.push({\n                    key: key,\n                    values: entries(keyMap, depth)\n                });\n            });\n            return sortKey ? array.sort(function (a, b) {\n                return sortKey(a.key, b.key);\n            }) : array;\n        }\n\n        nest.map = function (array, mapType) {\n            return map(mapType, array, 0);\n        };\n        nest.entries = function (array) {\n            return entries(map(d3.map, array, 0), 0);\n        };\n        nest.key = function (d) {\n            keys.push(d);\n            return nest;\n        };\n        nest.sortKeys = function (order) {\n            sortKeys[keys.length - 1] = order;\n            return nest;\n        };\n        nest.sortValues = function (order) {\n            sortValues = order;\n            return nest;\n        };\n        nest.rollup = function (f) {\n            rollup = f;\n            return nest;\n        };\n        return nest;\n    };\n    d3.set = function (array) {\n        var set = new d3_Set();\n        if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n        return set;\n    };\n    function d3_Set() {\n    }\n\n    d3_class(d3_Set, {\n        has: d3_map_has,\n        add: function (value) {\n            this[d3_map_prefix + value] = true;\n            return value;\n        },\n        remove: function (value) {\n            value = d3_map_prefix + value;\n            return value in this && delete this[value];\n        },\n        values: d3_map_keys,\n        size: d3_map_size,\n        empty: d3_map_empty,\n        forEach: function (f) {\n            for (var value in this) if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));\n        }\n    });\n    d3.behavior = {};\n    d3.rebind = function (target, source) {\n        var i = 1, n = arguments.length, method;\n        while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n        return target;\n    };\n    function d3_rebind(target, source, method) {\n        return function () {\n            var value = method.apply(source, arguments);\n            return value === source ? target : value;\n        };\n    }\n\n    function d3_vendorSymbol(object, name) {\n        if (name in object) return name;\n        name = name.charAt(0).toUpperCase() + name.substring(1);\n        for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n            var prefixName = d3_vendorPrefixes[i] + name;\n            if (prefixName in object) return prefixName;\n        }\n    }\n\n    var d3_vendorPrefixes = [\"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\"];\n\n    function d3_noop() {\n    }\n\n    d3.dispatch = function () {\n        var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n        while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n        return dispatch;\n    };\n    function d3_dispatch() {\n    }\n\n    d3_dispatch.prototype.on = function (type, listener) {\n        var i = type.indexOf(\".\"), name = \"\";\n        if (i >= 0) {\n            name = type.substring(i + 1);\n            type = type.substring(0, i);\n        }\n        if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n        if (arguments.length === 2) {\n            if (listener == null) for (type in this) {\n                if (this.hasOwnProperty(type)) this[type].on(name, null);\n            }\n            return this;\n        }\n    };\n    function d3_dispatch_event(dispatch) {\n        var listeners = [], listenerByName = new d3_Map();\n\n        function event() {\n            var z = listeners, i = -1, n = z.length, l;\n            while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n            return dispatch;\n        }\n\n        event.on = function (name, listener) {\n            var l = listenerByName.get(name), i;\n            if (arguments.length < 2) return l && l.on;\n            if (l) {\n                l.on = null;\n                listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n                listenerByName.remove(name);\n            }\n            if (listener) listeners.push(listenerByName.set(name, {\n                on: listener\n            }));\n            return dispatch;\n        };\n        return event;\n    }\n\n    d3.event = null;\n    function d3_eventPreventDefault() {\n        d3.event.preventDefault();\n    }\n\n    function d3_eventSource() {\n        var e = d3.event, s;\n        while (s = e.sourceEvent) e = s;\n        return e;\n    }\n\n    function d3_eventDispatch(target) {\n        var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n        while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n        dispatch.of = function (thiz, argumentz) {\n            return function (e1) {\n                try {\n                    var e0 = e1.sourceEvent = d3.event;\n                    e1.target = target;\n                    d3.event = e1;\n                    dispatch[e1.type].apply(thiz, argumentz);\n                } finally {\n                    d3.event = e0;\n                }\n            };\n        };\n        return dispatch;\n    }\n\n    d3.requote = function (s) {\n        return s.replace(d3_requote_re, \"\\\\$&\");\n    };\n    var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n    var d3_subclass = {}.__proto__ ? function (object, prototype) {\n        object.__proto__ = prototype;\n    } : function (object, prototype) {\n        for (var property in prototype) object[property] = prototype[property];\n    };\n\n    function d3_selection(groups) {\n        d3_subclass(groups, d3_selectionPrototype);\n        return groups;\n    }\n\n    var d3_select = function (s, n) {\n        return n.querySelector(s);\n    }, d3_selectAll = function (s, n) {\n        return n.querySelectorAll(s);\n    }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, \"matchesSelector\")], d3_selectMatches = function (n, s) {\n        return d3_selectMatcher.call(n, s);\n    };\n    if (typeof Sizzle === \"function\") {\n        d3_select = function (s, n) {\n            return Sizzle(s, n)[0] || null;\n        };\n        d3_selectAll = function (s, n) {\n            return Sizzle.uniqueSort(Sizzle(s, n));\n        };\n        d3_selectMatches = Sizzle.matchesSelector;\n    }\n    d3.selection = function () {\n        return d3_selectionRoot;\n    };\n    var d3_selectionPrototype = d3.selection.prototype = [];\n    d3_selectionPrototype.select = function (selector) {\n        var subgroups = [], subgroup, subnode, group, node;\n        selector = d3_selection_selector(selector);\n        for (var j = -1, m = this.length; ++j < m;) {\n            subgroups.push(subgroup = []);\n            subgroup.parentNode = (group = this[j]).parentNode;\n            for (var i = -1, n = group.length; ++i < n;) {\n                if (node = group[i]) {\n                    subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n                    if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n                } else {\n                    subgroup.push(null);\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    function d3_selection_selector(selector) {\n        return typeof selector === \"function\" ? selector : function () {\n            return d3_select(selector, this);\n        };\n    }\n\n    d3_selectionPrototype.selectAll = function (selector) {\n        var subgroups = [], subgroup, node;\n        selector = d3_selection_selectorAll(selector);\n        for (var j = -1, m = this.length; ++j < m;) {\n            for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n                if (node = group[i]) {\n                    subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n                    subgroup.parentNode = node;\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    function d3_selection_selectorAll(selector) {\n        return typeof selector === \"function\" ? selector : function () {\n            return d3_selectAll(selector, this);\n        };\n    }\n\n    var d3_nsPrefix = {\n        svg: \"http://www.w3.org/2000/svg\",\n        xhtml: \"http://www.w3.org/1999/xhtml\",\n        xlink: \"http://www.w3.org/1999/xlink\",\n        xml: \"http://www.w3.org/XML/1998/namespace\",\n        xmlns: \"http://www.w3.org/2000/xmlns/\"\n    };\n    d3.ns = {\n        prefix: d3_nsPrefix,\n        qualify: function (name) {\n            var i = name.indexOf(\":\"), prefix = name;\n            if (i >= 0) {\n                prefix = name.substring(0, i);\n                name = name.substring(i + 1);\n            }\n            return d3_nsPrefix.hasOwnProperty(prefix) ? {\n                space: d3_nsPrefix[prefix],\n                local: name\n            } : name;\n        }\n    };\n    d3_selectionPrototype.attr = function (name, value) {\n        if (arguments.length < 2) {\n            if (typeof name === \"string\") {\n                var node = this.node();\n                name = d3.ns.qualify(name);\n                return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n            }\n            for (value in name) this.each(d3_selection_attr(value, name[value]));\n            return this;\n        }\n        return this.each(d3_selection_attr(name, value));\n    };\n    function d3_selection_attr(name, value) {\n        name = d3.ns.qualify(name);\n        function attrNull() {\n            this.removeAttribute(name);\n        }\n\n        function attrNullNS() {\n            this.removeAttributeNS(name.space, name.local);\n        }\n\n        function attrConstant() {\n            this.setAttribute(name, value);\n        }\n\n        function attrConstantNS() {\n            this.setAttributeNS(name.space, name.local, value);\n        }\n\n        function attrFunction() {\n            var x = value.apply(this, arguments);\n            if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n        }\n\n        function attrFunctionNS() {\n            var x = value.apply(this, arguments);\n            if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n        }\n\n        return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n    }\n\n    function d3_collapse(s) {\n        return s.trim().replace(/\\s+/g, \" \");\n    }\n\n    d3_selectionPrototype.classed = function (name, value) {\n        if (arguments.length < 2) {\n            if (typeof name === \"string\") {\n                var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n                if (value = node.classList) {\n                    while (++i < n) if (!value.contains(name[i])) return false;\n                } else {\n                    value = node.getAttribute(\"class\");\n                    while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n                }\n                return true;\n            }\n            for (value in name) this.each(d3_selection_classed(value, name[value]));\n            return this;\n        }\n        return this.each(d3_selection_classed(name, value));\n    };\n    function d3_selection_classedRe(name) {\n        return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n    }\n\n    function d3_selection_classes(name) {\n        return name.trim().split(/^|\\s+/);\n    }\n\n    function d3_selection_classed(name, value) {\n        name = d3_selection_classes(name).map(d3_selection_classedName);\n        var n = name.length;\n\n        function classedConstant() {\n            var i = -1;\n            while (++i < n) name[i](this, value);\n        }\n\n        function classedFunction() {\n            var i = -1, x = value.apply(this, arguments);\n            while (++i < n) name[i](this, x);\n        }\n\n        return typeof value === \"function\" ? classedFunction : classedConstant;\n    }\n\n    function d3_selection_classedName(name) {\n        var re = d3_selection_classedRe(name);\n        return function (node, value) {\n            if (c = node.classList) return value ? c.add(name) : c.remove(name);\n            var c = node.getAttribute(\"class\") || \"\";\n            if (value) {\n                re.lastIndex = 0;\n                if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n            } else {\n                node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n            }\n        };\n    }\n\n    d3_selectionPrototype.style = function (name, value, priority) {\n        var n = arguments.length;\n        if (n < 3) {\n            if (typeof name !== \"string\") {\n                if (n < 2) value = \"\";\n                for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n                return this;\n            }\n            if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);\n            priority = \"\";\n        }\n        return this.each(d3_selection_style(name, value, priority));\n    };\n    function d3_selection_style(name, value, priority) {\n        function styleNull() {\n            this.style.removeProperty(name);\n        }\n\n        function styleConstant() {\n            this.style.setProperty(name, value, priority);\n        }\n\n        function styleFunction() {\n            var x = value.apply(this, arguments);\n            if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n        }\n\n        return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n    }\n\n    d3_selectionPrototype.property = function (name, value) {\n        if (arguments.length < 2) {\n            if (typeof name === \"string\") return this.node()[name];\n            for (value in name) this.each(d3_selection_property(value, name[value]));\n            return this;\n        }\n        return this.each(d3_selection_property(name, value));\n    };\n    function d3_selection_property(name, value) {\n        function propertyNull() {\n            delete this[name];\n        }\n\n        function propertyConstant() {\n            this[name] = value;\n        }\n\n        function propertyFunction() {\n            var x = value.apply(this, arguments);\n            if (x == null) delete this[name]; else this[name] = x;\n        }\n\n        return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n    }\n\n    d3_selectionPrototype.text = function (value) {\n        return arguments.length ? this.each(typeof value === \"function\" ? function () {\n            var v = value.apply(this, arguments);\n            this.textContent = v == null ? \"\" : v;\n        } : value == null ? function () {\n            this.textContent = \"\";\n        } : function () {\n            this.textContent = value;\n        }) : this.node().textContent;\n    };\n    d3_selectionPrototype.html = function (value) {\n        return arguments.length ? this.each(typeof value === \"function\" ? function () {\n            var v = value.apply(this, arguments);\n            this.innerHTML = v == null ? \"\" : v;\n        } : value == null ? function () {\n            this.innerHTML = \"\";\n        } : function () {\n            this.innerHTML = value;\n        }) : this.node().innerHTML;\n    };\n    d3_selectionPrototype.append = function (name) {\n        name = d3_selection_creator(name);\n        return this.select(function () {\n            return this.appendChild(name.apply(this, arguments));\n        });\n    };\n    function d3_selection_creator(name) {\n        return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? function () {\n            return this.ownerDocument.createElementNS(name.space, name.local);\n        } : function () {\n            return this.ownerDocument.createElementNS(this.namespaceURI, name);\n        };\n    }\n\n    d3_selectionPrototype.insert = function (name, before) {\n        name = d3_selection_creator(name);\n        before = d3_selection_selector(before);\n        return this.select(function () {\n            return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n        });\n    };\n    d3_selectionPrototype.remove = function () {\n        return this.each(function () {\n            var parent = this.parentNode;\n            if (parent) parent.removeChild(this);\n        });\n    };\n    d3_selectionPrototype.data = function (value, key) {\n        var i = -1, n = this.length, group, node;\n        if (!arguments.length) {\n            value = new Array(n = (group = this[0]).length);\n            while (++i < n) {\n                if (node = group[i]) {\n                    value[i] = node.__data__;\n                }\n            }\n            return value;\n        }\n        function bind(group, groupData) {\n            var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n            if (key) {\n                var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;\n                for (i = -1; ++i < n;) {\n                    keyValue = key.call(node = group[i], node.__data__, i);\n                    if (nodeByKeyValue.has(keyValue)) {\n                        exitNodes[i] = node;\n                    } else {\n                        nodeByKeyValue.set(keyValue, node);\n                    }\n                    keyValues.push(keyValue);\n                }\n                for (i = -1; ++i < m;) {\n                    keyValue = key.call(groupData, nodeData = groupData[i], i);\n                    if (node = nodeByKeyValue.get(keyValue)) {\n                        updateNodes[i] = node;\n                        node.__data__ = nodeData;\n                    } else if (!dataByKeyValue.has(keyValue)) {\n                        enterNodes[i] = d3_selection_dataNode(nodeData);\n                    }\n                    dataByKeyValue.set(keyValue, nodeData);\n                    nodeByKeyValue.remove(keyValue);\n                }\n                for (i = -1; ++i < n;) {\n                    if (nodeByKeyValue.has(keyValues[i])) {\n                        exitNodes[i] = group[i];\n                    }\n                }\n            } else {\n                for (i = -1; ++i < n0;) {\n                    node = group[i];\n                    nodeData = groupData[i];\n                    if (node) {\n                        node.__data__ = nodeData;\n                        updateNodes[i] = node;\n                    } else {\n                        enterNodes[i] = d3_selection_dataNode(nodeData);\n                    }\n                }\n                for (; i < m; ++i) {\n                    enterNodes[i] = d3_selection_dataNode(groupData[i]);\n                }\n                for (; i < n; ++i) {\n                    exitNodes[i] = group[i];\n                }\n            }\n            enterNodes.update = updateNodes;\n            enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n            enter.push(enterNodes);\n            update.push(updateNodes);\n            exit.push(exitNodes);\n        }\n\n        var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n        if (typeof value === \"function\") {\n            while (++i < n) {\n                bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n            }\n        } else {\n            while (++i < n) {\n                bind(group = this[i], value);\n            }\n        }\n        update.enter = function () {\n            return enter;\n        };\n        update.exit = function () {\n            return exit;\n        };\n        return update;\n    };\n    function d3_selection_dataNode(data) {\n        return {\n            __data__: data\n        };\n    }\n\n    d3_selectionPrototype.datum = function (value) {\n        return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n    };\n    d3_selectionPrototype.filter = function (filter) {\n        var subgroups = [], subgroup, group, node;\n        if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n        for (var j = 0, m = this.length; j < m; j++) {\n            subgroups.push(subgroup = []);\n            subgroup.parentNode = (group = this[j]).parentNode;\n            for (var i = 0, n = group.length; i < n; i++) {\n                if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n                    subgroup.push(node);\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    function d3_selection_filter(selector) {\n        return function () {\n            return d3_selectMatches(this, selector);\n        };\n    }\n\n    d3_selectionPrototype.order = function () {\n        for (var j = -1, m = this.length; ++j < m;) {\n            for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n                if (node = group[i]) {\n                    if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n                    next = node;\n                }\n            }\n        }\n        return this;\n    };\n    d3_selectionPrototype.sort = function (comparator) {\n        comparator = d3_selection_sortComparator.apply(this, arguments);\n        for (var j = -1, m = this.length; ++j < m;) this[j].sort(comparator);\n        return this.order();\n    };\n    function d3_selection_sortComparator(comparator) {\n        if (!arguments.length) comparator = d3.ascending;\n        return function (a, b) {\n            return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n        };\n    }\n\n    d3_selectionPrototype.each = function (callback) {\n        return d3_selection_each(this, function (node, i, j) {\n            callback.call(node, node.__data__, i, j);\n        });\n    };\n    function d3_selection_each(groups, callback) {\n        for (var j = 0, m = groups.length; j < m; j++) {\n            for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n                if (node = group[i]) callback(node, i, j);\n            }\n        }\n        return groups;\n    }\n\n    d3_selectionPrototype.call = function (callback) {\n        var args = d3_array(arguments);\n        callback.apply(args[0] = this, args);\n        return this;\n    };\n    d3_selectionPrototype.empty = function () {\n        return !this.node();\n    };\n    d3_selectionPrototype.node = function () {\n        for (var j = 0, m = this.length; j < m; j++) {\n            for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n                var node = group[i];\n                if (node) return node;\n            }\n        }\n        return null;\n    };\n    d3_selectionPrototype.size = function () {\n        var n = 0;\n        this.each(function () {\n            ++n;\n        });\n        return n;\n    };\n    function d3_selection_enter(selection) {\n        d3_subclass(selection, d3_selection_enterPrototype);\n        return selection;\n    }\n\n    var d3_selection_enterPrototype = [];\n    d3.selection.enter = d3_selection_enter;\n    d3.selection.enter.prototype = d3_selection_enterPrototype;\n    d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n    d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n    d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n    d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n    d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n    d3_selection_enterPrototype.select = function (selector) {\n        var subgroups = [], subgroup, subnode, upgroup, group, node;\n        for (var j = -1, m = this.length; ++j < m;) {\n            upgroup = (group = this[j]).update;\n            subgroups.push(subgroup = []);\n            subgroup.parentNode = group.parentNode;\n            for (var i = -1, n = group.length; ++i < n;) {\n                if (node = group[i]) {\n                    subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n                    subnode.__data__ = node.__data__;\n                } else {\n                    subgroup.push(null);\n                }\n            }\n        }\n        return d3_selection(subgroups);\n    };\n    d3_selection_enterPrototype.insert = function (name, before) {\n        if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n        return d3_selectionPrototype.insert.call(this, name, before);\n    };\n    function d3_selection_enterInsertBefore(enter) {\n        var i0, j0;\n        return function (d, i, j) {\n            var group = enter[j].update, n = group.length, node;\n            if (j != j0) j0 = j, i0 = 0;\n            if (i >= i0) i0 = i + 1;\n            while (!(node = group[i0]) && ++i0 < n) ;\n            return node;\n        };\n    }\n\n    d3_selectionPrototype.transition = function () {\n        var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n                time: Date.now(),\n                ease: d3_ease_cubicInOut,\n                delay: 0,\n                duration: 250\n            };\n        for (var j = -1, m = this.length; ++j < m;) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n                if (node = group[i]) d3_transitionNode(node, i, id, transition);\n                subgroup.push(node);\n            }\n        }\n        return d3_transition(subgroups, id);\n    };\n    d3_selectionPrototype.interrupt = function () {\n        return this.each(d3_selection_interrupt);\n    };\n    function d3_selection_interrupt() {\n        var lock = this.__transition__;\n        if (lock) ++lock.active;\n    }\n\n    d3.select = function (node) {\n        var group = [typeof node === \"string\" ? d3_select(node, d3_document) : node];\n        group.parentNode = d3_documentElement;\n        return d3_selection([group]);\n    };\n    d3.selectAll = function (nodes) {\n        var group = d3_array(typeof nodes === \"string\" ? d3_selectAll(nodes, d3_document) : nodes);\n        group.parentNode = d3_documentElement;\n        return d3_selection([group]);\n    };\n    var d3_selectionRoot = d3.select(d3_documentElement);\n    d3_selectionPrototype.on = function (type, listener, capture) {\n        var n = arguments.length;\n        if (n < 3) {\n            if (typeof type !== \"string\") {\n                if (n < 2) listener = false;\n                for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n                return this;\n            }\n            if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n            capture = false;\n        }\n        return this.each(d3_selection_on(type, listener, capture));\n    };\n    function d3_selection_on(type, listener, capture) {\n        var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n        if (i > 0) type = type.substring(0, i);\n        var filter = d3_selection_onFilters.get(type);\n        if (filter) type = filter, wrap = d3_selection_onFilter;\n        function onRemove() {\n            var l = this[name];\n            if (l) {\n                this.removeEventListener(type, l, l.$);\n                delete this[name];\n            }\n        }\n\n        function onAdd() {\n            var l = wrap(listener, d3_array(arguments));\n            onRemove.call(this);\n            this.addEventListener(type, this[name] = l, l.$ = capture);\n            l._ = listener;\n        }\n\n        function removeAll() {\n            var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n            for (var name in this) {\n                if (match = name.match(re)) {\n                    var l = this[name];\n                    this.removeEventListener(match[1], l, l.$);\n                    delete this[name];\n                }\n            }\n        }\n\n        return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n    }\n\n    var d3_selection_onFilters = d3.map({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\"\n    });\n    d3_selection_onFilters.forEach(function (k) {\n        if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n    function d3_selection_onListener(listener, argumentz) {\n        return function (e) {\n            var o = d3.event;\n            d3.event = e;\n            argumentz[0] = this.__data__;\n            try {\n                listener.apply(this, argumentz);\n            } finally {\n                d3.event = o;\n            }\n        };\n    }\n\n    function d3_selection_onFilter(listener, argumentz) {\n        var l = d3_selection_onListener(listener, argumentz);\n        return function (e) {\n            var target = this, related = e.relatedTarget;\n            if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n                l.call(target, e);\n            }\n        };\n    }\n\n    var d3_event_dragSelect = \"onselectstart\" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, \"userSelect\"), d3_event_dragId = 0;\n\n    function d3_event_dragSuppress() {\n        var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n        if (d3_event_dragSelect) {\n            var style = d3_documentElement.style, select = style[d3_event_dragSelect];\n            style[d3_event_dragSelect] = \"none\";\n        }\n        return function (suppressClick) {\n            w.on(name, null);\n            if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n            if (suppressClick) {\n                function off() {\n                    w.on(click, null);\n                }\n\n                w.on(click, function () {\n                    d3_eventPreventDefault();\n                    off();\n                }, true);\n                setTimeout(off, 0);\n            }\n        };\n    }\n\n    d3.mouse = function (container) {\n        return d3_mousePoint(container, d3_eventSource());\n    };\n    var d3_mouse_bug44083 = /WebKit/.test(d3_window.navigator.userAgent) ? -1 : 0;\n\n    function d3_mousePoint(container, e) {\n        if (e.changedTouches) e = e.changedTouches[0];\n        var svg = container.ownerSVGElement || container;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            if (d3_mouse_bug44083 < 0 && (d3_window.scrollX || d3_window.scrollY)) {\n                svg = d3.select(\"body\").append(\"svg\").style({\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    margin: 0,\n                    padding: 0,\n                    border: \"none\"\n                }, \"important\");\n                var ctm = svg[0][0].getScreenCTM();\n                d3_mouse_bug44083 = !(ctm.f || ctm.e);\n                svg.remove();\n            }\n            if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX,\n                point.y = e.clientY;\n            point = point.matrixTransform(container.getScreenCTM().inverse());\n            return [point.x, point.y];\n        }\n        var rect = container.getBoundingClientRect();\n        return [e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop];\n    }\n\n    d3.touches = function (container, touches) {\n        if (arguments.length < 2) touches = d3_eventSource().touches;\n        return touches ? d3_array(touches).map(function (touch) {\n            var point = d3_mousePoint(container, touch);\n            point.identifier = touch.identifier;\n            return point;\n        }) : [];\n    };\n    d3.behavior.drag = function () {\n        var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, \"mousemove\", \"mouseup\"), touchstart = dragstart(touchid, touchposition, \"touchmove\", \"touchend\");\n\n        function drag() {\n            this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n        }\n\n        function touchid() {\n            return d3.event.changedTouches[0].identifier;\n        }\n\n        function touchposition(parent, id) {\n            return d3.touches(parent).filter(function (p) {\n                return p.identifier === id;\n            })[0];\n        }\n\n        function dragstart(id, position, move, end) {\n            return function () {\n                var target = this, parent = target.parentNode, event_ = event.of(target, arguments), eventTarget = d3.event.target, eventId = id(), drag = eventId == null ? \"drag\" : \"drag-\" + eventId, origin_ = position(parent, eventId), dragged = 0, offset, w = d3.select(d3_window).on(move + \".\" + drag, moved).on(end + \".\" + drag, ended), dragRestore = d3_event_dragSuppress();\n                if (origin) {\n                    offset = origin.apply(target, arguments);\n                    offset = [offset.x - origin_[0], offset.y - origin_[1]];\n                } else {\n                    offset = [0, 0];\n                }\n                event_({\n                    type: \"dragstart\"\n                });\n                function moved() {\n                    var p = position(parent, eventId), dx = p[0] - origin_[0], dy = p[1] - origin_[1];\n                    dragged |= dx | dy;\n                    origin_ = p;\n                    event_({\n                        type: \"drag\",\n                        x: p[0] + offset[0],\n                        y: p[1] + offset[1],\n                        dx: dx,\n                        dy: dy\n                    });\n                }\n\n                function ended() {\n                    w.on(move + \".\" + drag, null).on(end + \".\" + drag, null);\n                    dragRestore(dragged && d3.event.target === eventTarget);\n                    event_({\n                        type: \"dragend\"\n                    });\n                }\n            };\n        }\n\n        drag.origin = function (x) {\n            if (!arguments.length) return origin;\n            origin = x;\n            return drag;\n        };\n        return d3.rebind(drag, event, \"on\");\n    };\n    var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;\n\n    function d3_sgn(x) {\n        return x > 0 ? 1 : x < 0 ? -1 : 0;\n    }\n\n    function d3_cross2d(a, b, c) {\n        return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n    }\n\n    function d3_acos(x) {\n        return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n    }\n\n    function d3_asin(x) {\n        return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n    }\n\n    function d3_sinh(x) {\n        return ((x = Math.exp(x)) - 1 / x) / 2;\n    }\n\n    function d3_cosh(x) {\n        return ((x = Math.exp(x)) + 1 / x) / 2;\n    }\n\n    function d3_tanh(x) {\n        return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n    }\n\n    function d3_haversin(x) {\n        return (x = Math.sin(x / 2)) * x;\n    }\n\n    var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n    d3.interpolateZoom = function (p0, p1) {\n        var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n        var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\n        function interpolate(t) {\n            var s = t * S;\n            if (dr) {\n                var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n                return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0)];\n            }\n            return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s)];\n        }\n\n        interpolate.duration = S * 1e3;\n        return interpolate;\n    };\n    d3.behavior.zoom = function () {\n        var view = {\n            x: 0,\n            y: 0,\n            k: 1\n        }, translate0, center, size = [960, 500], scaleExtent = d3_behavior_zoomInfinity, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\n        function zoom(g) {\n            g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(mousemove, mousewheelreset).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n        }\n\n        zoom.event = function (g) {\n            g.each(function () {\n                var event_ = event.of(this, arguments), view1 = view;\n                if (d3_transitionInheritId) {\n                    d3.select(this).transition().each(\"start.zoom\", function () {\n                        view = this.__chart__ || {\n                                x: 0,\n                                y: 0,\n                                k: 1\n                            };\n                        zoomstarted(event_);\n                    }).tween(\"zoom:zoom\", function () {\n                        var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([(cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k], [(cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k]);\n                        return function (t) {\n                            var l = i(t), k = dx / l[2];\n                            this.__chart__ = view = {\n                                x: cx - l[0] * k,\n                                y: cy - l[1] * k,\n                                k: k\n                            };\n                            zoomed(event_);\n                        };\n                    }).each(\"end.zoom\", function () {\n                        zoomended(event_);\n                    });\n                } else {\n                    this.__chart__ = view;\n                    zoomstarted(event_);\n                    zoomed(event_);\n                    zoomended(event_);\n                }\n            });\n        };\n        zoom.translate = function (_) {\n            if (!arguments.length) return [view.x, view.y];\n            view = {\n                x: +_[0],\n                y: +_[1],\n                k: view.k\n            };\n            rescale();\n            return zoom;\n        };\n        zoom.scale = function (_) {\n            if (!arguments.length) return view.k;\n            view = {\n                x: view.x,\n                y: view.y,\n                k: +_\n            };\n            rescale();\n            return zoom;\n        };\n        zoom.scaleExtent = function (_) {\n            if (!arguments.length) return scaleExtent;\n            scaleExtent = _ == null ? d3_behavior_zoomInfinity : [+_[0], +_[1]];\n            return zoom;\n        };\n        zoom.center = function (_) {\n            if (!arguments.length) return center;\n            center = _ && [+_[0], +_[1]];\n            return zoom;\n        };\n        zoom.size = function (_) {\n            if (!arguments.length) return size;\n            size = _ && [+_[0], +_[1]];\n            return zoom;\n        };\n        zoom.x = function (z) {\n            if (!arguments.length) return x1;\n            x1 = z;\n            x0 = z.copy();\n            view = {\n                x: 0,\n                y: 0,\n                k: 1\n            };\n            return zoom;\n        };\n        zoom.y = function (z) {\n            if (!arguments.length) return y1;\n            y1 = z;\n            y0 = z.copy();\n            view = {\n                x: 0,\n                y: 0,\n                k: 1\n            };\n            return zoom;\n        };\n        function location(p) {\n            return [(p[0] - view.x) / view.k, (p[1] - view.y) / view.k];\n        }\n\n        function point(l) {\n            return [l[0] * view.k + view.x, l[1] * view.k + view.y];\n        }\n\n        function scaleTo(s) {\n            view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n        }\n\n        function translateTo(p, l) {\n            l = point(l);\n            view.x += p[0] - l[0];\n            view.y += p[1] - l[1];\n        }\n\n        function rescale() {\n            if (x1) x1.domain(x0.range().map(function (x) {\n                return (x - view.x) / view.k;\n            }).map(x0.invert));\n            if (y1) y1.domain(y0.range().map(function (y) {\n                return (y - view.y) / view.k;\n            }).map(y0.invert));\n        }\n\n        function zoomstarted(event) {\n            event({\n                type: \"zoomstart\"\n            });\n        }\n\n        function zoomed(event) {\n            rescale();\n            event({\n                type: \"zoom\",\n                scale: view.k,\n                translate: [view.x, view.y]\n            });\n        }\n\n        function zoomended(event) {\n            event({\n                type: \"zoomend\"\n            });\n        }\n\n        function mousedowned() {\n            var target = this, event_ = event.of(target, arguments), eventTarget = d3.event.target, dragged = 0, w = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), l = location(d3.mouse(target)), dragRestore = d3_event_dragSuppress();\n            d3_selection_interrupt.call(target);\n            zoomstarted(event_);\n            function moved() {\n                dragged = 1;\n                translateTo(d3.mouse(target), l);\n                zoomed(event_);\n            }\n\n            function ended() {\n                w.on(mousemove, d3_window === target ? mousewheelreset : null).on(mouseup, null);\n                dragRestore(dragged && d3.event.target === eventTarget);\n                zoomended(event_);\n            }\n        }\n\n        function touchstarted() {\n            var target = this, event_ = event.of(target, arguments), locations0 = {}, distance0 = 0, scale0, eventId = d3.event.changedTouches[0].identifier, touchmove = \"touchmove.zoom-\" + eventId, touchend = \"touchend.zoom-\" + eventId, w = d3.select(d3_window).on(touchmove, moved).on(touchend, ended), t = d3.select(target).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();\n            d3_selection_interrupt.call(target);\n            started();\n            zoomstarted(event_);\n            function relocate() {\n                var touches = d3.touches(target);\n                scale0 = view.k;\n                touches.forEach(function (t) {\n                    if (t.identifier in locations0) locations0[t.identifier] = location(t);\n                });\n                return touches;\n            }\n\n            function started() {\n                var changed = d3.event.changedTouches;\n                for (var i = 0, n = changed.length; i < n; ++i) {\n                    locations0[changed[i].identifier] = null;\n                }\n                var touches = relocate(), now = Date.now();\n                if (touches.length === 1) {\n                    if (now - touchtime < 500) {\n                        var p = touches[0], l = locations0[p.identifier];\n                        scaleTo(view.k * 2);\n                        translateTo(p, l);\n                        d3_eventPreventDefault();\n                        zoomed(event_);\n                    }\n                    touchtime = now;\n                } else if (touches.length > 1) {\n                    var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n                    distance0 = dx * dx + dy * dy;\n                }\n            }\n\n            function moved() {\n                var touches = d3.touches(target), p0, l0, p1, l1;\n                for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n                    p1 = touches[i];\n                    if (l1 = locations0[p1.identifier]) {\n                        if (l0) break;\n                        p0 = p1, l0 = l1;\n                    }\n                }\n                if (l1) {\n                    var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n                    p0 = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n                    l0 = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n                    scaleTo(scale1 * scale0);\n                }\n                touchtime = null;\n                translateTo(p0, l0);\n                zoomed(event_);\n            }\n\n            function ended() {\n                if (d3.event.touches.length) {\n                    var changed = d3.event.changedTouches;\n                    for (var i = 0, n = changed.length; i < n; ++i) {\n                        delete locations0[changed[i].identifier];\n                    }\n                    for (var identifier in locations0) {\n                        return void relocate();\n                    }\n                }\n                w.on(touchmove, null).on(touchend, null);\n                t.on(mousedown, mousedowned).on(touchstart, touchstarted);\n                dragRestore();\n                zoomended(event_);\n            }\n        }\n\n        function mousewheeled() {\n            var event_ = event.of(this, arguments);\n            if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this),\n                zoomstarted(event_);\n            mousewheelTimer = setTimeout(function () {\n                mousewheelTimer = null;\n                zoomended(event_);\n            }, 50);\n            d3_eventPreventDefault();\n            var point = center || d3.mouse(this);\n            if (!translate0) translate0 = location(point);\n            scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n            translateTo(point, translate0);\n            zoomed(event_);\n        }\n\n        function mousewheelreset() {\n            translate0 = null;\n        }\n\n        function dblclicked() {\n            var event_ = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;\n            zoomstarted(event_);\n            scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));\n            translateTo(p, l);\n            zoomed(event_);\n            zoomended(event_);\n        }\n\n        return d3.rebind(zoom, event, \"on\");\n    };\n    var d3_behavior_zoomInfinity = [0, Infinity];\n    var d3_behavior_zoomDelta, d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function () {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n    }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function () {\n        return d3.event.wheelDelta;\n    }, \"mousewheel\") : (d3_behavior_zoomDelta = function () {\n        return -d3.event.detail;\n    }, \"MozMousePixelScroll\");\n\n    function d3_Color() {\n    }\n\n    d3_Color.prototype.toString = function () {\n        return this.rgb() + \"\";\n    };\n    d3.hsl = function (h, s, l) {\n        return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);\n    };\n    function d3_hsl(h, s, l) {\n        return new d3_Hsl(h, s, l);\n    }\n\n    function d3_Hsl(h, s, l) {\n        this.h = h;\n        this.s = s;\n        this.l = l;\n    }\n\n    var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();\n    d3_hslPrototype.brighter = function (k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        return d3_hsl(this.h, this.s, this.l / k);\n    };\n    d3_hslPrototype.darker = function (k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        return d3_hsl(this.h, this.s, k * this.l);\n    };\n    d3_hslPrototype.rgb = function () {\n        return d3_hsl_rgb(this.h, this.s, this.l);\n    };\n    function d3_hsl_rgb(h, s, l) {\n        var m1, m2;\n        h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n        s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n        l = l < 0 ? 0 : l > 1 ? 1 : l;\n        m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n        m1 = 2 * l - m2;\n        function v(h) {\n            if (h > 360) h -= 360; else if (h < 0) h += 360;\n            if (h < 60) return m1 + (m2 - m1) * h / 60;\n            if (h < 180) return m2;\n            if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n            return m1;\n        }\n\n        function vv(h) {\n            return Math.round(v(h) * 255);\n        }\n\n        return d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n    }\n\n    d3.hcl = function (h, c, l) {\n        return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);\n    };\n    function d3_hcl(h, c, l) {\n        return new d3_Hcl(h, c, l);\n    }\n\n    function d3_Hcl(h, c, l) {\n        this.h = h;\n        this.c = c;\n        this.l = l;\n    }\n\n    var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();\n    d3_hclPrototype.brighter = function (k) {\n        return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n    };\n    d3_hclPrototype.darker = function (k) {\n        return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n    };\n    d3_hclPrototype.rgb = function () {\n        return d3_hcl_lab(this.h, this.c, this.l).rgb();\n    };\n    function d3_hcl_lab(h, c, l) {\n        if (isNaN(h)) h = 0;\n        if (isNaN(c)) c = 0;\n        return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n    }\n\n    d3.lab = function (l, a, b) {\n        return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);\n    };\n    function d3_lab(l, a, b) {\n        return new d3_Lab(l, a, b);\n    }\n\n    function d3_Lab(l, a, b) {\n        this.l = l;\n        this.a = a;\n        this.b = b;\n    }\n\n    var d3_lab_K = 18;\n    var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n    var d3_labPrototype = d3_Lab.prototype = new d3_Color();\n    d3_labPrototype.brighter = function (k) {\n        return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n    };\n    d3_labPrototype.darker = function (k) {\n        return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n    };\n    d3_labPrototype.rgb = function () {\n        return d3_lab_rgb(this.l, this.a, this.b);\n    };\n    function d3_lab_rgb(l, a, b) {\n        var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n        x = d3_lab_xyz(x) * d3_lab_X;\n        y = d3_lab_xyz(y) * d3_lab_Y;\n        z = d3_lab_xyz(z) * d3_lab_Z;\n        return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n    }\n\n    function d3_lab_hcl(l, a, b) {\n        return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);\n    }\n\n    function d3_lab_xyz(x) {\n        return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n    }\n\n    function d3_xyz_lab(x) {\n        return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n    }\n\n    function d3_xyz_rgb(r) {\n        return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n    }\n\n    d3.rgb = function (r, g, b) {\n        return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);\n    };\n    function d3_rgbNumber(value) {\n        return d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n    }\n\n    function d3_rgbString(value) {\n        return d3_rgbNumber(value) + \"\";\n    }\n\n    function d3_rgb(r, g, b) {\n        return new d3_Rgb(r, g, b);\n    }\n\n    function d3_Rgb(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n\n    var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();\n    d3_rgbPrototype.brighter = function (k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        var r = this.r, g = this.g, b = this.b, i = 30;\n        if (!r && !g && !b) return d3_rgb(i, i, i);\n        if (r && r < i) r = i;\n        if (g && g < i) g = i;\n        if (b && b < i) b = i;\n        return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));\n    };\n    d3_rgbPrototype.darker = function (k) {\n        k = Math.pow(.7, arguments.length ? k : 1);\n        return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));\n    };\n    d3_rgbPrototype.hsl = function () {\n        return d3_rgb_hsl(this.r, this.g, this.b);\n    };\n    d3_rgbPrototype.toString = function () {\n        return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n    };\n    function d3_rgb_hex(v) {\n        return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n    }\n\n    function d3_rgb_parse(format, rgb, hsl) {\n        var r = 0, g = 0, b = 0, m1, m2, name;\n        m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n        if (m1) {\n            m2 = m1[2].split(\",\");\n            switch (m1[1]) {\n                case \"hsl\":\n                {\n                    return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n                }\n\n                case \"rgb\":\n                {\n                    return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n                }\n            }\n        }\n        if (name = d3_rgb_names.get(format)) return rgb(name.r, name.g, name.b);\n        if (format != null && format.charAt(0) === \"#\") {\n            if (format.length === 4) {\n                r = format.charAt(1);\n                r += r;\n                g = format.charAt(2);\n                g += g;\n                b = format.charAt(3);\n                b += b;\n            } else if (format.length === 7) {\n                r = format.substring(1, 3);\n                g = format.substring(3, 5);\n                b = format.substring(5, 7);\n            }\n            r = parseInt(r, 16);\n            g = parseInt(g, 16);\n            b = parseInt(b, 16);\n        }\n        return rgb(r, g, b);\n    }\n\n    function d3_rgb_hsl(r, g, b) {\n        var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n        if (d) {\n            s = l < .5 ? d / (max + min) : d / (2 - max - min);\n            if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n            h *= 60;\n        } else {\n            h = NaN;\n            s = l > 0 && l < 1 ? 0 : h;\n        }\n        return d3_hsl(h, s, l);\n    }\n\n    function d3_rgb_lab(r, g, b) {\n        r = d3_rgb_xyz(r);\n        g = d3_rgb_xyz(g);\n        b = d3_rgb_xyz(b);\n        var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n        return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n    }\n\n    function d3_rgb_xyz(r) {\n        return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n    }\n\n    function d3_rgb_parseNumber(c) {\n        var f = parseFloat(c);\n        return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n    }\n\n    var d3_rgb_names = d3.map({\n        aliceblue: 15792383,\n        antiquewhite: 16444375,\n        aqua: 65535,\n        aquamarine: 8388564,\n        azure: 15794175,\n        beige: 16119260,\n        bisque: 16770244,\n        black: 0,\n        blanchedalmond: 16772045,\n        blue: 255,\n        blueviolet: 9055202,\n        brown: 10824234,\n        burlywood: 14596231,\n        cadetblue: 6266528,\n        chartreuse: 8388352,\n        chocolate: 13789470,\n        coral: 16744272,\n        cornflowerblue: 6591981,\n        cornsilk: 16775388,\n        crimson: 14423100,\n        cyan: 65535,\n        darkblue: 139,\n        darkcyan: 35723,\n        darkgoldenrod: 12092939,\n        darkgray: 11119017,\n        darkgreen: 25600,\n        darkgrey: 11119017,\n        darkkhaki: 12433259,\n        darkmagenta: 9109643,\n        darkolivegreen: 5597999,\n        darkorange: 16747520,\n        darkorchid: 10040012,\n        darkred: 9109504,\n        darksalmon: 15308410,\n        darkseagreen: 9419919,\n        darkslateblue: 4734347,\n        darkslategray: 3100495,\n        darkslategrey: 3100495,\n        darkturquoise: 52945,\n        darkviolet: 9699539,\n        deeppink: 16716947,\n        deepskyblue: 49151,\n        dimgray: 6908265,\n        dimgrey: 6908265,\n        dodgerblue: 2003199,\n        firebrick: 11674146,\n        floralwhite: 16775920,\n        forestgreen: 2263842,\n        fuchsia: 16711935,\n        gainsboro: 14474460,\n        ghostwhite: 16316671,\n        gold: 16766720,\n        goldenrod: 14329120,\n        gray: 8421504,\n        green: 32768,\n        greenyellow: 11403055,\n        grey: 8421504,\n        honeydew: 15794160,\n        hotpink: 16738740,\n        indianred: 13458524,\n        indigo: 4915330,\n        ivory: 16777200,\n        khaki: 15787660,\n        lavender: 15132410,\n        lavenderblush: 16773365,\n        lawngreen: 8190976,\n        lemonchiffon: 16775885,\n        lightblue: 11393254,\n        lightcoral: 15761536,\n        lightcyan: 14745599,\n        lightgoldenrodyellow: 16448210,\n        lightgray: 13882323,\n        lightgreen: 9498256,\n        lightgrey: 13882323,\n        lightpink: 16758465,\n        lightsalmon: 16752762,\n        lightseagreen: 2142890,\n        lightskyblue: 8900346,\n        lightslategray: 7833753,\n        lightslategrey: 7833753,\n        lightsteelblue: 11584734,\n        lightyellow: 16777184,\n        lime: 65280,\n        limegreen: 3329330,\n        linen: 16445670,\n        magenta: 16711935,\n        maroon: 8388608,\n        mediumaquamarine: 6737322,\n        mediumblue: 205,\n        mediumorchid: 12211667,\n        mediumpurple: 9662683,\n        mediumseagreen: 3978097,\n        mediumslateblue: 8087790,\n        mediumspringgreen: 64154,\n        mediumturquoise: 4772300,\n        mediumvioletred: 13047173,\n        midnightblue: 1644912,\n        mintcream: 16121850,\n        mistyrose: 16770273,\n        moccasin: 16770229,\n        navajowhite: 16768685,\n        navy: 128,\n        oldlace: 16643558,\n        olive: 8421376,\n        olivedrab: 7048739,\n        orange: 16753920,\n        orangered: 16729344,\n        orchid: 14315734,\n        palegoldenrod: 15657130,\n        palegreen: 10025880,\n        paleturquoise: 11529966,\n        palevioletred: 14381203,\n        papayawhip: 16773077,\n        peachpuff: 16767673,\n        peru: 13468991,\n        pink: 16761035,\n        plum: 14524637,\n        powderblue: 11591910,\n        purple: 8388736,\n        red: 16711680,\n        rosybrown: 12357519,\n        royalblue: 4286945,\n        saddlebrown: 9127187,\n        salmon: 16416882,\n        sandybrown: 16032864,\n        seagreen: 3050327,\n        seashell: 16774638,\n        sienna: 10506797,\n        silver: 12632256,\n        skyblue: 8900331,\n        slateblue: 6970061,\n        slategray: 7372944,\n        slategrey: 7372944,\n        snow: 16775930,\n        springgreen: 65407,\n        steelblue: 4620980,\n        tan: 13808780,\n        teal: 32896,\n        thistle: 14204888,\n        tomato: 16737095,\n        turquoise: 4251856,\n        violet: 15631086,\n        wheat: 16113331,\n        white: 16777215,\n        whitesmoke: 16119285,\n        yellow: 16776960,\n        yellowgreen: 10145074\n    });\n    d3_rgb_names.forEach(function (key, value) {\n        d3_rgb_names.set(key, d3_rgbNumber(value));\n    });\n    function d3_functor(v) {\n        return typeof v === \"function\" ? v : function () {\n            return v;\n        };\n    }\n\n    d3.functor = d3_functor;\n    function d3_identity(d) {\n        return d;\n    }\n\n    d3.xhr = d3_xhrType(d3_identity);\n    function d3_xhrType(response) {\n        return function (url, mimeType, callback) {\n            if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType,\n                mimeType = null;\n            return d3_xhr(url, mimeType, response, callback);\n        };\n    }\n\n    function d3_xhr(url, mimeType, response, callback) {\n        var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n        if (d3_window.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n        \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function () {\n            request.readyState > 3 && respond();\n        };\n        function respond() {\n            var status = request.status, result;\n            if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {\n                try {\n                    result = response.call(xhr, request);\n                } catch (e) {\n                    dispatch.error.call(xhr, e);\n                    return;\n                }\n                dispatch.load.call(xhr, result);\n            } else {\n                dispatch.error.call(xhr, request);\n            }\n        }\n\n        request.onprogress = function (event) {\n            var o = d3.event;\n            d3.event = event;\n            try {\n                dispatch.progress.call(xhr, request);\n            } finally {\n                d3.event = o;\n            }\n        };\n        xhr.header = function (name, value) {\n            name = (name + \"\").toLowerCase();\n            if (arguments.length < 2) return headers[name];\n            if (value == null) delete headers[name]; else headers[name] = value + \"\";\n            return xhr;\n        };\n        xhr.mimeType = function (value) {\n            if (!arguments.length) return mimeType;\n            mimeType = value == null ? null : value + \"\";\n            return xhr;\n        };\n        xhr.responseType = function (value) {\n            if (!arguments.length) return responseType;\n            responseType = value;\n            return xhr;\n        };\n        xhr.response = function (value) {\n            response = value;\n            return xhr;\n        };\n        [\"get\", \"post\"].forEach(function (method) {\n            xhr[method] = function () {\n                return xhr.send.apply(xhr, [method].concat(d3_array(arguments)));\n            };\n        });\n        xhr.send = function (method, data, callback) {\n            if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n            request.open(method, url, true);\n            if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n            if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n            if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n            if (responseType != null) request.responseType = responseType;\n            if (callback != null) xhr.on(\"error\", callback).on(\"load\", function (request) {\n                callback(null, request);\n            });\n            dispatch.beforesend.call(xhr, request);\n            request.send(data == null ? null : data);\n            return xhr;\n        };\n        xhr.abort = function () {\n            request.abort();\n            return xhr;\n        };\n        d3.rebind(xhr, dispatch, \"on\");\n        return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n    }\n\n    function d3_xhr_fixCallback(callback) {\n        return callback.length === 1 ? function (error, request) {\n            callback(error == null ? request : null);\n        } : callback;\n    }\n\n    d3.dsv = function (delimiter, mimeType) {\n        var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\n        function dsv(url, row, callback) {\n            if (arguments.length < 3) callback = row, row = null;\n            var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n            xhr.row = function (_) {\n                return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n            };\n            return xhr;\n        }\n\n        function response(request) {\n            return dsv.parse(request.responseText);\n        }\n\n        function typedResponse(f) {\n            return function (request) {\n                return dsv.parse(request.responseText, f);\n            };\n        }\n\n        dsv.parse = function (text, f) {\n            var o;\n            return dsv.parseRows(text, function (row, i) {\n                if (o) return o(row, i - 1);\n                var a = new Function(\"d\", \"return {\" + row.map(function (name, i) {\n                        return JSON.stringify(name) + \": d[\" + i + \"]\";\n                    }).join(\",\") + \"}\");\n                o = f ? function (row, i) {\n                    return f(a(row), i);\n                } : a;\n            });\n        };\n        dsv.parseRows = function (text, f) {\n            var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\n            function token() {\n                if (I >= N) return EOF;\n                if (eol) return eol = false, EOL;\n                var j = I;\n                if (text.charCodeAt(j) === 34) {\n                    var i = j;\n                    while (i++ < N) {\n                        if (text.charCodeAt(i) === 34) {\n                            if (text.charCodeAt(i + 1) !== 34) break;\n                            ++i;\n                        }\n                    }\n                    I = i + 2;\n                    var c = text.charCodeAt(i + 1);\n                    if (c === 13) {\n                        eol = true;\n                        if (text.charCodeAt(i + 2) === 10) ++I;\n                    } else if (c === 10) {\n                        eol = true;\n                    }\n                    return text.substring(j + 1, i).replace(/\"\"/g, '\"');\n                }\n                while (I < N) {\n                    var c = text.charCodeAt(I++), k = 1;\n                    if (c === 10) eol = true; else if (c === 13) {\n                        eol = true;\n                        if (text.charCodeAt(I) === 10) ++I, ++k;\n                    } else if (c !== delimiterCode) continue;\n                    return text.substring(j, I - k);\n                }\n                return text.substring(j);\n            }\n\n            while ((t = token()) !== EOF) {\n                var a = [];\n                while (t !== EOL && t !== EOF) {\n                    a.push(t);\n                    t = token();\n                }\n                if (f && !(a = f(a, n++))) continue;\n                rows.push(a);\n            }\n            return rows;\n        };\n        dsv.format = function (rows) {\n            if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n            var fieldSet = new d3_Set(), fields = [];\n            rows.forEach(function (row) {\n                for (var field in row) {\n                    if (!fieldSet.has(field)) {\n                        fields.push(fieldSet.add(field));\n                    }\n                }\n            });\n            return [fields.map(formatValue).join(delimiter)].concat(rows.map(function (row) {\n                return fields.map(function (field) {\n                    return formatValue(row[field]);\n                }).join(delimiter);\n            })).join(\"\\n\");\n        };\n        dsv.formatRows = function (rows) {\n            return rows.map(formatRow).join(\"\\n\");\n        };\n        function formatRow(row) {\n            return row.map(formatValue).join(delimiter);\n        }\n\n        function formatValue(text) {\n            return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n        }\n\n        return dsv;\n    };\n    d3.csv = d3.dsv(\",\", \"text/csv\");\n    d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n    var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, \"requestAnimationFrame\")] || function (callback) {\n            setTimeout(callback, 17);\n        };\n    d3.timer = function (callback, delay, then) {\n        var n = arguments.length;\n        if (n < 2) delay = 0;\n        if (n < 3) then = Date.now();\n        var time = then + delay, timer = {\n            c: callback,\n            t: time,\n            f: false,\n            n: null\n        };\n        if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n        d3_timer_queueTail = timer;\n        if (!d3_timer_interval) {\n            d3_timer_timeout = clearTimeout(d3_timer_timeout);\n            d3_timer_interval = 1;\n            d3_timer_frame(d3_timer_step);\n        }\n    };\n    function d3_timer_step() {\n        var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n        if (delay > 24) {\n            if (isFinite(delay)) {\n                clearTimeout(d3_timer_timeout);\n                d3_timer_timeout = setTimeout(d3_timer_step, delay);\n            }\n            d3_timer_interval = 0;\n        } else {\n            d3_timer_interval = 1;\n            d3_timer_frame(d3_timer_step);\n        }\n    }\n\n    d3.timer.flush = function () {\n        d3_timer_mark();\n        d3_timer_sweep();\n    };\n    function d3_timer_mark() {\n        var now = Date.now();\n        d3_timer_active = d3_timer_queueHead;\n        while (d3_timer_active) {\n            if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n            d3_timer_active = d3_timer_active.n;\n        }\n        return now;\n    }\n\n    function d3_timer_sweep() {\n        var t0, t1 = d3_timer_queueHead, time = Infinity;\n        while (t1) {\n            if (t1.f) {\n                t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n            } else {\n                if (t1.t < time) time = t1.t;\n                t1 = (t0 = t1).n;\n            }\n        }\n        d3_timer_queueTail = t0;\n        return time;\n    }\n\n    function d3_format_precision(x, p) {\n        return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n    }\n\n    d3.round = function (x, n) {\n        return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n    };\n    var d3_formatPrefixes = [\"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"].map(d3_formatPrefix);\n    d3.formatPrefix = function (value, precision) {\n        var i = 0;\n        if (value) {\n            if (value < 0) value *= -1;\n            if (precision) value = d3.round(value, d3_format_precision(value, precision));\n            i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n            i = Math.max(-24, Math.min(24, Math.floor((i <= 0 ? i + 1 : i - 1) / 3) * 3));\n        }\n        return d3_formatPrefixes[8 + i / 3];\n    };\n    function d3_formatPrefix(d, i) {\n        var k = Math.pow(10, abs(8 - i) * 3);\n        return {\n            scale: i > 8 ? function (d) {\n                return d / k;\n            } : function (d) {\n                return d * k;\n            },\n            symbol: d\n        };\n    }\n\n    function d3_locale_numberFormat(locale) {\n        var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping ? function (value) {\n            var i = value.length, t = [], j = 0, g = locale_grouping[0];\n            while (i > 0 && g > 0) {\n                t.push(value.substring(i -= g, i + g));\n                g = locale_grouping[j = (j + 1) % locale_grouping.length];\n            }\n            return t.reverse().join(locale_thousands);\n        } : d3_identity;\n        return function (specifier) {\n            var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false;\n            if (precision) precision = +precision.substring(1);\n            if (zfill || fill === \"0\" && align === \"=\") {\n                zfill = fill = \"0\";\n                align = \"=\";\n                if (comma) width -= Math.floor((width - 1) / 4);\n            }\n            switch (type) {\n                case \"n\":\n                    comma = true;\n                    type = \"g\";\n                    break;\n\n                case \"%\":\n                    scale = 100;\n                    suffix = \"%\";\n                    type = \"f\";\n                    break;\n\n                case \"p\":\n                    scale = 100;\n                    suffix = \"%\";\n                    type = \"r\";\n                    break;\n\n                case \"b\":\n                case \"o\":\n                case \"x\":\n                case \"X\":\n                    if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n                case \"c\":\n                case \"d\":\n                    integer = true;\n                    precision = 0;\n                    break;\n\n                case \"s\":\n                    scale = -1;\n                    type = \"r\";\n                    break;\n            }\n            if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n            if (type == \"r\" && !precision) type = \"g\";\n            if (precision != null) {\n                if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n            }\n            type = d3_format_types.get(type) || d3_format_typeDefault;\n            var zcomma = zfill && comma;\n            return function (value) {\n                if (integer && value % 1) return \"\";\n                var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign;\n                if (scale < 0) {\n                    var unit = d3.formatPrefix(value, precision);\n                    value = unit.scale(value);\n                    suffix = unit.symbol;\n                } else {\n                    value *= scale;\n                }\n                value = type(value, precision);\n                var i = value.lastIndexOf(\".\"), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? \"\" : locale_decimal + value.substring(i + 1);\n                if (!zfill && comma) before = formatGroup(before);\n                var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n                if (zcomma) before = formatGroup(padding + before);\n                negative += prefix;\n                value = before + after;\n                return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + suffix;\n            };\n        };\n    }\n\n    var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n    var d3_format_types = d3.map({\n        b: function (x) {\n            return x.toString(2);\n        },\n        c: function (x) {\n            return String.fromCharCode(x);\n        },\n        o: function (x) {\n            return x.toString(8);\n        },\n        x: function (x) {\n            return x.toString(16);\n        },\n        X: function (x) {\n            return x.toString(16).toUpperCase();\n        },\n        g: function (x, p) {\n            return x.toPrecision(p);\n        },\n        e: function (x, p) {\n            return x.toExponential(p);\n        },\n        f: function (x, p) {\n            return x.toFixed(p);\n        },\n        r: function (x, p) {\n            return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n        }\n    });\n\n    function d3_format_typeDefault(x) {\n        return x + \"\";\n    }\n\n    var d3_time = d3.time = {}, d3_date = Date;\n\n    function d3_date_utc() {\n        this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n    }\n\n    d3_date_utc.prototype = {\n        getDate: function () {\n            return this._.getUTCDate();\n        },\n        getDay: function () {\n            return this._.getUTCDay();\n        },\n        getFullYear: function () {\n            return this._.getUTCFullYear();\n        },\n        getHours: function () {\n            return this._.getUTCHours();\n        },\n        getMilliseconds: function () {\n            return this._.getUTCMilliseconds();\n        },\n        getMinutes: function () {\n            return this._.getUTCMinutes();\n        },\n        getMonth: function () {\n            return this._.getUTCMonth();\n        },\n        getSeconds: function () {\n            return this._.getUTCSeconds();\n        },\n        getTime: function () {\n            return this._.getTime();\n        },\n        getTimezoneOffset: function () {\n            return 0;\n        },\n        valueOf: function () {\n            return this._.valueOf();\n        },\n        setDate: function () {\n            d3_time_prototype.setUTCDate.apply(this._, arguments);\n        },\n        setDay: function () {\n            d3_time_prototype.setUTCDay.apply(this._, arguments);\n        },\n        setFullYear: function () {\n            d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n        },\n        setHours: function () {\n            d3_time_prototype.setUTCHours.apply(this._, arguments);\n        },\n        setMilliseconds: function () {\n            d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n        },\n        setMinutes: function () {\n            d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n        },\n        setMonth: function () {\n            d3_time_prototype.setUTCMonth.apply(this._, arguments);\n        },\n        setSeconds: function () {\n            d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n        },\n        setTime: function () {\n            d3_time_prototype.setTime.apply(this._, arguments);\n        }\n    };\n    var d3_time_prototype = Date.prototype;\n\n    function d3_time_interval(local, step, number) {\n        function round(date) {\n            var d0 = local(date), d1 = offset(d0, 1);\n            return date - d0 < d1 - date ? d0 : d1;\n        }\n\n        function ceil(date) {\n            step(date = local(new d3_date(date - 1)), 1);\n            return date;\n        }\n\n        function offset(date, k) {\n            step(date = new d3_date(+date), k);\n            return date;\n        }\n\n        function range(t0, t1, dt) {\n            var time = ceil(t0), times = [];\n            if (dt > 1) {\n                while (time < t1) {\n                    if (!(number(time) % dt)) times.push(new Date(+time));\n                    step(time, 1);\n                }\n            } else {\n                while (time < t1) times.push(new Date(+time)), step(time, 1);\n            }\n            return times;\n        }\n\n        function range_utc(t0, t1, dt) {\n            try {\n                d3_date = d3_date_utc;\n                var utc = new d3_date_utc();\n                utc._ = t0;\n                return range(utc, t1, dt);\n            } finally {\n                d3_date = Date;\n            }\n        }\n\n        local.floor = local;\n        local.round = round;\n        local.ceil = ceil;\n        local.offset = offset;\n        local.range = range;\n        var utc = local.utc = d3_time_interval_utc(local);\n        utc.floor = utc;\n        utc.round = d3_time_interval_utc(round);\n        utc.ceil = d3_time_interval_utc(ceil);\n        utc.offset = d3_time_interval_utc(offset);\n        utc.range = range_utc;\n        return local;\n    }\n\n    function d3_time_interval_utc(method) {\n        return function (date, k) {\n            try {\n                d3_date = d3_date_utc;\n                var utc = new d3_date_utc();\n                utc._ = date;\n                return method(utc, k)._;\n            } finally {\n                d3_date = Date;\n            }\n        };\n    }\n\n    d3_time.year = d3_time_interval(function (date) {\n        date = d3_time.day(date);\n        date.setMonth(0, 1);\n        return date;\n    }, function (date, offset) {\n        date.setFullYear(date.getFullYear() + offset);\n    }, function (date) {\n        return date.getFullYear();\n    });\n    d3_time.years = d3_time.year.range;\n    d3_time.years.utc = d3_time.year.utc.range;\n    d3_time.day = d3_time_interval(function (date) {\n        var day = new d3_date(2e3, 0);\n        day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        return day;\n    }, function (date, offset) {\n        date.setDate(date.getDate() + offset);\n    }, function (date) {\n        return date.getDate() - 1;\n    });\n    d3_time.days = d3_time.day.range;\n    d3_time.days.utc = d3_time.day.utc.range;\n    d3_time.dayOfYear = function (date) {\n        var year = d3_time.year(date);\n        return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n    };\n    [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"].forEach(function (day, i) {\n        i = 7 - i;\n        var interval = d3_time[day] = d3_time_interval(function (date) {\n            (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n            return date;\n        }, function (date, offset) {\n            date.setDate(date.getDate() + Math.floor(offset) * 7);\n        }, function (date) {\n            var day = d3_time.year(date).getDay();\n            return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n        });\n        d3_time[day + \"s\"] = interval.range;\n        d3_time[day + \"s\"].utc = interval.utc.range;\n        d3_time[day + \"OfYear\"] = function (date) {\n            var day = d3_time.year(date).getDay();\n            return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n        };\n    });\n    d3_time.week = d3_time.sunday;\n    d3_time.weeks = d3_time.sunday.range;\n    d3_time.weeks.utc = d3_time.sunday.utc.range;\n    d3_time.weekOfYear = d3_time.sundayOfYear;\n    function d3_locale_timeFormat(locale) {\n        var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\n        function d3_time_format(template) {\n            var n = template.length;\n\n            function format(date) {\n                var string = [], i = -1, j = 0, c, p, f;\n                while (++i < n) {\n                    if (template.charCodeAt(i) === 37) {\n                        string.push(template.substring(j, i));\n                        if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n                        if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n                        string.push(c);\n                        j = i + 1;\n                    }\n                }\n                string.push(template.substring(j, i));\n                return string.join(\"\");\n            }\n\n            format.parse = function (string) {\n                var d = {\n                    y: 1900,\n                    m: 0,\n                    d: 1,\n                    H: 0,\n                    M: 0,\n                    S: 0,\n                    L: 0,\n                    Z: null\n                }, i = d3_time_parse(d, template, string, 0);\n                if (i != string.length) return null;\n                if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n                var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n                if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n                    date.setFullYear(d.y, 0, 1);\n                    date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n                } else date.setFullYear(d.y, d.m, d.d);\n                date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);\n                return localZ ? date._ : date;\n            };\n            format.toString = function () {\n                return template;\n            };\n            return format;\n        }\n\n        function d3_time_parse(date, template, string, j) {\n            var c, p, t, i = 0, n = template.length, m = string.length;\n            while (i < n) {\n                if (j >= m) return -1;\n                c = template.charCodeAt(i++);\n                if (c === 37) {\n                    t = template.charAt(i++);\n                    p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n                    if (!p || (j = p(date, string, j)) < 0) return -1;\n                } else if (c != string.charCodeAt(j++)) {\n                    return -1;\n                }\n            }\n            return j;\n        }\n\n        d3_time_format.utc = function (template) {\n            var local = d3_time_format(template);\n\n            function format(date) {\n                try {\n                    d3_date = d3_date_utc;\n                    var utc = new d3_date();\n                    utc._ = date;\n                    return local(utc);\n                } finally {\n                    d3_date = Date;\n                }\n            }\n\n            format.parse = function (string) {\n                try {\n                    d3_date = d3_date_utc;\n                    var date = local.parse(string);\n                    return date && date._;\n                } finally {\n                    d3_date = Date;\n                }\n            };\n            format.toString = local.toString;\n            return format;\n        };\n        d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n        var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n        locale_periods.forEach(function (p, i) {\n            d3_time_periodLookup.set(p.toLowerCase(), i);\n        });\n        var d3_time_formats = {\n            a: function (d) {\n                return locale_shortDays[d.getDay()];\n            },\n            A: function (d) {\n                return locale_days[d.getDay()];\n            },\n            b: function (d) {\n                return locale_shortMonths[d.getMonth()];\n            },\n            B: function (d) {\n                return locale_months[d.getMonth()];\n            },\n            c: d3_time_format(locale_dateTime),\n            d: function (d, p) {\n                return d3_time_formatPad(d.getDate(), p, 2);\n            },\n            e: function (d, p) {\n                return d3_time_formatPad(d.getDate(), p, 2);\n            },\n            H: function (d, p) {\n                return d3_time_formatPad(d.getHours(), p, 2);\n            },\n            I: function (d, p) {\n                return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n            },\n            j: function (d, p) {\n                return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n            },\n            L: function (d, p) {\n                return d3_time_formatPad(d.getMilliseconds(), p, 3);\n            },\n            m: function (d, p) {\n                return d3_time_formatPad(d.getMonth() + 1, p, 2);\n            },\n            M: function (d, p) {\n                return d3_time_formatPad(d.getMinutes(), p, 2);\n            },\n            p: function (d) {\n                return locale_periods[+(d.getHours() >= 12)];\n            },\n            S: function (d, p) {\n                return d3_time_formatPad(d.getSeconds(), p, 2);\n            },\n            U: function (d, p) {\n                return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n            },\n            w: function (d) {\n                return d.getDay();\n            },\n            W: function (d, p) {\n                return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n            },\n            x: d3_time_format(locale_date),\n            X: d3_time_format(locale_time),\n            y: function (d, p) {\n                return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n            },\n            Y: function (d, p) {\n                return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n            },\n            Z: d3_time_zone,\n            \"%\": function () {\n                return \"%\";\n            }\n        };\n        var d3_time_parsers = {\n            a: d3_time_parseWeekdayAbbrev,\n            A: d3_time_parseWeekday,\n            b: d3_time_parseMonthAbbrev,\n            B: d3_time_parseMonth,\n            c: d3_time_parseLocaleFull,\n            d: d3_time_parseDay,\n            e: d3_time_parseDay,\n            H: d3_time_parseHour24,\n            I: d3_time_parseHour24,\n            j: d3_time_parseDayOfYear,\n            L: d3_time_parseMilliseconds,\n            m: d3_time_parseMonthNumber,\n            M: d3_time_parseMinutes,\n            p: d3_time_parseAmPm,\n            S: d3_time_parseSeconds,\n            U: d3_time_parseWeekNumberSunday,\n            w: d3_time_parseWeekdayNumber,\n            W: d3_time_parseWeekNumberMonday,\n            x: d3_time_parseLocaleDate,\n            X: d3_time_parseLocaleTime,\n            y: d3_time_parseYear,\n            Y: d3_time_parseFullYear,\n            Z: d3_time_parseZone,\n            \"%\": d3_time_parseLiteralPercent\n        };\n\n        function d3_time_parseWeekdayAbbrev(date, string, i) {\n            d3_time_dayAbbrevRe.lastIndex = 0;\n            var n = d3_time_dayAbbrevRe.exec(string.substring(i));\n            return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n\n        function d3_time_parseWeekday(date, string, i) {\n            d3_time_dayRe.lastIndex = 0;\n            var n = d3_time_dayRe.exec(string.substring(i));\n            return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n\n        function d3_time_parseMonthAbbrev(date, string, i) {\n            d3_time_monthAbbrevRe.lastIndex = 0;\n            var n = d3_time_monthAbbrevRe.exec(string.substring(i));\n            return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n\n        function d3_time_parseMonth(date, string, i) {\n            d3_time_monthRe.lastIndex = 0;\n            var n = d3_time_monthRe.exec(string.substring(i));\n            return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n        }\n\n        function d3_time_parseLocaleFull(date, string, i) {\n            return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n        }\n\n        function d3_time_parseLocaleDate(date, string, i) {\n            return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n        }\n\n        function d3_time_parseLocaleTime(date, string, i) {\n            return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n        }\n\n        function d3_time_parseAmPm(date, string, i) {\n            var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());\n            return n == null ? -1 : (date.p = n, i);\n        }\n\n        return d3_time_format;\n    }\n\n    var d3_time_formatPads = {\n        \"-\": \"\",\n        _: \" \",\n        \"0\": \"0\"\n    }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\n    function d3_time_formatPad(value, fill, width) {\n        var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n        return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n    }\n\n    function d3_time_formatRe(names) {\n        return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n    }\n\n    function d3_time_formatLookup(names) {\n        var map = new d3_Map(), i = -1, n = names.length;\n        while (++i < n) map.set(names[i].toLowerCase(), i);\n        return map;\n    }\n\n    function d3_time_parseWeekdayNumber(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 1));\n        return n ? (date.w = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekNumberSunday(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i));\n        return n ? (date.U = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseWeekNumberMonday(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i));\n        return n ? (date.W = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseFullYear(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 4));\n        return n ? (date.y = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseYear(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n    }\n\n    function d3_time_parseZone(date, string, i) {\n        return /^[+-]\\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = +string,\n        i + 5) : -1;\n    }\n\n    function d3_time_expandYear(d) {\n        return d + (d > 68 ? 1900 : 2e3);\n    }\n\n    function d3_time_parseMonthNumber(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n    }\n\n    function d3_time_parseDay(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.d = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseDayOfYear(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n        return n ? (date.j = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseHour24(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.H = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMinutes(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.M = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseSeconds(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 2));\n        return n ? (date.S = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_parseMilliseconds(date, string, i) {\n        d3_time_numberRe.lastIndex = 0;\n        var n = d3_time_numberRe.exec(string.substring(i, i + 3));\n        return n ? (date.L = +n[0], i + n[0].length) : -1;\n    }\n\n    function d3_time_zone(d) {\n        var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = ~~(abs(z) / 60), zm = abs(z) % 60;\n        return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n    }\n\n    function d3_time_parseLiteralPercent(date, string, i) {\n        d3_time_percentRe.lastIndex = 0;\n        var n = d3_time_percentRe.exec(string.substring(i, i + 1));\n        return n ? i + n[0].length : -1;\n    }\n\n    function d3_time_formatMulti(formats) {\n        var n = formats.length, i = -1;\n        while (++i < n) formats[i][0] = this(formats[i][0]);\n        return function (date) {\n            var i = 0, f = formats[i];\n            while (!f[1](date)) f = formats[++i];\n            return f[0](date);\n        };\n    }\n\n    d3.locale = function (locale) {\n        return {\n            numberFormat: d3_locale_numberFormat(locale),\n            timeFormat: d3_locale_timeFormat(locale)\n        };\n    };\n    var d3_locale_enUS = d3.locale({\n        decimal: \".\",\n        thousands: \",\",\n        grouping: [3],\n        currency: [\"$\", \"\"],\n        dateTime: \"%a %b %e %X %Y\",\n        date: \"%m/%d/%Y\",\n        time: \"%H:%M:%S\",\n        periods: [\"AM\", \"PM\"],\n        days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    });\n    d3.format = d3_locale_enUS.numberFormat;\n    d3.geo = {};\n    function d3_adder() {\n    }\n\n    d3_adder.prototype = {\n        s: 0,\n        t: 0,\n        add: function (y) {\n            d3_adderSum(y, this.t, d3_adderTemp);\n            d3_adderSum(d3_adderTemp.s, this.s, this);\n            if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n        },\n        reset: function () {\n            this.s = this.t = 0;\n        },\n        valueOf: function () {\n            return this.s;\n        }\n    };\n    var d3_adderTemp = new d3_adder();\n\n    function d3_adderSum(a, b, o) {\n        var x = o.s = a + b, bv = x - a, av = x - bv;\n        o.t = a - av + (b - bv);\n    }\n\n    d3.geo.stream = function (object, listener) {\n        if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n            d3_geo_streamObjectType[object.type](object, listener);\n        } else {\n            d3_geo_streamGeometry(object, listener);\n        }\n    };\n    function d3_geo_streamGeometry(geometry, listener) {\n        if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n            d3_geo_streamGeometryType[geometry.type](geometry, listener);\n        }\n    }\n\n    var d3_geo_streamObjectType = {\n        Feature: function (feature, listener) {\n            d3_geo_streamGeometry(feature.geometry, listener);\n        },\n        FeatureCollection: function (object, listener) {\n            var features = object.features, i = -1, n = features.length;\n            while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n        }\n    };\n    var d3_geo_streamGeometryType = {\n        Sphere: function (object, listener) {\n            listener.sphere();\n        },\n        Point: function (object, listener) {\n            object = object.coordinates;\n            listener.point(object[0], object[1], object[2]);\n        },\n        MultiPoint: function (object, listener) {\n            var coordinates = object.coordinates, i = -1, n = coordinates.length;\n            while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n        },\n        LineString: function (object, listener) {\n            d3_geo_streamLine(object.coordinates, listener, 0);\n        },\n        MultiLineString: function (object, listener) {\n            var coordinates = object.coordinates, i = -1, n = coordinates.length;\n            while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n        },\n        Polygon: function (object, listener) {\n            d3_geo_streamPolygon(object.coordinates, listener);\n        },\n        MultiPolygon: function (object, listener) {\n            var coordinates = object.coordinates, i = -1, n = coordinates.length;\n            while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n        },\n        GeometryCollection: function (object, listener) {\n            var geometries = object.geometries, i = -1, n = geometries.length;\n            while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n        }\n    };\n\n    function d3_geo_streamLine(coordinates, listener, closed) {\n        var i = -1, n = coordinates.length - closed, coordinate;\n        listener.lineStart();\n        while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n        listener.lineEnd();\n    }\n\n    function d3_geo_streamPolygon(coordinates, listener) {\n        var i = -1, n = coordinates.length;\n        listener.polygonStart();\n        while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n        listener.polygonEnd();\n    }\n\n    d3.geo.area = function (object) {\n        d3_geo_areaSum = 0;\n        d3.geo.stream(object, d3_geo_area);\n        return d3_geo_areaSum;\n    };\n    var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n    var d3_geo_area = {\n        sphere: function () {\n            d3_geo_areaSum += 4 * π;\n        },\n        point: d3_noop,\n        lineStart: d3_noop,\n        lineEnd: d3_noop,\n        polygonStart: function () {\n            d3_geo_areaRingSum.reset();\n            d3_geo_area.lineStart = d3_geo_areaRingStart;\n        },\n        polygonEnd: function () {\n            var area = 2 * d3_geo_areaRingSum;\n            d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n            d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n        }\n    };\n\n    function d3_geo_areaRingStart() {\n        var λ00, φ00, λ0, cosφ0, sinφ0;\n        d3_geo_area.point = function (λ, φ) {\n            d3_geo_area.point = nextPoint;\n            λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4),\n                sinφ0 = Math.sin(φ);\n        };\n        function nextPoint(λ, φ) {\n            λ *= d3_radians;\n            φ = φ * d3_radians / 2 + π / 4;\n            var dλ = λ - λ0, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(dλ), v = k * Math.sin(dλ);\n            d3_geo_areaRingSum.add(Math.atan2(v, u));\n            λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n        }\n\n        d3_geo_area.lineEnd = function () {\n            nextPoint(λ00, φ00);\n        };\n    }\n\n    function d3_geo_cartesian(spherical) {\n        var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n        return [cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ)];\n    }\n\n    function d3_geo_cartesianDot(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    }\n\n    function d3_geo_cartesianCross(a, b) {\n        return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n    }\n\n    function d3_geo_cartesianAdd(a, b) {\n        a[0] += b[0];\n        a[1] += b[1];\n        a[2] += b[2];\n    }\n\n    function d3_geo_cartesianScale(vector, k) {\n        return [vector[0] * k, vector[1] * k, vector[2] * k];\n    }\n\n    function d3_geo_cartesianNormalize(d) {\n        var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n        d[0] /= l;\n        d[1] /= l;\n        d[2] /= l;\n    }\n\n    function d3_geo_spherical(cartesian) {\n        return [Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2])];\n    }\n\n    function d3_geo_sphericalEqual(a, b) {\n        return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n    }\n\n    d3.geo.bounds = function () {\n        var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n        var bound = {\n            point: point,\n            lineStart: lineStart,\n            lineEnd: lineEnd,\n            polygonStart: function () {\n                bound.point = ringPoint;\n                bound.lineStart = ringStart;\n                bound.lineEnd = ringEnd;\n                dλSum = 0;\n                d3_geo_area.polygonStart();\n            },\n            polygonEnd: function () {\n                d3_geo_area.polygonEnd();\n                bound.point = point;\n                bound.lineStart = lineStart;\n                bound.lineEnd = lineEnd;\n                if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n                range[0] = λ0, range[1] = λ1;\n            }\n        };\n\n        function point(λ, φ) {\n            ranges.push(range = [λ0 = λ, λ1 = λ]);\n            if (φ < φ0) φ0 = φ;\n            if (φ > φ1) φ1 = φ;\n        }\n\n        function linePoint(λ, φ) {\n            var p = d3_geo_cartesian([λ * d3_radians, φ * d3_radians]);\n            if (p0) {\n                var normal = d3_geo_cartesianCross(p0, p), equatorial = [normal[1], -normal[0], 0], inflection = d3_geo_cartesianCross(equatorial, normal);\n                d3_geo_cartesianNormalize(inflection);\n                inflection = d3_geo_spherical(inflection);\n                var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n                if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n                    var φi = inflection[1] * d3_degrees;\n                    if (φi > φ1) φ1 = φi;\n                } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n                    var φi = -inflection[1] * d3_degrees;\n                    if (φi < φ0) φ0 = φi;\n                } else {\n                    if (φ < φ0) φ0 = φ;\n                    if (φ > φ1) φ1 = φ;\n                }\n                if (antimeridian) {\n                    if (λ < λ_) {\n                        if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n                    } else {\n                        if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n                    }\n                } else {\n                    if (λ1 >= λ0) {\n                        if (λ < λ0) λ0 = λ;\n                        if (λ > λ1) λ1 = λ;\n                    } else {\n                        if (λ > λ_) {\n                            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n                        } else {\n                            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n                        }\n                    }\n                }\n            } else {\n                point(λ, φ);\n            }\n            p0 = p, λ_ = λ;\n        }\n\n        function lineStart() {\n            bound.point = linePoint;\n        }\n\n        function lineEnd() {\n            range[0] = λ0, range[1] = λ1;\n            bound.point = point;\n            p0 = null;\n        }\n\n        function ringPoint(λ, φ) {\n            if (p0) {\n                var dλ = λ - λ_;\n                dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n            } else λ__ = λ, φ__ = φ;\n            d3_geo_area.point(λ, φ);\n            linePoint(λ, φ);\n        }\n\n        function ringStart() {\n            d3_geo_area.lineStart();\n        }\n\n        function ringEnd() {\n            ringPoint(λ__, φ__);\n            d3_geo_area.lineEnd();\n            if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n            range[0] = λ0, range[1] = λ1;\n            p0 = null;\n        }\n\n        function angle(λ0, λ1) {\n            return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n        }\n\n        function compareRanges(a, b) {\n            return a[0] - b[0];\n        }\n\n        function withinRange(x, range) {\n            return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n        }\n\n        return function (feature) {\n            φ1 = λ1 = -(λ0 = φ0 = Infinity);\n            ranges = [];\n            d3.geo.stream(feature, bound);\n            var n = ranges.length;\n            if (n) {\n                ranges.sort(compareRanges);\n                for (var i = 1, a = ranges[0], b, merged = [a]; i < n; ++i) {\n                    b = ranges[i];\n                    if (withinRange(b[0], a) || withinRange(b[1], a)) {\n                        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n                        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n                    } else {\n                        merged.push(a = b);\n                    }\n                }\n                var best = -Infinity, dλ;\n                for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n                    b = merged[i];\n                    if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n                }\n            }\n            ranges = range = null;\n            return λ0 === Infinity || φ0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[λ0, φ0], [λ1, φ1]];\n        };\n    }();\n    d3.geo.centroid = function (object) {\n        d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n        d3.geo.stream(object, d3_geo_centroid);\n        var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n        if (m < ε2) {\n            x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n            if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n            m = x * x + y * y + z * z;\n            if (m < ε2) return [NaN, NaN];\n        }\n        return [Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees];\n    };\n    var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n    var d3_geo_centroid = {\n        sphere: d3_noop,\n        point: d3_geo_centroidPoint,\n        lineStart: d3_geo_centroidLineStart,\n        lineEnd: d3_geo_centroidLineEnd,\n        polygonStart: function () {\n            d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n        },\n        polygonEnd: function () {\n            d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n        }\n    };\n\n    function d3_geo_centroidPoint(λ, φ) {\n        λ *= d3_radians;\n        var cosφ = Math.cos(φ *= d3_radians);\n        d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n    }\n\n    function d3_geo_centroidPointXYZ(x, y, z) {\n        ++d3_geo_centroidW0;\n        d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n        d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n        d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n    }\n\n    function d3_geo_centroidLineStart() {\n        var x0, y0, z0;\n        d3_geo_centroid.point = function (λ, φ) {\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians);\n            x0 = cosφ * Math.cos(λ);\n            y0 = cosφ * Math.sin(λ);\n            z0 = Math.sin(φ);\n            d3_geo_centroid.point = nextPoint;\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        };\n        function nextPoint(λ, φ) {\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n            d3_geo_centroidW1 += w;\n            d3_geo_centroidX1 += w * (x0 + (x0 = x));\n            d3_geo_centroidY1 += w * (y0 + (y0 = y));\n            d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        }\n    }\n\n    function d3_geo_centroidLineEnd() {\n        d3_geo_centroid.point = d3_geo_centroidPoint;\n    }\n\n    function d3_geo_centroidRingStart() {\n        var λ00, φ00, x0, y0, z0;\n        d3_geo_centroid.point = function (λ, φ) {\n            λ00 = λ, φ00 = φ;\n            d3_geo_centroid.point = nextPoint;\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians);\n            x0 = cosφ * Math.cos(λ);\n            y0 = cosφ * Math.sin(λ);\n            z0 = Math.sin(φ);\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        };\n        d3_geo_centroid.lineEnd = function () {\n            nextPoint(λ00, φ00);\n            d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n            d3_geo_centroid.point = d3_geo_centroidPoint;\n        };\n        function nextPoint(λ, φ) {\n            λ *= d3_radians;\n            var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n            d3_geo_centroidX2 += v * cx;\n            d3_geo_centroidY2 += v * cy;\n            d3_geo_centroidZ2 += v * cz;\n            d3_geo_centroidW1 += w;\n            d3_geo_centroidX1 += w * (x0 + (x0 = x));\n            d3_geo_centroidY1 += w * (y0 + (y0 = y));\n            d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n            d3_geo_centroidPointXYZ(x0, y0, z0);\n        }\n    }\n\n    function d3_true() {\n        return true;\n    }\n\n    function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n        var subject = [], clip = [];\n        segments.forEach(function (segment) {\n            if ((n = segment.length - 1) <= 0) return;\n            var n, p0 = segment[0], p1 = segment[n];\n            if (d3_geo_sphericalEqual(p0, p1)) {\n                listener.lineStart();\n                for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n                listener.lineEnd();\n                return;\n            }\n            var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n            a.o = b;\n            subject.push(a);\n            clip.push(b);\n            a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n            b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n            a.o = b;\n            subject.push(a);\n            clip.push(b);\n        });\n        clip.sort(compare);\n        d3_geo_clipPolygonLinkCircular(subject);\n        d3_geo_clipPolygonLinkCircular(clip);\n        if (!subject.length) return;\n        for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n            clip[i].e = entry = !entry;\n        }\n        var start = subject[0], points, point;\n        while (1) {\n            var current = start, isSubject = true;\n            while (current.v) if ((current = current.n) === start) return;\n            points = current.z;\n            listener.lineStart();\n            do {\n                current.v = current.o.v = true;\n                if (current.e) {\n                    if (isSubject) {\n                        for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n                    } else {\n                        interpolate(current.x, current.n.x, 1, listener);\n                    }\n                    current = current.n;\n                } else {\n                    if (isSubject) {\n                        points = current.p.z;\n                        for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n                    } else {\n                        interpolate(current.x, current.p.x, -1, listener);\n                    }\n                    current = current.p;\n                }\n                current = current.o;\n                points = current.z;\n                isSubject = !isSubject;\n            } while (!current.v);\n            listener.lineEnd();\n        }\n    }\n\n    function d3_geo_clipPolygonLinkCircular(array) {\n        if (!(n = array.length)) return;\n        var n, i = 0, a = array[0], b;\n        while (++i < n) {\n            a.n = b = array[i];\n            b.p = a;\n            a = b;\n        }\n        a.n = b = array[0];\n        b.p = a;\n    }\n\n    function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n        this.x = point;\n        this.z = points;\n        this.o = other;\n        this.e = entry;\n        this.v = false;\n        this.n = this.p = null;\n    }\n\n    function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n        return function (rotate, listener) {\n            var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n            var clip = {\n                point: point,\n                lineStart: lineStart,\n                lineEnd: lineEnd,\n                polygonStart: function () {\n                    clip.point = pointRing;\n                    clip.lineStart = ringStart;\n                    clip.lineEnd = ringEnd;\n                    segments = [];\n                    polygon = [];\n                    listener.polygonStart();\n                },\n                polygonEnd: function () {\n                    clip.point = point;\n                    clip.lineStart = lineStart;\n                    clip.lineEnd = lineEnd;\n                    segments = d3.merge(segments);\n                    var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n                    if (segments.length) {\n                        d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n                    } else if (clipStartInside) {\n                        listener.lineStart();\n                        interpolate(null, null, 1, listener);\n                        listener.lineEnd();\n                    }\n                    listener.polygonEnd();\n                    segments = polygon = null;\n                },\n                sphere: function () {\n                    listener.polygonStart();\n                    listener.lineStart();\n                    interpolate(null, null, 1, listener);\n                    listener.lineEnd();\n                    listener.polygonEnd();\n                }\n            };\n\n            function point(λ, φ) {\n                var point = rotate(λ, φ);\n                if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n            }\n\n            function pointLine(λ, φ) {\n                var point = rotate(λ, φ);\n                line.point(point[0], point[1]);\n            }\n\n            function lineStart() {\n                clip.point = pointLine;\n                line.lineStart();\n            }\n\n            function lineEnd() {\n                clip.point = point;\n                line.lineEnd();\n            }\n\n            var segments;\n            var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygon, ring;\n\n            function pointRing(λ, φ) {\n                ring.push([λ, φ]);\n                var point = rotate(λ, φ);\n                ringListener.point(point[0], point[1]);\n            }\n\n            function ringStart() {\n                ringListener.lineStart();\n                ring = [];\n            }\n\n            function ringEnd() {\n                pointRing(ring[0][0], ring[0][1]);\n                ringListener.lineEnd();\n                var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n                ring.pop();\n                polygon.push(ring);\n                ring = null;\n                if (!n) return;\n                if (clean & 1) {\n                    segment = ringSegments[0];\n                    var n = segment.length - 1, i = -1, point;\n                    listener.lineStart();\n                    while (++i < n) listener.point((point = segment[i])[0], point[1]);\n                    listener.lineEnd();\n                    return;\n                }\n                if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n                segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n            }\n\n            return clip;\n        };\n    }\n\n    function d3_geo_clipSegmentLength1(segment) {\n        return segment.length > 1;\n    }\n\n    function d3_geo_clipBufferListener() {\n        var lines = [], line;\n        return {\n            lineStart: function () {\n                lines.push(line = []);\n            },\n            point: function (λ, φ) {\n                line.push([λ, φ]);\n            },\n            lineEnd: d3_noop,\n            buffer: function () {\n                var buffer = lines;\n                lines = [];\n                line = null;\n                return buffer;\n            },\n            rejoin: function () {\n                if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n            }\n        };\n    }\n\n    function d3_geo_clipSort(a, b) {\n        return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n    }\n\n    function d3_geo_pointInPolygon(point, polygon) {\n        var meridian = point[0], parallel = point[1], meridianNormal = [Math.sin(meridian), -Math.cos(meridian), 0], polarAngle = 0, winding = 0;\n        d3_geo_areaRingSum.reset();\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n            var ring = polygon[i], m = ring.length;\n            if (!m) continue;\n            var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n            while (true) {\n                if (j === m) j = 0;\n                point = ring[j];\n                var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, antimeridian = abs(dλ) > π, k = sinφ0 * sinφ;\n                d3_geo_areaRingSum.add(Math.atan2(k * Math.sin(dλ), cosφ0 * cosφ + k * Math.cos(dλ)));\n                polarAngle += antimeridian ? dλ + (dλ >= 0 ? τ : -τ) : dλ;\n                if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n                    var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n                    d3_geo_cartesianNormalize(arc);\n                    var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n                    d3_geo_cartesianNormalize(intersection);\n                    var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n                    if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n                        winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n                    }\n                }\n                if (!j++) break;\n                λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n            }\n        }\n        return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n    }\n\n    var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [-π, -π / 2]);\n\n    function d3_geo_clipAntimeridianLine(listener) {\n        var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n        return {\n            lineStart: function () {\n                listener.lineStart();\n                clean = 1;\n            },\n            point: function (λ1, φ1) {\n                var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n                if (abs(dλ - π) < ε) {\n                    listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n                    listener.point(sλ0, φ0);\n                    listener.lineEnd();\n                    listener.lineStart();\n                    listener.point(sλ1, φ0);\n                    listener.point(λ1, φ0);\n                    clean = 0;\n                } else if (sλ0 !== sλ1 && dλ >= π) {\n                    if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n                    if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n                    φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n                    listener.point(sλ0, φ0);\n                    listener.lineEnd();\n                    listener.lineStart();\n                    listener.point(sλ1, φ0);\n                    clean = 0;\n                }\n                listener.point(λ0 = λ1, φ0 = φ1);\n                sλ0 = sλ1;\n            },\n            lineEnd: function () {\n                listener.lineEnd();\n                λ0 = φ0 = NaN;\n            },\n            clean: function () {\n                return 2 - clean;\n            }\n        };\n    }\n\n    function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n        var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n        return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n    }\n\n    function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n        var φ;\n        if (from == null) {\n            φ = direction * halfπ;\n            listener.point(-π, φ);\n            listener.point(0, φ);\n            listener.point(π, φ);\n            listener.point(π, 0);\n            listener.point(π, -φ);\n            listener.point(0, -φ);\n            listener.point(-π, -φ);\n            listener.point(-π, 0);\n            listener.point(-π, φ);\n        } else if (abs(from[0] - to[0]) > ε) {\n            var s = from[0] < to[0] ? π : -π;\n            φ = direction * s / 2;\n            listener.point(-s, φ);\n            listener.point(0, φ);\n            listener.point(s, φ);\n        } else {\n            listener.point(to[0], to[1]);\n        }\n    }\n\n    function d3_geo_clipCircle(radius) {\n        var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n        return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-π, radius - π]);\n        function visible(λ, φ) {\n            return Math.cos(λ) * Math.cos(φ) > cr;\n        }\n\n        function clipLine(listener) {\n            var point0, c0, v0, v00, clean;\n            return {\n                lineStart: function () {\n                    v00 = v0 = false;\n                    clean = 1;\n                },\n                point: function (λ, φ) {\n                    var point1 = [λ, φ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n                    if (!point0 && (v00 = v0 = v)) listener.lineStart();\n                    if (v !== v0) {\n                        point2 = intersect(point0, point1);\n                        if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n                            point1[0] += ε;\n                            point1[1] += ε;\n                            v = visible(point1[0], point1[1]);\n                        }\n                    }\n                    if (v !== v0) {\n                        clean = 0;\n                        if (v) {\n                            listener.lineStart();\n                            point2 = intersect(point1, point0);\n                            listener.point(point2[0], point2[1]);\n                        } else {\n                            point2 = intersect(point0, point1);\n                            listener.point(point2[0], point2[1]);\n                            listener.lineEnd();\n                        }\n                        point0 = point2;\n                    } else if (notHemisphere && point0 && smallRadius ^ v) {\n                        var t;\n                        if (!(c & c0) && (t = intersect(point1, point0, true))) {\n                            clean = 0;\n                            if (smallRadius) {\n                                listener.lineStart();\n                                listener.point(t[0][0], t[0][1]);\n                                listener.point(t[1][0], t[1][1]);\n                                listener.lineEnd();\n                            } else {\n                                listener.point(t[1][0], t[1][1]);\n                                listener.lineEnd();\n                                listener.lineStart();\n                                listener.point(t[0][0], t[0][1]);\n                            }\n                        }\n                    }\n                    if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n                        listener.point(point1[0], point1[1]);\n                    }\n                    point0 = point1, v0 = v, c0 = c;\n                },\n                lineEnd: function () {\n                    if (v0) listener.lineEnd();\n                    point0 = null;\n                },\n                clean: function () {\n                    return clean | (v00 && v0) << 1;\n                }\n            };\n        }\n\n        function intersect(a, b, two) {\n            var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n            var n1 = [1, 0, 0], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n            if (!determinant) return !two && a;\n            var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n            d3_geo_cartesianAdd(A, B);\n            var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n            if (t2 < 0) return;\n            var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n            d3_geo_cartesianAdd(q, A);\n            q = d3_geo_spherical(q);\n            if (!two) return q;\n            var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n            if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n            var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n            if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n            if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n                var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n                d3_geo_cartesianAdd(q1, A);\n                return [q, d3_geo_spherical(q1)];\n            }\n        }\n\n        function code(λ, φ) {\n            var r = smallRadius ? radius : π - radius, code = 0;\n            if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n            if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n            return code;\n        }\n    }\n\n    function d3_geom_clipLine(x0, y0, x1, y1) {\n        return function (line) {\n            var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n            r = x0 - ax;\n            if (!dx && r > 0) return;\n            r /= dx;\n            if (dx < 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            } else if (dx > 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            }\n            r = x1 - ax;\n            if (!dx && r < 0) return;\n            r /= dx;\n            if (dx < 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            } else if (dx > 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            }\n            r = y0 - ay;\n            if (!dy && r > 0) return;\n            r /= dy;\n            if (dy < 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            } else if (dy > 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            }\n            r = y1 - ay;\n            if (!dy && r < 0) return;\n            r /= dy;\n            if (dy < 0) {\n                if (r > t1) return;\n                if (r > t0) t0 = r;\n            } else if (dy > 0) {\n                if (r < t0) return;\n                if (r < t1) t1 = r;\n            }\n            if (t0 > 0) line.a = {\n                x: ax + t0 * dx,\n                y: ay + t0 * dy\n            };\n            if (t1 < 1) line.b = {\n                x: ax + t1 * dx,\n                y: ay + t1 * dy\n            };\n            return line;\n        };\n    }\n\n    var d3_geo_clipExtentMAX = 1e9;\n    d3.geo.clipExtent = function () {\n        var x0, y0, x1, y1, stream, clip, clipExtent = {\n            stream: function (output) {\n                if (stream) stream.valid = false;\n                stream = clip(output);\n                stream.valid = true;\n                return stream;\n            },\n            extent: function (_) {\n                if (!arguments.length) return [[x0, y0], [x1, y1]];\n                clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n                if (stream) stream.valid = false, stream = null;\n                return clipExtent;\n            }\n        };\n        return clipExtent.extent([[0, 0], [960, 500]]);\n    };\n    function d3_geo_clipExtent(x0, y0, x1, y1) {\n        return function (listener) {\n            var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n            var clip = {\n                point: point,\n                lineStart: lineStart,\n                lineEnd: lineEnd,\n                polygonStart: function () {\n                    listener = bufferListener;\n                    segments = [];\n                    polygon = [];\n                    clean = true;\n                },\n                polygonEnd: function () {\n                    listener = listener_;\n                    segments = d3.merge(segments);\n                    var clipStartInside = insidePolygon([x0, y1]), inside = clean && clipStartInside, visible = segments.length;\n                    if (inside || visible) {\n                        listener.polygonStart();\n                        if (inside) {\n                            listener.lineStart();\n                            interpolate(null, null, 1, listener);\n                            listener.lineEnd();\n                        }\n                        if (visible) {\n                            d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n                        }\n                        listener.polygonEnd();\n                    }\n                    segments = polygon = ring = null;\n                }\n            };\n\n            function insidePolygon(p) {\n                var wn = 0, n = polygon.length, y = p[1];\n                for (var i = 0; i < n; ++i) {\n                    for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n                        b = v[j];\n                        if (a[1] <= y) {\n                            if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n                        } else {\n                            if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n                        }\n                        a = b;\n                    }\n                }\n                return wn !== 0;\n            }\n\n            function interpolate(from, to, direction, listener) {\n                var a = 0, a1 = 0;\n                if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n                    do {\n                        listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n                    } while ((a = (a + direction + 4) % 4) !== a1);\n                } else {\n                    listener.point(to[0], to[1]);\n                }\n            }\n\n            function pointVisible(x, y) {\n                return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n            }\n\n            function point(x, y) {\n                if (pointVisible(x, y)) listener.point(x, y);\n            }\n\n            var x__, y__, v__, x_, y_, v_, first, clean;\n\n            function lineStart() {\n                clip.point = linePoint;\n                if (polygon) polygon.push(ring = []);\n                first = true;\n                v_ = false;\n                x_ = y_ = NaN;\n            }\n\n            function lineEnd() {\n                if (segments) {\n                    linePoint(x__, y__);\n                    if (v__ && v_) bufferListener.rejoin();\n                    segments.push(bufferListener.buffer());\n                }\n                clip.point = point;\n                if (v_) listener.lineEnd();\n            }\n\n            function linePoint(x, y) {\n                x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n                y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n                var v = pointVisible(x, y);\n                if (polygon) ring.push([x, y]);\n                if (first) {\n                    x__ = x, y__ = y, v__ = v;\n                    first = false;\n                    if (v) {\n                        listener.lineStart();\n                        listener.point(x, y);\n                    }\n                } else {\n                    if (v && v_) listener.point(x, y); else {\n                        var l = {\n                            a: {\n                                x: x_,\n                                y: y_\n                            },\n                            b: {\n                                x: x,\n                                y: y\n                            }\n                        };\n                        if (clipLine(l)) {\n                            if (!v_) {\n                                listener.lineStart();\n                                listener.point(l.a.x, l.a.y);\n                            }\n                            listener.point(l.b.x, l.b.y);\n                            if (!v) listener.lineEnd();\n                            clean = false;\n                        } else if (v) {\n                            listener.lineStart();\n                            listener.point(x, y);\n                            clean = false;\n                        }\n                    }\n                }\n                x_ = x, y_ = y, v_ = v;\n            }\n\n            return clip;\n        };\n        function corner(p, direction) {\n            return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n        }\n\n        function compare(a, b) {\n            return comparePoints(a.x, b.x);\n        }\n\n        function comparePoints(a, b) {\n            var ca = corner(a, 1), cb = corner(b, 1);\n            return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n        }\n    }\n\n    function d3_geo_compose(a, b) {\n        function compose(x, y) {\n            return x = a(x, y), b(x[0], x[1]);\n        }\n\n        if (a.invert && b.invert) compose.invert = function (x, y) {\n            return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n        };\n        return compose;\n    }\n\n    function d3_geo_conic(projectAt) {\n        var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n        p.parallels = function (_) {\n            if (!arguments.length) return [φ0 / π * 180, φ1 / π * 180];\n            return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n        };\n        return p;\n    }\n\n    function d3_geo_conicEqualArea(φ0, φ1) {\n        var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\n        function forward(λ, φ) {\n            var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n            return [ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ)];\n        }\n\n        forward.invert = function (x, y) {\n            var ρ0_y = ρ0 - y;\n            return [Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n))];\n        };\n        return forward;\n    }\n\n    (d3.geo.conicEqualArea = function () {\n        return d3_geo_conic(d3_geo_conicEqualArea);\n    }).raw = d3_geo_conicEqualArea;\n    d3.geo.albers = function () {\n        return d3.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);\n    };\n    d3.geo.albersUsa = function () {\n        var lower48 = d3.geo.albers();\n        var alaska = d3.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]);\n        var hawaii = d3.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]);\n        var point, pointStream = {\n            point: function (x, y) {\n                point = [x, y];\n            }\n        }, lower48Point, alaskaPoint, hawaiiPoint;\n\n        function albersUsa(coordinates) {\n            var x = coordinates[0], y = coordinates[1];\n            point = null;\n            (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n            return point;\n        }\n\n        albersUsa.invert = function (coordinates) {\n            var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n            return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n        };\n        albersUsa.stream = function (stream) {\n            var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n            return {\n                point: function (x, y) {\n                    lower48Stream.point(x, y);\n                    alaskaStream.point(x, y);\n                    hawaiiStream.point(x, y);\n                },\n                sphere: function () {\n                    lower48Stream.sphere();\n                    alaskaStream.sphere();\n                    hawaiiStream.sphere();\n                },\n                lineStart: function () {\n                    lower48Stream.lineStart();\n                    alaskaStream.lineStart();\n                    hawaiiStream.lineStart();\n                },\n                lineEnd: function () {\n                    lower48Stream.lineEnd();\n                    alaskaStream.lineEnd();\n                    hawaiiStream.lineEnd();\n                },\n                polygonStart: function () {\n                    lower48Stream.polygonStart();\n                    alaskaStream.polygonStart();\n                    hawaiiStream.polygonStart();\n                },\n                polygonEnd: function () {\n                    lower48Stream.polygonEnd();\n                    alaskaStream.polygonEnd();\n                    hawaiiStream.polygonEnd();\n                }\n            };\n        };\n        albersUsa.precision = function (_) {\n            if (!arguments.length) return lower48.precision();\n            lower48.precision(_);\n            alaska.precision(_);\n            hawaii.precision(_);\n            return albersUsa;\n        };\n        albersUsa.scale = function (_) {\n            if (!arguments.length) return lower48.scale();\n            lower48.scale(_);\n            alaska.scale(_ * .35);\n            hawaii.scale(_);\n            return albersUsa.translate(lower48.translate());\n        };\n        albersUsa.translate = function (_) {\n            if (!arguments.length) return lower48.translate();\n            var k = lower48.scale(), x = +_[0], y = +_[1];\n            lower48Point = lower48.translate(_).clipExtent([[x - .455 * k, y - .238 * k], [x + .455 * k, y + .238 * k]]).stream(pointStream).point;\n            alaskaPoint = alaska.translate([x - .307 * k, y + .201 * k]).clipExtent([[x - .425 * k + ε, y + .12 * k + ε], [x - .214 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n            hawaiiPoint = hawaii.translate([x - .205 * k, y + .212 * k]).clipExtent([[x - .214 * k + ε, y + .166 * k + ε], [x - .115 * k - ε, y + .234 * k - ε]]).stream(pointStream).point;\n            return albersUsa;\n        };\n        return albersUsa.scale(1070);\n    };\n    var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n        point: d3_noop,\n        lineStart: d3_noop,\n        lineEnd: d3_noop,\n        polygonStart: function () {\n            d3_geo_pathAreaPolygon = 0;\n            d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n        },\n        polygonEnd: function () {\n            d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n            d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n        }\n    };\n\n    function d3_geo_pathAreaRingStart() {\n        var x00, y00, x0, y0;\n        d3_geo_pathArea.point = function (x, y) {\n            d3_geo_pathArea.point = nextPoint;\n            x00 = x0 = x, y00 = y0 = y;\n        };\n        function nextPoint(x, y) {\n            d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n            x0 = x, y0 = y;\n        }\n\n        d3_geo_pathArea.lineEnd = function () {\n            nextPoint(x00, y00);\n        };\n    }\n\n    var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n    var d3_geo_pathBounds = {\n        point: d3_geo_pathBoundsPoint,\n        lineStart: d3_noop,\n        lineEnd: d3_noop,\n        polygonStart: d3_noop,\n        polygonEnd: d3_noop\n    };\n\n    function d3_geo_pathBoundsPoint(x, y) {\n        if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n        if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n        if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n        if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n    }\n\n    function d3_geo_pathBuffer() {\n        var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n        var stream = {\n            point: point,\n            lineStart: function () {\n                stream.point = pointLineStart;\n            },\n            lineEnd: lineEnd,\n            polygonStart: function () {\n                stream.lineEnd = lineEndPolygon;\n            },\n            polygonEnd: function () {\n                stream.lineEnd = lineEnd;\n                stream.point = point;\n            },\n            pointRadius: function (_) {\n                pointCircle = d3_geo_pathBufferCircle(_);\n                return stream;\n            },\n            result: function () {\n                if (buffer.length) {\n                    var result = buffer.join(\"\");\n                    buffer = [];\n                    return result;\n                }\n            }\n        };\n\n        function point(x, y) {\n            buffer.push(\"M\", x, \",\", y, pointCircle);\n        }\n\n        function pointLineStart(x, y) {\n            buffer.push(\"M\", x, \",\", y);\n            stream.point = pointLine;\n        }\n\n        function pointLine(x, y) {\n            buffer.push(\"L\", x, \",\", y);\n        }\n\n        function lineEnd() {\n            stream.point = point;\n        }\n\n        function lineEndPolygon() {\n            buffer.push(\"Z\");\n        }\n\n        return stream;\n    }\n\n    function d3_geo_pathBufferCircle(radius) {\n        return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n    }\n\n    var d3_geo_pathCentroid = {\n        point: d3_geo_pathCentroidPoint,\n        lineStart: d3_geo_pathCentroidLineStart,\n        lineEnd: d3_geo_pathCentroidLineEnd,\n        polygonStart: function () {\n            d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n        },\n        polygonEnd: function () {\n            d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n            d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n            d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n        }\n    };\n\n    function d3_geo_pathCentroidPoint(x, y) {\n        d3_geo_centroidX0 += x;\n        d3_geo_centroidY0 += y;\n        ++d3_geo_centroidZ0;\n    }\n\n    function d3_geo_pathCentroidLineStart() {\n        var x0, y0;\n        d3_geo_pathCentroid.point = function (x, y) {\n            d3_geo_pathCentroid.point = nextPoint;\n            d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n        };\n        function nextPoint(x, y) {\n            var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n            d3_geo_centroidX1 += z * (x0 + x) / 2;\n            d3_geo_centroidY1 += z * (y0 + y) / 2;\n            d3_geo_centroidZ1 += z;\n            d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n        }\n    }\n\n    function d3_geo_pathCentroidLineEnd() {\n        d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n    }\n\n    function d3_geo_pathCentroidRingStart() {\n        var x00, y00, x0, y0;\n        d3_geo_pathCentroid.point = function (x, y) {\n            d3_geo_pathCentroid.point = nextPoint;\n            d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n        };\n        function nextPoint(x, y) {\n            var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n            d3_geo_centroidX1 += z * (x0 + x) / 2;\n            d3_geo_centroidY1 += z * (y0 + y) / 2;\n            d3_geo_centroidZ1 += z;\n            z = y0 * x - x0 * y;\n            d3_geo_centroidX2 += z * (x0 + x);\n            d3_geo_centroidY2 += z * (y0 + y);\n            d3_geo_centroidZ2 += z * 3;\n            d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n        }\n\n        d3_geo_pathCentroid.lineEnd = function () {\n            nextPoint(x00, y00);\n        };\n    }\n\n    function d3_geo_pathContext(context) {\n        var pointRadius = 4.5;\n        var stream = {\n            point: point,\n            lineStart: function () {\n                stream.point = pointLineStart;\n            },\n            lineEnd: lineEnd,\n            polygonStart: function () {\n                stream.lineEnd = lineEndPolygon;\n            },\n            polygonEnd: function () {\n                stream.lineEnd = lineEnd;\n                stream.point = point;\n            },\n            pointRadius: function (_) {\n                pointRadius = _;\n                return stream;\n            },\n            result: d3_noop\n        };\n\n        function point(x, y) {\n            context.moveTo(x, y);\n            context.arc(x, y, pointRadius, 0, τ);\n        }\n\n        function pointLineStart(x, y) {\n            context.moveTo(x, y);\n            stream.point = pointLine;\n        }\n\n        function pointLine(x, y) {\n            context.lineTo(x, y);\n        }\n\n        function lineEnd() {\n            stream.point = point;\n        }\n\n        function lineEndPolygon() {\n            context.closePath();\n        }\n\n        return stream;\n    }\n\n    function d3_geo_resample(project) {\n        var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\n        function resample(stream) {\n            return (maxDepth ? resampleRecursive : resampleNone)(stream);\n        }\n\n        function resampleNone(stream) {\n            return d3_geo_transformPoint(stream, function (x, y) {\n                x = project(x, y);\n                stream.point(x[0], x[1]);\n            });\n        }\n\n        function resampleRecursive(stream) {\n            var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n            var resample = {\n                point: point,\n                lineStart: lineStart,\n                lineEnd: lineEnd,\n                polygonStart: function () {\n                    stream.polygonStart();\n                    resample.lineStart = ringStart;\n                },\n                polygonEnd: function () {\n                    stream.polygonEnd();\n                    resample.lineStart = lineStart;\n                }\n            };\n\n            function point(x, y) {\n                x = project(x, y);\n                stream.point(x[0], x[1]);\n            }\n\n            function lineStart() {\n                x0 = NaN;\n                resample.point = linePoint;\n                stream.lineStart();\n            }\n\n            function linePoint(λ, φ) {\n                var c = d3_geo_cartesian([λ, φ]), p = project(λ, φ);\n                resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n                stream.point(x0, y0);\n            }\n\n            function lineEnd() {\n                resample.point = point;\n                stream.lineEnd();\n            }\n\n            function ringStart() {\n                lineStart();\n                resample.point = ringPoint;\n                resample.lineEnd = ringEnd;\n            }\n\n            function ringPoint(λ, φ) {\n                linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n                resample.point = linePoint;\n            }\n\n            function ringEnd() {\n                resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n                resample.lineEnd = lineEnd;\n                lineEnd();\n            }\n\n            return resample;\n        }\n\n        function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n            var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n            if (d2 > 4 * δ2 && depth--) {\n                var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n                if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n                    resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n                    stream.point(x2, y2);\n                    resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n                }\n            }\n        }\n\n        resample.precision = function (_) {\n            if (!arguments.length) return Math.sqrt(δ2);\n            maxDepth = (δ2 = _ * _) > 0 && 16;\n            return resample;\n        };\n        return resample;\n    }\n\n    d3.geo.path = function () {\n        var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\n        function path(object) {\n            if (object) {\n                if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n                if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n                d3.geo.stream(object, cacheStream);\n            }\n            return contextStream.result();\n        }\n\n        path.area = function (object) {\n            d3_geo_pathAreaSum = 0;\n            d3.geo.stream(object, projectStream(d3_geo_pathArea));\n            return d3_geo_pathAreaSum;\n        };\n        path.centroid = function (object) {\n            d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n            d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n            return d3_geo_centroidZ2 ? [d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2] : d3_geo_centroidZ1 ? [d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1] : d3_geo_centroidZ0 ? [d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0] : [NaN, NaN];\n        };\n        path.bounds = function (object) {\n            d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n            d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n            return [[d3_geo_pathBoundsX0, d3_geo_pathBoundsY0], [d3_geo_pathBoundsX1, d3_geo_pathBoundsY1]];\n        };\n        path.projection = function (_) {\n            if (!arguments.length) return projection;\n            projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n            return reset();\n        };\n        path.context = function (_) {\n            if (!arguments.length) return context;\n            contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n            if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n            return reset();\n        };\n        path.pointRadius = function (_) {\n            if (!arguments.length) return pointRadius;\n            pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n            return path;\n        };\n        function reset() {\n            cacheStream = null;\n            return path;\n        }\n\n        return path.projection(d3.geo.albersUsa()).context(null);\n    };\n    function d3_geo_pathProjectStream(project) {\n        var resample = d3_geo_resample(function (x, y) {\n            return project([x * d3_degrees, y * d3_degrees]);\n        });\n        return function (stream) {\n            return d3_geo_projectionRadians(resample(stream));\n        };\n    }\n\n    d3.geo.transform = function (methods) {\n        return {\n            stream: function (stream) {\n                var transform = new d3_geo_transform(stream);\n                for (var k in methods) transform[k] = methods[k];\n                return transform;\n            }\n        };\n    };\n    function d3_geo_transform(stream) {\n        this.stream = stream;\n    }\n\n    d3_geo_transform.prototype = {\n        point: function (x, y) {\n            this.stream.point(x, y);\n        },\n        sphere: function () {\n            this.stream.sphere();\n        },\n        lineStart: function () {\n            this.stream.lineStart();\n        },\n        lineEnd: function () {\n            this.stream.lineEnd();\n        },\n        polygonStart: function () {\n            this.stream.polygonStart();\n        },\n        polygonEnd: function () {\n            this.stream.polygonEnd();\n        }\n    };\n    function d3_geo_transformPoint(stream, point) {\n        return {\n            point: point,\n            sphere: function () {\n                stream.sphere();\n            },\n            lineStart: function () {\n                stream.lineStart();\n            },\n            lineEnd: function () {\n                stream.lineEnd();\n            },\n            polygonStart: function () {\n                stream.polygonStart();\n            },\n            polygonEnd: function () {\n                stream.polygonEnd();\n            }\n        };\n    }\n\n    d3.geo.projection = d3_geo_projection;\n    d3.geo.projectionMutator = d3_geo_projectionMutator;\n    function d3_geo_projection(project) {\n        return d3_geo_projectionMutator(function () {\n            return project;\n        })();\n    }\n\n    function d3_geo_projectionMutator(projectAt) {\n        var project, rotate, projectRotate, projectResample = d3_geo_resample(function (x, y) {\n            x = project(x, y);\n            return [x[0] * k + δx, δy - x[1] * k];\n        }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\n        function projection(point) {\n            point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n            return [point[0] * k + δx, δy - point[1] * k];\n        }\n\n        function invert(point) {\n            point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n            return point && [point[0] * d3_degrees, point[1] * d3_degrees];\n        }\n\n        projection.stream = function (output) {\n            if (stream) stream.valid = false;\n            stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n            stream.valid = true;\n            return stream;\n        };\n        projection.clipAngle = function (_) {\n            if (!arguments.length) return clipAngle;\n            preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n            return invalidate();\n        };\n        projection.clipExtent = function (_) {\n            if (!arguments.length) return clipExtent;\n            clipExtent = _;\n            postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n            return invalidate();\n        };\n        projection.scale = function (_) {\n            if (!arguments.length) return k;\n            k = +_;\n            return reset();\n        };\n        projection.translate = function (_) {\n            if (!arguments.length) return [x, y];\n            x = +_[0];\n            y = +_[1];\n            return reset();\n        };\n        projection.center = function (_) {\n            if (!arguments.length) return [λ * d3_degrees, φ * d3_degrees];\n            λ = _[0] % 360 * d3_radians;\n            φ = _[1] % 360 * d3_radians;\n            return reset();\n        };\n        projection.rotate = function (_) {\n            if (!arguments.length) return [δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees];\n            δλ = _[0] % 360 * d3_radians;\n            δφ = _[1] % 360 * d3_radians;\n            δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n            return reset();\n        };\n        d3.rebind(projection, projectResample, \"precision\");\n        function reset() {\n            projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n            var center = project(λ, φ);\n            δx = x - center[0] * k;\n            δy = y + center[1] * k;\n            return invalidate();\n        }\n\n        function invalidate() {\n            if (stream) stream.valid = false, stream = null;\n            return projection;\n        }\n\n        return function () {\n            project = projectAt.apply(this, arguments);\n            projection.invert = project.invert && invert;\n            return reset();\n        };\n    }\n\n    function d3_geo_projectionRadians(stream) {\n        return d3_geo_transformPoint(stream, function (x, y) {\n            stream.point(x * d3_radians, y * d3_radians);\n        });\n    }\n\n    function d3_geo_equirectangular(λ, φ) {\n        return [λ, φ];\n    }\n\n    (d3.geo.equirectangular = function () {\n        return d3_geo_projection(d3_geo_equirectangular);\n    }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n    d3.geo.rotation = function (rotate) {\n        rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n        function forward(coordinates) {\n            coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n            return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n        }\n\n        forward.invert = function (coordinates) {\n            coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n            return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n        };\n        return forward;\n    };\n    function d3_geo_identityRotation(λ, φ) {\n        return [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n    }\n\n    d3_geo_identityRotation.invert = d3_geo_equirectangular;\n    function d3_geo_rotation(δλ, δφ, δγ) {\n        return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n    }\n\n    function d3_geo_forwardRotationλ(δλ) {\n        return function (λ, φ) {\n            return λ += δλ, [λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ];\n        };\n    }\n\n    function d3_geo_rotationλ(δλ) {\n        var rotation = d3_geo_forwardRotationλ(δλ);\n        rotation.invert = d3_geo_forwardRotationλ(-δλ);\n        return rotation;\n    }\n\n    function d3_geo_rotationφγ(δφ, δγ) {\n        var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\n        function rotation(λ, φ) {\n            var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n            return [Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ)];\n        }\n\n        rotation.invert = function (λ, φ) {\n            var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n            return [Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ)];\n        };\n        return rotation;\n    }\n\n    d3.geo.circle = function () {\n        var origin = [0, 0], angle, precision = 6, interpolate;\n\n        function circle() {\n            var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n            interpolate(null, null, 1, {\n                point: function (x, y) {\n                    ring.push(x = rotate(x, y));\n                    x[0] *= d3_degrees, x[1] *= d3_degrees;\n                }\n            });\n            return {\n                type: \"Polygon\",\n                coordinates: [ring]\n            };\n        }\n\n        circle.origin = function (x) {\n            if (!arguments.length) return origin;\n            origin = x;\n            return circle;\n        };\n        circle.angle = function (x) {\n            if (!arguments.length) return angle;\n            interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n            return circle;\n        };\n        circle.precision = function (_) {\n            if (!arguments.length) return precision;\n            interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n            return circle;\n        };\n        return circle.angle(90);\n    };\n    function d3_geo_circleInterpolate(radius, precision) {\n        var cr = Math.cos(radius), sr = Math.sin(radius);\n        return function (from, to, direction, listener) {\n            var step = direction * precision;\n            if (from != null) {\n                from = d3_geo_circleAngle(cr, from);\n                to = d3_geo_circleAngle(cr, to);\n                if (direction > 0 ? from < to : from > to) from += direction * τ;\n            } else {\n                from = radius + direction * τ;\n                to = radius - .5 * step;\n            }\n            for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n                listener.point((point = d3_geo_spherical([cr, -sr * Math.cos(t), -sr * Math.sin(t)]))[0], point[1]);\n            }\n        };\n    }\n\n    function d3_geo_circleAngle(cr, point) {\n        var a = d3_geo_cartesian(point);\n        a[0] -= cr;\n        d3_geo_cartesianNormalize(a);\n        var angle = d3_acos(-a[1]);\n        return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n    }\n\n    d3.geo.distance = function (a, b) {\n        var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n        return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n    };\n    d3.geo.graticule = function () {\n        var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\n        function graticule() {\n            return {\n                type: \"MultiLineString\",\n                coordinates: lines()\n            };\n        }\n\n        function lines() {\n            return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function (x) {\n                return abs(x % DX) > ε;\n            }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function (y) {\n                return abs(y % DY) > ε;\n            }).map(y));\n        }\n\n        graticule.lines = function () {\n            return lines().map(function (coordinates) {\n                return {\n                    type: \"LineString\",\n                    coordinates: coordinates\n                };\n            });\n        };\n        graticule.outline = function () {\n            return {\n                type: \"Polygon\",\n                coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]\n            };\n        };\n        graticule.extent = function (_) {\n            if (!arguments.length) return graticule.minorExtent();\n            return graticule.majorExtent(_).minorExtent(_);\n        };\n        graticule.majorExtent = function (_) {\n            if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n            X0 = +_[0][0], X1 = +_[1][0];\n            Y0 = +_[0][1], Y1 = +_[1][1];\n            if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n            if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n            return graticule.precision(precision);\n        };\n        graticule.minorExtent = function (_) {\n            if (!arguments.length) return [[x0, y0], [x1, y1]];\n            x0 = +_[0][0], x1 = +_[1][0];\n            y0 = +_[0][1], y1 = +_[1][1];\n            if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n            if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n            return graticule.precision(precision);\n        };\n        graticule.step = function (_) {\n            if (!arguments.length) return graticule.minorStep();\n            return graticule.majorStep(_).minorStep(_);\n        };\n        graticule.majorStep = function (_) {\n            if (!arguments.length) return [DX, DY];\n            DX = +_[0], DY = +_[1];\n            return graticule;\n        };\n        graticule.minorStep = function (_) {\n            if (!arguments.length) return [dx, dy];\n            dx = +_[0], dy = +_[1];\n            return graticule;\n        };\n        graticule.precision = function (_) {\n            if (!arguments.length) return precision;\n            precision = +_;\n            x = d3_geo_graticuleX(y0, y1, 90);\n            y = d3_geo_graticuleY(x0, x1, precision);\n            X = d3_geo_graticuleX(Y0, Y1, 90);\n            Y = d3_geo_graticuleY(X0, X1, precision);\n            return graticule;\n        };\n        return graticule.majorExtent([[-180, -90 + ε], [180, 90 - ε]]).minorExtent([[-180, -80 - ε], [180, 80 + ε]]);\n    };\n    function d3_geo_graticuleX(y0, y1, dy) {\n        var y = d3.range(y0, y1 - ε, dy).concat(y1);\n        return function (x) {\n            return y.map(function (y) {\n                return [x, y];\n            });\n        };\n    }\n\n    function d3_geo_graticuleY(x0, x1, dx) {\n        var x = d3.range(x0, x1 - ε, dx).concat(x1);\n        return function (y) {\n            return x.map(function (x) {\n                return [x, y];\n            });\n        };\n    }\n\n    function d3_source(d) {\n        return d.source;\n    }\n\n    function d3_target(d) {\n        return d.target;\n    }\n\n    d3.geo.greatArc = function () {\n        var source = d3_source, source_, target = d3_target, target_;\n\n        function greatArc() {\n            return {\n                type: \"LineString\",\n                coordinates: [source_ || source.apply(this, arguments), target_ || target.apply(this, arguments)]\n            };\n        }\n\n        greatArc.distance = function () {\n            return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n        };\n        greatArc.source = function (_) {\n            if (!arguments.length) return source;\n            source = _, source_ = typeof _ === \"function\" ? null : _;\n            return greatArc;\n        };\n        greatArc.target = function (_) {\n            if (!arguments.length) return target;\n            target = _, target_ = typeof _ === \"function\" ? null : _;\n            return greatArc;\n        };\n        greatArc.precision = function () {\n            return arguments.length ? greatArc : 0;\n        };\n        return greatArc;\n    };\n    d3.geo.interpolate = function (source, target) {\n        return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n    };\n    function d3_geo_interpolate(x0, y0, x1, y1) {\n        var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n        var interpolate = d ? function (t) {\n            var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n            return [Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees];\n        } : function () {\n            return [x0 * d3_degrees, y0 * d3_degrees];\n        };\n        interpolate.distance = d;\n        return interpolate;\n    }\n\n    d3.geo.length = function (object) {\n        d3_geo_lengthSum = 0;\n        d3.geo.stream(object, d3_geo_length);\n        return d3_geo_lengthSum;\n    };\n    var d3_geo_lengthSum;\n    var d3_geo_length = {\n        sphere: d3_noop,\n        point: d3_noop,\n        lineStart: d3_geo_lengthLineStart,\n        lineEnd: d3_noop,\n        polygonStart: d3_noop,\n        polygonEnd: d3_noop\n    };\n\n    function d3_geo_lengthLineStart() {\n        var λ0, sinφ0, cosφ0;\n        d3_geo_length.point = function (λ, φ) {\n            λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n            d3_geo_length.point = nextPoint;\n        };\n        d3_geo_length.lineEnd = function () {\n            d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n        };\n        function nextPoint(λ, φ) {\n            var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n            d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n            λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n        }\n    }\n\n    function d3_geo_azimuthal(scale, angle) {\n        function azimuthal(λ, φ) {\n            var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n            return [k * cosφ * Math.sin(λ), k * Math.sin(φ)];\n        }\n\n        azimuthal.invert = function (x, y) {\n            var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n            return [Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ)];\n        };\n        return azimuthal;\n    }\n\n    var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function (cosλcosφ) {\n        return Math.sqrt(2 / (1 + cosλcosφ));\n    }, function (ρ) {\n        return 2 * Math.asin(ρ / 2);\n    });\n    (d3.geo.azimuthalEqualArea = function () {\n        return d3_geo_projection(d3_geo_azimuthalEqualArea);\n    }).raw = d3_geo_azimuthalEqualArea;\n    var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function (cosλcosφ) {\n        var c = Math.acos(cosλcosφ);\n        return c && c / Math.sin(c);\n    }, d3_identity);\n    (d3.geo.azimuthalEquidistant = function () {\n        return d3_geo_projection(d3_geo_azimuthalEquidistant);\n    }).raw = d3_geo_azimuthalEquidistant;\n    function d3_geo_conicConformal(φ0, φ1) {\n        var cosφ0 = Math.cos(φ0), t = function (φ) {\n            return Math.tan(π / 4 + φ / 2);\n        }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n        if (!n) return d3_geo_mercator;\n        function forward(λ, φ) {\n            var ρ = abs(abs(φ) - halfπ) < ε ? 0 : F / Math.pow(t(φ), n);\n            return [ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ)];\n        }\n\n        forward.invert = function (x, y) {\n            var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n            return [Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ];\n        };\n        return forward;\n    }\n\n    (d3.geo.conicConformal = function () {\n        return d3_geo_conic(d3_geo_conicConformal);\n    }).raw = d3_geo_conicConformal;\n    function d3_geo_conicEquidistant(φ0, φ1) {\n        var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n        if (abs(n) < ε) return d3_geo_equirectangular;\n        function forward(λ, φ) {\n            var ρ = G - φ;\n            return [ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ)];\n        }\n\n        forward.invert = function (x, y) {\n            var ρ0_y = G - y;\n            return [Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y)];\n        };\n        return forward;\n    }\n\n    (d3.geo.conicEquidistant = function () {\n        return d3_geo_conic(d3_geo_conicEquidistant);\n    }).raw = d3_geo_conicEquidistant;\n    var d3_geo_gnomonic = d3_geo_azimuthal(function (cosλcosφ) {\n        return 1 / cosλcosφ;\n    }, Math.atan);\n    (d3.geo.gnomonic = function () {\n        return d3_geo_projection(d3_geo_gnomonic);\n    }).raw = d3_geo_gnomonic;\n    function d3_geo_mercator(λ, φ) {\n        return [λ, Math.log(Math.tan(π / 4 + φ / 2))];\n    }\n\n    d3_geo_mercator.invert = function (x, y) {\n        return [x, 2 * Math.atan(Math.exp(y)) - halfπ];\n    };\n    function d3_geo_mercatorProjection(project) {\n        var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n        m.scale = function () {\n            var v = scale.apply(m, arguments);\n            return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n        };\n        m.translate = function () {\n            var v = translate.apply(m, arguments);\n            return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n        };\n        m.clipExtent = function (_) {\n            var v = clipExtent.apply(m, arguments);\n            if (v === m) {\n                if (clipAuto = _ == null) {\n                    var k = π * scale(), t = translate();\n                    clipExtent([[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]]);\n                }\n            } else if (clipAuto) {\n                v = null;\n            }\n            return v;\n        };\n        return m.clipExtent(null);\n    }\n\n    (d3.geo.mercator = function () {\n        return d3_geo_mercatorProjection(d3_geo_mercator);\n    }).raw = d3_geo_mercator;\n    var d3_geo_orthographic = d3_geo_azimuthal(function () {\n        return 1;\n    }, Math.asin);\n    (d3.geo.orthographic = function () {\n        return d3_geo_projection(d3_geo_orthographic);\n    }).raw = d3_geo_orthographic;\n    var d3_geo_stereographic = d3_geo_azimuthal(function (cosλcosφ) {\n        return 1 / (1 + cosλcosφ);\n    }, function (ρ) {\n        return 2 * Math.atan(ρ);\n    });\n    (d3.geo.stereographic = function () {\n        return d3_geo_projection(d3_geo_stereographic);\n    }).raw = d3_geo_stereographic;\n    function d3_geo_transverseMercator(λ, φ) {\n        return [Math.log(Math.tan(π / 4 + φ / 2)), -λ];\n    }\n\n    d3_geo_transverseMercator.invert = function (x, y) {\n        return [-y, 2 * Math.atan(Math.exp(x)) - halfπ];\n    };\n    (d3.geo.transverseMercator = function () {\n        var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n        projection.center = function (_) {\n            return _ ? center([-_[1], _[0]]) : (_ = center(), [-_[1], _[0]]);\n        };\n        projection.rotate = function (_) {\n            return _ ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(),\n                [_[0], _[1], _[2] - 90]);\n        };\n        return projection.rotate([0, 0]);\n    }).raw = d3_geo_transverseMercator;\n    d3.geom = {};\n    function d3_geom_pointX(d) {\n        return d[0];\n    }\n\n    function d3_geom_pointY(d) {\n        return d[1];\n    }\n\n    d3.geom.hull = function (vertices) {\n        var x = d3_geom_pointX, y = d3_geom_pointY;\n        if (arguments.length) return hull(vertices);\n        function hull(data) {\n            if (data.length < 3) return [];\n            var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n            for (i = 0; i < n; i++) {\n                points.push([+fx.call(this, data[i], i), +fy.call(this, data[i], i), i]);\n            }\n            points.sort(d3_geom_hullOrder);\n            for (i = 0; i < n; i++) flippedPoints.push([points[i][0], -points[i][1]]);\n            var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n            var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n            for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n            for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n            return polygon;\n        }\n\n        hull.x = function (_) {\n            return arguments.length ? (x = _, hull) : x;\n        };\n        hull.y = function (_) {\n            return arguments.length ? (y = _, hull) : y;\n        };\n        return hull;\n    };\n    function d3_geom_hullUpper(points) {\n        var n = points.length, hull = [0, 1], hs = 2;\n        for (var i = 2; i < n; i++) {\n            while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n            hull[hs++] = i;\n        }\n        return hull.slice(0, hs);\n    }\n\n    function d3_geom_hullOrder(a, b) {\n        return a[0] - b[0] || a[1] - b[1];\n    }\n\n    d3.geom.polygon = function (coordinates) {\n        d3_subclass(coordinates, d3_geom_polygonPrototype);\n        return coordinates;\n    };\n    var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n    d3_geom_polygonPrototype.area = function () {\n        var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n        while (++i < n) {\n            a = b;\n            b = this[i];\n            area += a[1] * b[0] - a[0] * b[1];\n        }\n        return area * .5;\n    };\n    d3_geom_polygonPrototype.centroid = function (k) {\n        var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n        if (!arguments.length) k = -1 / (6 * this.area());\n        while (++i < n) {\n            a = b;\n            b = this[i];\n            c = a[0] * b[1] - b[0] * a[1];\n            x += (a[0] + b[0]) * c;\n            y += (a[1] + b[1]) * c;\n        }\n        return [x * k, y * k];\n    };\n    d3_geom_polygonPrototype.clip = function (subject) {\n        var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n        while (++i < n) {\n            input = subject.slice();\n            subject.length = 0;\n            b = this[i];\n            c = input[(m = input.length - closed) - 1];\n            j = -1;\n            while (++j < m) {\n                d = input[j];\n                if (d3_geom_polygonInside(d, a, b)) {\n                    if (!d3_geom_polygonInside(c, a, b)) {\n                        subject.push(d3_geom_polygonIntersect(c, d, a, b));\n                    }\n                    subject.push(d);\n                } else if (d3_geom_polygonInside(c, a, b)) {\n                    subject.push(d3_geom_polygonIntersect(c, d, a, b));\n                }\n                c = d;\n            }\n            if (closed) subject.push(subject[0]);\n            a = b;\n        }\n        return subject;\n    };\n    function d3_geom_polygonInside(p, a, b) {\n        return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n    }\n\n    function d3_geom_polygonIntersect(c, d, a, b) {\n        var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n        return [x1 + ua * x21, y1 + ua * y21];\n    }\n\n    function d3_geom_polygonClosed(coordinates) {\n        var a = coordinates[0], b = coordinates[coordinates.length - 1];\n        return !(a[0] - b[0] || a[1] - b[1]);\n    }\n\n    var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\n    function d3_geom_voronoiBeach() {\n        d3_geom_voronoiRedBlackNode(this);\n        this.edge = this.site = this.circle = null;\n    }\n\n    function d3_geom_voronoiCreateBeach(site) {\n        var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n        beach.site = site;\n        return beach;\n    }\n\n    function d3_geom_voronoiDetachBeach(beach) {\n        d3_geom_voronoiDetachCircle(beach);\n        d3_geom_voronoiBeaches.remove(beach);\n        d3_geom_voronoiBeachPool.push(beach);\n        d3_geom_voronoiRedBlackNode(beach);\n    }\n\n    function d3_geom_voronoiRemoveBeach(beach) {\n        var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n            x: x,\n            y: y\n        }, previous = beach.P, next = beach.N, disappearing = [beach];\n        d3_geom_voronoiDetachBeach(beach);\n        var lArc = previous;\n        while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n            previous = lArc.P;\n            disappearing.unshift(lArc);\n            d3_geom_voronoiDetachBeach(lArc);\n            lArc = previous;\n        }\n        disappearing.unshift(lArc);\n        d3_geom_voronoiDetachCircle(lArc);\n        var rArc = next;\n        while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n            next = rArc.N;\n            disappearing.push(rArc);\n            d3_geom_voronoiDetachBeach(rArc);\n            rArc = next;\n        }\n        disappearing.push(rArc);\n        d3_geom_voronoiDetachCircle(rArc);\n        var nArcs = disappearing.length, iArc;\n        for (iArc = 1; iArc < nArcs; ++iArc) {\n            rArc = disappearing[iArc];\n            lArc = disappearing[iArc - 1];\n            d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n        }\n        lArc = disappearing[0];\n        rArc = disappearing[nArcs - 1];\n        rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n        d3_geom_voronoiAttachCircle(lArc);\n        d3_geom_voronoiAttachCircle(rArc);\n    }\n\n    function d3_geom_voronoiAddBeach(site) {\n        var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n        while (node) {\n            dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n            if (dxl > ε) node = node.L; else {\n                dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n                if (dxr > ε) {\n                    if (!node.R) {\n                        lArc = node;\n                        break;\n                    }\n                    node = node.R;\n                } else {\n                    if (dxl > -ε) {\n                        lArc = node.P;\n                        rArc = node;\n                    } else if (dxr > -ε) {\n                        lArc = node;\n                        rArc = node.N;\n                    } else {\n                        lArc = rArc = node;\n                    }\n                    break;\n                }\n            }\n        }\n        var newArc = d3_geom_voronoiCreateBeach(site);\n        d3_geom_voronoiBeaches.insert(lArc, newArc);\n        if (!lArc && !rArc) return;\n        if (lArc === rArc) {\n            d3_geom_voronoiDetachCircle(lArc);\n            rArc = d3_geom_voronoiCreateBeach(lArc.site);\n            d3_geom_voronoiBeaches.insert(newArc, rArc);\n            newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n            d3_geom_voronoiAttachCircle(lArc);\n            d3_geom_voronoiAttachCircle(rArc);\n            return;\n        }\n        if (!rArc) {\n            newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n            return;\n        }\n        d3_geom_voronoiDetachCircle(lArc);\n        d3_geom_voronoiDetachCircle(rArc);\n        var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n            x: (cy * hb - by * hc) / d + ax,\n            y: (bx * hc - cx * hb) / d + ay\n        };\n        d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n        newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n        rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n        d3_geom_voronoiAttachCircle(lArc);\n        d3_geom_voronoiAttachCircle(rArc);\n    }\n\n    function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n        var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n        if (!pby2) return rfocx;\n        var lArc = arc.P;\n        if (!lArc) return -Infinity;\n        site = lArc.site;\n        var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n        if (!plby2) return lfocx;\n        var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n        if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n        return (rfocx + lfocx) / 2;\n    }\n\n    function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n        var rArc = arc.N;\n        if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n        var site = arc.site;\n        return site.y === directrix ? site.x : Infinity;\n    }\n\n    function d3_geom_voronoiCell(site) {\n        this.site = site;\n        this.edges = [];\n    }\n\n    d3_geom_voronoiCell.prototype.prepare = function () {\n        var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n        while (iHalfEdge--) {\n            edge = halfEdges[iHalfEdge].edge;\n            if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n        }\n        halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n        return halfEdges.length;\n    };\n    function d3_geom_voronoiCloseCells(extent) {\n        var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n        while (iCell--) {\n            cell = cells[iCell];\n            if (!cell || !cell.prepare()) continue;\n            halfEdges = cell.edges;\n            nHalfEdges = halfEdges.length;\n            iHalfEdge = 0;\n            while (iHalfEdge < nHalfEdges) {\n                end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n                start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n                if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n                    halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n                        x: x0,\n                        y: abs(x2 - x0) < ε ? y2 : y1\n                    } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n                        x: abs(y2 - y1) < ε ? x2 : x1,\n                        y: y1\n                    } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n                        x: x1,\n                        y: abs(x2 - x1) < ε ? y2 : y0\n                    } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n                        x: abs(y2 - y0) < ε ? x2 : x0,\n                        y: y0\n                    } : null), cell.site, null));\n                    ++nHalfEdges;\n                }\n            }\n        }\n    }\n\n    function d3_geom_voronoiHalfEdgeOrder(a, b) {\n        return b.angle - a.angle;\n    }\n\n    function d3_geom_voronoiCircle() {\n        d3_geom_voronoiRedBlackNode(this);\n        this.x = this.y = this.arc = this.site = this.cy = null;\n    }\n\n    function d3_geom_voronoiAttachCircle(arc) {\n        var lArc = arc.P, rArc = arc.N;\n        if (!lArc || !rArc) return;\n        var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n        if (lSite === rSite) return;\n        var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n        var d = 2 * (ax * cy - ay * cx);\n        if (d >= -ε2) return;\n        var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n        var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n        circle.arc = arc;\n        circle.site = cSite;\n        circle.x = x + bx;\n        circle.y = cy + Math.sqrt(x * x + y * y);\n        circle.cy = cy;\n        arc.circle = circle;\n        var before = null, node = d3_geom_voronoiCircles._;\n        while (node) {\n            if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n                if (node.L) node = node.L; else {\n                    before = node.P;\n                    break;\n                }\n            } else {\n                if (node.R) node = node.R; else {\n                    before = node;\n                    break;\n                }\n            }\n        }\n        d3_geom_voronoiCircles.insert(before, circle);\n        if (!before) d3_geom_voronoiFirstCircle = circle;\n    }\n\n    function d3_geom_voronoiDetachCircle(arc) {\n        var circle = arc.circle;\n        if (circle) {\n            if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n            d3_geom_voronoiCircles.remove(circle);\n            d3_geom_voronoiCirclePool.push(circle);\n            d3_geom_voronoiRedBlackNode(circle);\n            arc.circle = null;\n        }\n    }\n\n    function d3_geom_voronoiClipEdges(extent) {\n        var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n        while (i--) {\n            e = edges[i];\n            if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n                e.a = e.b = null;\n                edges.splice(i, 1);\n            }\n        }\n    }\n\n    function d3_geom_voronoiConnectEdge(edge, extent) {\n        var vb = edge.b;\n        if (vb) return true;\n        var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n        if (ry === ly) {\n            if (fx < x0 || fx >= x1) return;\n            if (lx > rx) {\n                if (!va) va = {\n                    x: fx,\n                    y: y0\n                }; else if (va.y >= y1) return;\n                vb = {\n                    x: fx,\n                    y: y1\n                };\n            } else {\n                if (!va) va = {\n                    x: fx,\n                    y: y1\n                }; else if (va.y < y0) return;\n                vb = {\n                    x: fx,\n                    y: y0\n                };\n            }\n        } else {\n            fm = (lx - rx) / (ry - ly);\n            fb = fy - fm * fx;\n            if (fm < -1 || fm > 1) {\n                if (lx > rx) {\n                    if (!va) va = {\n                        x: (y0 - fb) / fm,\n                        y: y0\n                    }; else if (va.y >= y1) return;\n                    vb = {\n                        x: (y1 - fb) / fm,\n                        y: y1\n                    };\n                } else {\n                    if (!va) va = {\n                        x: (y1 - fb) / fm,\n                        y: y1\n                    }; else if (va.y < y0) return;\n                    vb = {\n                        x: (y0 - fb) / fm,\n                        y: y0\n                    };\n                }\n            } else {\n                if (ly < ry) {\n                    if (!va) va = {\n                        x: x0,\n                        y: fm * x0 + fb\n                    }; else if (va.x >= x1) return;\n                    vb = {\n                        x: x1,\n                        y: fm * x1 + fb\n                    };\n                } else {\n                    if (!va) va = {\n                        x: x1,\n                        y: fm * x1 + fb\n                    }; else if (va.x < x0) return;\n                    vb = {\n                        x: x0,\n                        y: fm * x0 + fb\n                    };\n                }\n            }\n        }\n        edge.a = va;\n        edge.b = vb;\n        return true;\n    }\n\n    function d3_geom_voronoiEdge(lSite, rSite) {\n        this.l = lSite;\n        this.r = rSite;\n        this.a = this.b = null;\n    }\n\n    function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n        var edge = new d3_geom_voronoiEdge(lSite, rSite);\n        d3_geom_voronoiEdges.push(edge);\n        if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n        if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n        d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n        d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n        return edge;\n    }\n\n    function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n        var edge = new d3_geom_voronoiEdge(lSite, null);\n        edge.a = va;\n        edge.b = vb;\n        d3_geom_voronoiEdges.push(edge);\n        return edge;\n    }\n\n    function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n        if (!edge.a && !edge.b) {\n            edge.a = vertex;\n            edge.l = lSite;\n            edge.r = rSite;\n        } else if (edge.l === rSite) {\n            edge.b = vertex;\n        } else {\n            edge.a = vertex;\n        }\n    }\n\n    function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n        var va = edge.a, vb = edge.b;\n        this.edge = edge;\n        this.site = lSite;\n        this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n    }\n\n    d3_geom_voronoiHalfEdge.prototype = {\n        start: function () {\n            return this.edge.l === this.site ? this.edge.a : this.edge.b;\n        },\n        end: function () {\n            return this.edge.l === this.site ? this.edge.b : this.edge.a;\n        }\n    };\n    function d3_geom_voronoiRedBlackTree() {\n        this._ = null;\n    }\n\n    function d3_geom_voronoiRedBlackNode(node) {\n        node.U = node.C = node.L = node.R = node.P = node.N = null;\n    }\n\n    d3_geom_voronoiRedBlackTree.prototype = {\n        insert: function (after, node) {\n            var parent, grandpa, uncle;\n            if (after) {\n                node.P = after;\n                node.N = after.N;\n                if (after.N) after.N.P = node;\n                after.N = node;\n                if (after.R) {\n                    after = after.R;\n                    while (after.L) after = after.L;\n                    after.L = node;\n                } else {\n                    after.R = node;\n                }\n                parent = after;\n            } else if (this._) {\n                after = d3_geom_voronoiRedBlackFirst(this._);\n                node.P = null;\n                node.N = after;\n                after.P = after.L = node;\n                parent = after;\n            } else {\n                node.P = node.N = null;\n                this._ = node;\n                parent = null;\n            }\n            node.L = node.R = null;\n            node.U = parent;\n            node.C = true;\n            after = node;\n            while (parent && parent.C) {\n                grandpa = parent.U;\n                if (parent === grandpa.L) {\n                    uncle = grandpa.R;\n                    if (uncle && uncle.C) {\n                        parent.C = uncle.C = false;\n                        grandpa.C = true;\n                        after = grandpa;\n                    } else {\n                        if (after === parent.R) {\n                            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n                            after = parent;\n                            parent = after.U;\n                        }\n                        parent.C = false;\n                        grandpa.C = true;\n                        d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n                    }\n                } else {\n                    uncle = grandpa.L;\n                    if (uncle && uncle.C) {\n                        parent.C = uncle.C = false;\n                        grandpa.C = true;\n                        after = grandpa;\n                    } else {\n                        if (after === parent.L) {\n                            d3_geom_voronoiRedBlackRotateRight(this, parent);\n                            after = parent;\n                            parent = after.U;\n                        }\n                        parent.C = false;\n                        grandpa.C = true;\n                        d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n                    }\n                }\n                parent = after.U;\n            }\n            this._.C = false;\n        },\n        remove: function (node) {\n            if (node.N) node.N.P = node.P;\n            if (node.P) node.P.N = node.N;\n            node.N = node.P = null;\n            var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n            if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n            if (parent) {\n                if (parent.L === node) parent.L = next; else parent.R = next;\n            } else {\n                this._ = next;\n            }\n            if (left && right) {\n                red = next.C;\n                next.C = node.C;\n                next.L = left;\n                left.U = next;\n                if (next !== right) {\n                    parent = next.U;\n                    next.U = node.U;\n                    node = next.R;\n                    parent.L = node;\n                    next.R = right;\n                    right.U = next;\n                } else {\n                    next.U = parent;\n                    parent = next;\n                    node = next.R;\n                }\n            } else {\n                red = node.C;\n                node = next;\n            }\n            if (node) node.U = parent;\n            if (red) return;\n            if (node && node.C) {\n                node.C = false;\n                return;\n            }\n            do {\n                if (node === this._) break;\n                if (node === parent.L) {\n                    sibling = parent.R;\n                    if (sibling.C) {\n                        sibling.C = false;\n                        parent.C = true;\n                        d3_geom_voronoiRedBlackRotateLeft(this, parent);\n                        sibling = parent.R;\n                    }\n                    if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n                        if (!sibling.R || !sibling.R.C) {\n                            sibling.L.C = false;\n                            sibling.C = true;\n                            d3_geom_voronoiRedBlackRotateRight(this, sibling);\n                            sibling = parent.R;\n                        }\n                        sibling.C = parent.C;\n                        parent.C = sibling.R.C = false;\n                        d3_geom_voronoiRedBlackRotateLeft(this, parent);\n                        node = this._;\n                        break;\n                    }\n                } else {\n                    sibling = parent.L;\n                    if (sibling.C) {\n                        sibling.C = false;\n                        parent.C = true;\n                        d3_geom_voronoiRedBlackRotateRight(this, parent);\n                        sibling = parent.L;\n                    }\n                    if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n                        if (!sibling.L || !sibling.L.C) {\n                            sibling.R.C = false;\n                            sibling.C = true;\n                            d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n                            sibling = parent.L;\n                        }\n                        sibling.C = parent.C;\n                        parent.C = sibling.L.C = false;\n                        d3_geom_voronoiRedBlackRotateRight(this, parent);\n                        node = this._;\n                        break;\n                    }\n                }\n                sibling.C = true;\n                node = parent;\n                parent = parent.U;\n            } while (!node.C);\n            if (node) node.C = false;\n        }\n    };\n    function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n        var p = node, q = node.R, parent = p.U;\n        if (parent) {\n            if (parent.L === p) parent.L = q; else parent.R = q;\n        } else {\n            tree._ = q;\n        }\n        q.U = parent;\n        p.U = q;\n        p.R = q.L;\n        if (p.R) p.R.U = p;\n        q.L = p;\n    }\n\n    function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n        var p = node, q = node.L, parent = p.U;\n        if (parent) {\n            if (parent.L === p) parent.L = q; else parent.R = q;\n        } else {\n            tree._ = q;\n        }\n        q.U = parent;\n        p.U = q;\n        p.L = q.R;\n        if (p.L) p.L.U = p;\n        q.R = p;\n    }\n\n    function d3_geom_voronoiRedBlackFirst(node) {\n        while (node.L) node = node.L;\n        return node;\n    }\n\n    function d3_geom_voronoi(sites, bbox) {\n        var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n        d3_geom_voronoiEdges = [];\n        d3_geom_voronoiCells = new Array(sites.length);\n        d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n        d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n        while (true) {\n            circle = d3_geom_voronoiFirstCircle;\n            if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n                if (site.x !== x0 || site.y !== y0) {\n                    d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n                    d3_geom_voronoiAddBeach(site);\n                    x0 = site.x, y0 = site.y;\n                }\n                site = sites.pop();\n            } else if (circle) {\n                d3_geom_voronoiRemoveBeach(circle.arc);\n            } else {\n                break;\n            }\n        }\n        if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n        var diagram = {\n            cells: d3_geom_voronoiCells,\n            edges: d3_geom_voronoiEdges\n        };\n        d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n        return diagram;\n    }\n\n    function d3_geom_voronoiVertexOrder(a, b) {\n        return b.y - a.y || b.x - a.x;\n    }\n\n    d3.geom.voronoi = function (points) {\n        var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n        if (points) return voronoi(points);\n        function voronoi(data) {\n            var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n            d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function (cell, i) {\n                var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function (e) {\n                    var s = e.start();\n                    return [s.x, s.y];\n                }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [[x0, y1], [x1, y1], [x1, y0], [x0, y0]] : [];\n                polygon.point = data[i];\n            });\n            return polygons;\n        }\n\n        function sites(data) {\n            return data.map(function (d, i) {\n                return {\n                    x: Math.round(fx(d, i) / ε) * ε,\n                    y: Math.round(fy(d, i) / ε) * ε,\n                    i: i\n                };\n            });\n        }\n\n        voronoi.links = function (data) {\n            return d3_geom_voronoi(sites(data)).edges.filter(function (edge) {\n                return edge.l && edge.r;\n            }).map(function (edge) {\n                return {\n                    source: data[edge.l.i],\n                    target: data[edge.r.i]\n                };\n            });\n        };\n        voronoi.triangles = function (data) {\n            var triangles = [];\n            d3_geom_voronoi(sites(data)).cells.forEach(function (cell, i) {\n                var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n                while (++j < m) {\n                    e0 = e1;\n                    s0 = s1;\n                    e1 = edges[j].edge;\n                    s1 = e1.l === site ? e1.r : e1.l;\n                    if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n                        triangles.push([data[i], data[s0.i], data[s1.i]]);\n                    }\n                }\n            });\n            return triangles;\n        };\n        voronoi.x = function (_) {\n            return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n        };\n        voronoi.y = function (_) {\n            return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n        };\n        voronoi.clipExtent = function (_) {\n            if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n            clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n            return voronoi;\n        };\n        voronoi.size = function (_) {\n            if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n            return voronoi.clipExtent(_ && [[0, 0], _]);\n        };\n        return voronoi;\n    };\n    var d3_geom_voronoiClipExtent = [[-1e6, -1e6], [1e6, 1e6]];\n\n    function d3_geom_voronoiTriangleArea(a, b, c) {\n        return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n    }\n\n    d3.geom.delaunay = function (vertices) {\n        return d3.geom.voronoi().triangles(vertices);\n    };\n    d3.geom.quadtree = function (points, x1, y1, x2, y2) {\n        var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n        if (compat = arguments.length) {\n            x = d3_geom_quadtreeCompatX;\n            y = d3_geom_quadtreeCompatY;\n            if (compat === 3) {\n                y2 = y1;\n                x2 = x1;\n                y1 = x1 = 0;\n            }\n            return quadtree(points);\n        }\n        function quadtree(data) {\n            var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n            if (x1 != null) {\n                x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n            } else {\n                x2_ = y2_ = -(x1_ = y1_ = Infinity);\n                xs = [], ys = [];\n                n = data.length;\n                if (compat) for (i = 0; i < n; ++i) {\n                    d = data[i];\n                    if (d.x < x1_) x1_ = d.x;\n                    if (d.y < y1_) y1_ = d.y;\n                    if (d.x > x2_) x2_ = d.x;\n                    if (d.y > y2_) y2_ = d.y;\n                    xs.push(d.x);\n                    ys.push(d.y);\n                } else for (i = 0; i < n; ++i) {\n                    var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n                    if (x_ < x1_) x1_ = x_;\n                    if (y_ < y1_) y1_ = y_;\n                    if (x_ > x2_) x2_ = x_;\n                    if (y_ > y2_) y2_ = y_;\n                    xs.push(x_);\n                    ys.push(y_);\n                }\n            }\n            var dx = x2_ - x1_, dy = y2_ - y1_;\n            if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n            function insert(n, d, x, y, x1, y1, x2, y2) {\n                if (isNaN(x) || isNaN(y)) return;\n                if (n.leaf) {\n                    var nx = n.x, ny = n.y;\n                    if (nx != null) {\n                        if (abs(nx - x) + abs(ny - y) < .01) {\n                            insertChild(n, d, x, y, x1, y1, x2, y2);\n                        } else {\n                            var nPoint = n.point;\n                            n.x = n.y = n.point = null;\n                            insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n                            insertChild(n, d, x, y, x1, y1, x2, y2);\n                        }\n                    } else {\n                        n.x = x, n.y = y, n.point = d;\n                    }\n                } else {\n                    insertChild(n, d, x, y, x1, y1, x2, y2);\n                }\n            }\n\n            function insertChild(n, d, x, y, x1, y1, x2, y2) {\n                var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;\n                n.leaf = false;\n                n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n                if (right) x1 = sx; else x2 = sx;\n                if (bottom) y1 = sy; else y2 = sy;\n                insert(n, d, x, y, x1, y1, x2, y2);\n            }\n\n            var root = d3_geom_quadtreeNode();\n            root.add = function (d) {\n                insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n            };\n            root.visit = function (f) {\n                d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n            };\n            i = -1;\n            if (x1 == null) {\n                while (++i < n) {\n                    insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n                }\n                --i;\n            } else data.forEach(root.add);\n            xs = ys = data = d = null;\n            return root;\n        }\n\n        quadtree.x = function (_) {\n            return arguments.length ? (x = _, quadtree) : x;\n        };\n        quadtree.y = function (_) {\n            return arguments.length ? (y = _, quadtree) : y;\n        };\n        quadtree.extent = function (_) {\n            if (!arguments.length) return x1 == null ? null : [[x1, y1], [x2, y2]];\n            if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0],\n                y2 = +_[1][1];\n            return quadtree;\n        };\n        quadtree.size = function (_) {\n            if (!arguments.length) return x1 == null ? null : [x2 - x1, y2 - y1];\n            if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n            return quadtree;\n        };\n        return quadtree;\n    };\n    function d3_geom_quadtreeCompatX(d) {\n        return d.x;\n    }\n\n    function d3_geom_quadtreeCompatY(d) {\n        return d.y;\n    }\n\n    function d3_geom_quadtreeNode() {\n        return {\n            leaf: true,\n            nodes: [],\n            point: null,\n            x: null,\n            y: null\n        };\n    }\n\n    function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n        if (!f(node, x1, y1, x2, y2)) {\n            var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n            if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n            if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n            if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n            if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n        }\n    }\n\n    d3.interpolateRgb = d3_interpolateRgb;\n    function d3_interpolateRgb(a, b) {\n        a = d3.rgb(a);\n        b = d3.rgb(b);\n        var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n        return function (t) {\n            return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n        };\n    }\n\n    d3.interpolateObject = d3_interpolateObject;\n    function d3_interpolateObject(a, b) {\n        var i = {}, c = {}, k;\n        for (k in a) {\n            if (k in b) {\n                i[k] = d3_interpolate(a[k], b[k]);\n            } else {\n                c[k] = a[k];\n            }\n        }\n        for (k in b) {\n            if (!(k in a)) {\n                c[k] = b[k];\n            }\n        }\n        return function (t) {\n            for (k in i) c[k] = i[k](t);\n            return c;\n        };\n    }\n\n    d3.interpolateNumber = d3_interpolateNumber;\n    function d3_interpolateNumber(a, b) {\n        b -= a = +a;\n        return function (t) {\n            return a + b * t;\n        };\n    }\n\n    d3.interpolateString = d3_interpolateString;\n    function d3_interpolateString(a, b) {\n        var m, i, j, s0 = 0, s1 = 0, s = [], q = [], n, o;\n        a = a + \"\", b = b + \"\";\n        d3_interpolate_number.lastIndex = 0;\n        for (i = 0; m = d3_interpolate_number.exec(b); ++i) {\n            if (m.index) s.push(b.substring(s0, s1 = m.index));\n            q.push({\n                i: s.length,\n                x: m[0]\n            });\n            s.push(null);\n            s0 = d3_interpolate_number.lastIndex;\n        }\n        if (s0 < b.length) s.push(b.substring(s0));\n        for (i = 0, n = q.length; (m = d3_interpolate_number.exec(a)) && i < n; ++i) {\n            o = q[i];\n            if (o.x == m[0]) {\n                if (o.i) {\n                    if (s[o.i + 1] == null) {\n                        s[o.i - 1] += o.x;\n                        s.splice(o.i, 1);\n                        for (j = i + 1; j < n; ++j) q[j].i--;\n                    } else {\n                        s[o.i - 1] += o.x + s[o.i + 1];\n                        s.splice(o.i, 2);\n                        for (j = i + 1; j < n; ++j) q[j].i -= 2;\n                    }\n                } else {\n                    if (s[o.i + 1] == null) {\n                        s[o.i] = o.x;\n                    } else {\n                        s[o.i] = o.x + s[o.i + 1];\n                        s.splice(o.i + 1, 1);\n                        for (j = i + 1; j < n; ++j) q[j].i--;\n                    }\n                }\n                q.splice(i, 1);\n                n--;\n                i--;\n            } else {\n                o.x = d3_interpolateNumber(parseFloat(m[0]), parseFloat(o.x));\n            }\n        }\n        while (i < n) {\n            o = q.pop();\n            if (s[o.i + 1] == null) {\n                s[o.i] = o.x;\n            } else {\n                s[o.i] = o.x + s[o.i + 1];\n                s.splice(o.i + 1, 1);\n            }\n            n--;\n        }\n        if (s.length === 1) {\n            return s[0] == null ? (o = q[0].x, function (t) {\n                return o(t) + \"\";\n            }) : function () {\n                return b;\n            };\n        }\n        return function (t) {\n            for (i = 0; i < n; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n        };\n    }\n\n    var d3_interpolate_number = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n    d3.interpolate = d3_interpolate;\n    function d3_interpolate(a, b) {\n        var i = d3.interpolators.length, f;\n        while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n        return f;\n    }\n\n    d3.interpolators = [function (a, b) {\n        var t = typeof b;\n        return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : t === \"object\" ? Array.isArray(b) ? d3_interpolateArray : d3_interpolateObject : d3_interpolateNumber)(a, b);\n    }];\n    d3.interpolateArray = d3_interpolateArray;\n    function d3_interpolateArray(a, b) {\n        var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n        for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n        for (; i < na; ++i) c[i] = a[i];\n        for (; i < nb; ++i) c[i] = b[i];\n        return function (t) {\n            for (i = 0; i < n0; ++i) c[i] = x[i](t);\n            return c;\n        };\n    }\n\n    var d3_ease_default = function () {\n        return d3_identity;\n    };\n    var d3_ease = d3.map({\n        linear: d3_ease_default,\n        poly: d3_ease_poly,\n        quad: function () {\n            return d3_ease_quad;\n        },\n        cubic: function () {\n            return d3_ease_cubic;\n        },\n        sin: function () {\n            return d3_ease_sin;\n        },\n        exp: function () {\n            return d3_ease_exp;\n        },\n        circle: function () {\n            return d3_ease_circle;\n        },\n        elastic: d3_ease_elastic,\n        back: d3_ease_back,\n        bounce: function () {\n            return d3_ease_bounce;\n        }\n    });\n    var d3_ease_mode = d3.map({\n        \"in\": d3_identity,\n        out: d3_ease_reverse,\n        \"in-out\": d3_ease_reflect,\n        \"out-in\": function (f) {\n            return d3_ease_reflect(d3_ease_reverse(f));\n        }\n    });\n    d3.ease = function (name) {\n        var i = name.indexOf(\"-\"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : \"in\";\n        t = d3_ease.get(t) || d3_ease_default;\n        m = d3_ease_mode.get(m) || d3_identity;\n        return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n    };\n    function d3_ease_clamp(f) {\n        return function (t) {\n            return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n        };\n    }\n\n    function d3_ease_reverse(f) {\n        return function (t) {\n            return 1 - f(1 - t);\n        };\n    }\n\n    function d3_ease_reflect(f) {\n        return function (t) {\n            return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n        };\n    }\n\n    function d3_ease_quad(t) {\n        return t * t;\n    }\n\n    function d3_ease_cubic(t) {\n        return t * t * t;\n    }\n\n    function d3_ease_cubicInOut(t) {\n        if (t <= 0) return 0;\n        if (t >= 1) return 1;\n        var t2 = t * t, t3 = t2 * t;\n        return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n    }\n\n    function d3_ease_poly(e) {\n        return function (t) {\n            return Math.pow(t, e);\n        };\n    }\n\n    function d3_ease_sin(t) {\n        return 1 - Math.cos(t * halfπ);\n    }\n\n    function d3_ease_exp(t) {\n        return Math.pow(2, 10 * (t - 1));\n    }\n\n    function d3_ease_circle(t) {\n        return 1 - Math.sqrt(1 - t * t);\n    }\n\n    function d3_ease_elastic(a, p) {\n        var s;\n        if (arguments.length < 2) p = .45;\n        if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n        return function (t) {\n            return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n        };\n    }\n\n    function d3_ease_back(s) {\n        if (!s) s = 1.70158;\n        return function (t) {\n            return t * t * ((s + 1) * t - s);\n        };\n    }\n\n    function d3_ease_bounce(t) {\n        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n    }\n\n    d3.interpolateHcl = d3_interpolateHcl;\n    function d3_interpolateHcl(a, b) {\n        a = d3.hcl(a);\n        b = d3.hcl(b);\n        var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n        if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n        if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n        return function (t) {\n            return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n        };\n    }\n\n    d3.interpolateHsl = d3_interpolateHsl;\n    function d3_interpolateHsl(a, b) {\n        a = d3.hsl(a);\n        b = d3.hsl(b);\n        var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n        if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n        if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n        return function (t) {\n            return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n        };\n    }\n\n    d3.interpolateLab = d3_interpolateLab;\n    function d3_interpolateLab(a, b) {\n        a = d3.lab(a);\n        b = d3.lab(b);\n        var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n        return function (t) {\n            return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n        };\n    }\n\n    d3.interpolateRound = d3_interpolateRound;\n    function d3_interpolateRound(a, b) {\n        b -= a;\n        return function (t) {\n            return Math.round(a + b * t);\n        };\n    }\n\n    d3.transform = function (string) {\n        var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n        return (d3.transform = function (string) {\n            if (string != null) {\n                g.setAttribute(\"transform\", string);\n                var t = g.transform.baseVal.consolidate();\n            }\n            return new d3_transform(t ? t.matrix : d3_transformIdentity);\n        })(string);\n    };\n    function d3_transform(m) {\n        var r0 = [m.a, m.b], r1 = [m.c, m.d], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n        if (r0[0] * r1[1] < r1[0] * r0[1]) {\n            r0[0] *= -1;\n            r0[1] *= -1;\n            kx *= -1;\n            kz *= -1;\n        }\n        this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n        this.translate = [m.e, m.f];\n        this.scale = [kx, ky];\n        this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n    }\n\n    d3_transform.prototype.toString = function () {\n        return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n    };\n    function d3_transformDot(a, b) {\n        return a[0] * b[0] + a[1] * b[1];\n    }\n\n    function d3_transformNormalize(a) {\n        var k = Math.sqrt(d3_transformDot(a, a));\n        if (k) {\n            a[0] /= k;\n            a[1] /= k;\n        }\n        return k;\n    }\n\n    function d3_transformCombine(a, b, k) {\n        a[0] += k * b[0];\n        a[1] += k * b[1];\n        return a;\n    }\n\n    var d3_transformIdentity = {\n        a: 1,\n        b: 0,\n        c: 0,\n        d: 1,\n        e: 0,\n        f: 0\n    };\n    d3.interpolateTransform = d3_interpolateTransform;\n    function d3_interpolateTransform(a, b) {\n        var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n        if (ta[0] != tb[0] || ta[1] != tb[1]) {\n            s.push(\"translate(\", null, \",\", null, \")\");\n            q.push({\n                i: 1,\n                x: d3_interpolateNumber(ta[0], tb[0])\n            }, {\n                i: 3,\n                x: d3_interpolateNumber(ta[1], tb[1])\n            });\n        } else if (tb[0] || tb[1]) {\n            s.push(\"translate(\" + tb + \")\");\n        } else {\n            s.push(\"\");\n        }\n        if (ra != rb) {\n            if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n            q.push({\n                i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n                x: d3_interpolateNumber(ra, rb)\n            });\n        } else if (rb) {\n            s.push(s.pop() + \"rotate(\" + rb + \")\");\n        }\n        if (wa != wb) {\n            q.push({\n                i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n                x: d3_interpolateNumber(wa, wb)\n            });\n        } else if (wb) {\n            s.push(s.pop() + \"skewX(\" + wb + \")\");\n        }\n        if (ka[0] != kb[0] || ka[1] != kb[1]) {\n            n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n            q.push({\n                i: n - 4,\n                x: d3_interpolateNumber(ka[0], kb[0])\n            }, {\n                i: n - 2,\n                x: d3_interpolateNumber(ka[1], kb[1])\n            });\n        } else if (kb[0] != 1 || kb[1] != 1) {\n            s.push(s.pop() + \"scale(\" + kb + \")\");\n        }\n        n = q.length;\n        return function (t) {\n            var i = -1, o;\n            while (++i < n) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n        };\n    }\n\n    function d3_uninterpolateNumber(a, b) {\n        b = b - (a = +a) ? 1 / (b - a) : 0;\n        return function (x) {\n            return (x - a) * b;\n        };\n    }\n\n    function d3_uninterpolateClamp(a, b) {\n        b = b - (a = +a) ? 1 / (b - a) : 0;\n        return function (x) {\n            return Math.max(0, Math.min(1, (x - a) * b));\n        };\n    }\n\n    d3.layout = {};\n    d3.layout.bundle = function () {\n        return function (links) {\n            var paths = [], i = -1, n = links.length;\n            while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n            return paths;\n        };\n    };\n    function d3_layout_bundlePath(link) {\n        var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [start];\n        while (start !== lca) {\n            start = start.parent;\n            points.push(start);\n        }\n        var k = points.length;\n        while (end !== lca) {\n            points.splice(k, 0, end);\n            end = end.parent;\n        }\n        return points;\n    }\n\n    function d3_layout_bundleAncestors(node) {\n        var ancestors = [], parent = node.parent;\n        while (parent != null) {\n            ancestors.push(node);\n            node = parent;\n            parent = parent.parent;\n        }\n        ancestors.push(node);\n        return ancestors;\n    }\n\n    function d3_layout_bundleLeastCommonAncestor(a, b) {\n        if (a === b) return a;\n        var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n        while (aNode === bNode) {\n            sharedNode = aNode;\n            aNode = aNodes.pop();\n            bNode = bNodes.pop();\n        }\n        return sharedNode;\n    }\n\n    d3.layout.chord = function () {\n        var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\n        function relayout() {\n            var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n            chords = [];\n            groups = [];\n            k = 0, i = -1;\n            while (++i < n) {\n                x = 0, j = -1;\n                while (++j < n) {\n                    x += matrix[i][j];\n                }\n                groupSums.push(x);\n                subgroupIndex.push(d3.range(n));\n                k += x;\n            }\n            if (sortGroups) {\n                groupIndex.sort(function (a, b) {\n                    return sortGroups(groupSums[a], groupSums[b]);\n                });\n            }\n            if (sortSubgroups) {\n                subgroupIndex.forEach(function (d, i) {\n                    d.sort(function (a, b) {\n                        return sortSubgroups(matrix[i][a], matrix[i][b]);\n                    });\n                });\n            }\n            k = (τ - padding * n) / k;\n            x = 0, i = -1;\n            while (++i < n) {\n                x0 = x, j = -1;\n                while (++j < n) {\n                    var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n                    subgroups[di + \"-\" + dj] = {\n                        index: di,\n                        subindex: dj,\n                        startAngle: a0,\n                        endAngle: a1,\n                        value: v\n                    };\n                }\n                groups[di] = {\n                    index: di,\n                    startAngle: x0,\n                    endAngle: x,\n                    value: (x - x0) / k\n                };\n                x += padding;\n            }\n            i = -1;\n            while (++i < n) {\n                j = i - 1;\n                while (++j < n) {\n                    var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n                    if (source.value || target.value) {\n                        chords.push(source.value < target.value ? {\n                            source: target,\n                            target: source\n                        } : {\n                            source: source,\n                            target: target\n                        });\n                    }\n                }\n            }\n            if (sortChords) resort();\n        }\n\n        function resort() {\n            chords.sort(function (a, b) {\n                return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n            });\n        }\n\n        chord.matrix = function (x) {\n            if (!arguments.length) return matrix;\n            n = (matrix = x) && matrix.length;\n            chords = groups = null;\n            return chord;\n        };\n        chord.padding = function (x) {\n            if (!arguments.length) return padding;\n            padding = x;\n            chords = groups = null;\n            return chord;\n        };\n        chord.sortGroups = function (x) {\n            if (!arguments.length) return sortGroups;\n            sortGroups = x;\n            chords = groups = null;\n            return chord;\n        };\n        chord.sortSubgroups = function (x) {\n            if (!arguments.length) return sortSubgroups;\n            sortSubgroups = x;\n            chords = null;\n            return chord;\n        };\n        chord.sortChords = function (x) {\n            if (!arguments.length) return sortChords;\n            sortChords = x;\n            if (chords) resort();\n            return chord;\n        };\n        chord.chords = function () {\n            if (!chords) relayout();\n            return chords;\n        };\n        chord.groups = function () {\n            if (!groups) relayout();\n            return groups;\n        };\n        return chord;\n    };\n    d3.layout.force = function () {\n        var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [1, 1], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\n        function repulse(node) {\n            return function (quad, x1, _, x2) {\n                if (quad.point !== node) {\n                    var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n                    if (dw * dw / theta2 < dn) {\n                        if (dn < chargeDistance2) {\n                            var k = quad.charge / dn;\n                            node.px -= dx * k;\n                            node.py -= dy * k;\n                        }\n                        return true;\n                    }\n                    if (quad.point && dn && dn < chargeDistance2) {\n                        var k = quad.pointCharge / dn;\n                        node.px -= dx * k;\n                        node.py -= dy * k;\n                    }\n                }\n                return !quad.charge;\n            };\n        }\n\n        force.tick = function () {\n            if ((alpha *= .99) < .005) {\n                event.end({\n                    type: \"end\",\n                    alpha: alpha = 0\n                });\n                return true;\n            }\n            var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n            for (i = 0; i < m; ++i) {\n                o = links[i];\n                s = o.source;\n                t = o.target;\n                x = t.x - s.x;\n                y = t.y - s.y;\n                if (l = x * x + y * y) {\n                    l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n                    x *= l;\n                    y *= l;\n                    t.x -= x * (k = s.weight / (t.weight + s.weight));\n                    t.y -= y * k;\n                    s.x += x * (k = 1 - k);\n                    s.y += y * k;\n                }\n            }\n            if (k = alpha * gravity) {\n                x = size[0] / 2;\n                y = size[1] / 2;\n                i = -1;\n                if (k) while (++i < n) {\n                    o = nodes[i];\n                    o.x += (x - o.x) * k;\n                    o.y += (y - o.y) * k;\n                }\n            }\n            if (charge) {\n                d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n                i = -1;\n                while (++i < n) {\n                    if (!(o = nodes[i]).fixed) {\n                        q.visit(repulse(o));\n                    }\n                }\n            }\n            i = -1;\n            while (++i < n) {\n                o = nodes[i];\n                if (o.fixed) {\n                    o.x = o.px;\n                    o.y = o.py;\n                } else {\n                    o.x -= (o.px - (o.px = o.x)) * friction;\n                    o.y -= (o.py - (o.py = o.y)) * friction;\n                }\n            }\n            event.tick({\n                type: \"tick\",\n                alpha: alpha\n            });\n        };\n        force.nodes = function (x) {\n            if (!arguments.length) return nodes;\n            nodes = x;\n            return force;\n        };\n        force.links = function (x) {\n            if (!arguments.length) return links;\n            links = x;\n            return force;\n        };\n        force.size = function (x) {\n            if (!arguments.length) return size;\n            size = x;\n            return force;\n        };\n        force.linkDistance = function (x) {\n            if (!arguments.length) return linkDistance;\n            linkDistance = typeof x === \"function\" ? x : +x;\n            return force;\n        };\n        force.distance = force.linkDistance;\n        force.linkStrength = function (x) {\n            if (!arguments.length) return linkStrength;\n            linkStrength = typeof x === \"function\" ? x : +x;\n            return force;\n        };\n        force.friction = function (x) {\n            if (!arguments.length) return friction;\n            friction = +x;\n            return force;\n        };\n        force.charge = function (x) {\n            if (!arguments.length) return charge;\n            charge = typeof x === \"function\" ? x : +x;\n            return force;\n        };\n        force.chargeDistance = function (x) {\n            if (!arguments.length) return Math.sqrt(chargeDistance2);\n            chargeDistance2 = x * x;\n            return force;\n        };\n        force.gravity = function (x) {\n            if (!arguments.length) return gravity;\n            gravity = +x;\n            return force;\n        };\n        force.theta = function (x) {\n            if (!arguments.length) return Math.sqrt(theta2);\n            theta2 = x * x;\n            return force;\n        };\n        force.alpha = function (x) {\n            if (!arguments.length) return alpha;\n            x = +x;\n            if (alpha) {\n                if (x > 0) alpha = x; else alpha = 0;\n            } else if (x > 0) {\n                event.start({\n                    type: \"start\",\n                    alpha: alpha = x\n                });\n                d3.timer(force.tick);\n            }\n            return force;\n        };\n        force.start = function () {\n            var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n            for (i = 0; i < n; ++i) {\n                (o = nodes[i]).index = i;\n                o.weight = 0;\n            }\n            for (i = 0; i < m; ++i) {\n                o = links[i];\n                if (typeof o.source == \"number\") o.source = nodes[o.source];\n                if (typeof o.target == \"number\") o.target = nodes[o.target];\n                ++o.source.weight;\n                ++o.target.weight;\n            }\n            for (i = 0; i < n; ++i) {\n                o = nodes[i];\n                if (isNaN(o.x)) o.x = position(\"x\", w);\n                if (isNaN(o.y)) o.y = position(\"y\", h);\n                if (isNaN(o.px)) o.px = o.x;\n                if (isNaN(o.py)) o.py = o.y;\n            }\n            distances = [];\n            if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n            strengths = [];\n            if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n            charges = [];\n            if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n            function position(dimension, size) {\n                if (!neighbors) {\n                    neighbors = new Array(n);\n                    for (j = 0; j < n; ++j) {\n                        neighbors[j] = [];\n                    }\n                    for (j = 0; j < m; ++j) {\n                        var o = links[j];\n                        neighbors[o.source.index].push(o.target);\n                        neighbors[o.target.index].push(o.source);\n                    }\n                }\n                var candidates = neighbors[i], j = -1, m = candidates.length, x;\n                while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;\n                return Math.random() * size;\n            }\n\n            return force.resume();\n        };\n        force.resume = function () {\n            return force.alpha(.1);\n        };\n        force.stop = function () {\n            return force.alpha(0);\n        };\n        force.drag = function () {\n            if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n            if (!arguments.length) return drag;\n            this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n        };\n        function dragmove(d) {\n            d.px = d3.event.x, d.py = d3.event.y;\n            force.resume();\n        }\n\n        return d3.rebind(force, event, \"on\");\n    };\n    function d3_layout_forceDragstart(d) {\n        d.fixed |= 2;\n    }\n\n    function d3_layout_forceDragend(d) {\n        d.fixed &= ~6;\n    }\n\n    function d3_layout_forceMouseover(d) {\n        d.fixed |= 4;\n        d.px = d.x, d.py = d.y;\n    }\n\n    function d3_layout_forceMouseout(d) {\n        d.fixed &= ~4;\n    }\n\n    function d3_layout_forceAccumulate(quad, alpha, charges) {\n        var cx = 0, cy = 0;\n        quad.charge = 0;\n        if (!quad.leaf) {\n            var nodes = quad.nodes, n = nodes.length, i = -1, c;\n            while (++i < n) {\n                c = nodes[i];\n                if (c == null) continue;\n                d3_layout_forceAccumulate(c, alpha, charges);\n                quad.charge += c.charge;\n                cx += c.charge * c.cx;\n                cy += c.charge * c.cy;\n            }\n        }\n        if (quad.point) {\n            if (!quad.leaf) {\n                quad.point.x += Math.random() - .5;\n                quad.point.y += Math.random() - .5;\n            }\n            var k = alpha * charges[quad.point.index];\n            quad.charge += quad.pointCharge = k;\n            cx += k * quad.point.x;\n            cy += k * quad.point.y;\n        }\n        quad.cx = cx / quad.charge;\n        quad.cy = cy / quad.charge;\n    }\n\n    var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n    d3.layout.hierarchy = function () {\n        var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\n        function recurse(node, depth, nodes) {\n            var childs = children.call(hierarchy, node, depth);\n            node.depth = depth;\n            nodes.push(node);\n            if (childs && (n = childs.length)) {\n                var i = -1, n, c = node.children = new Array(n), v = 0, j = depth + 1, d;\n                while (++i < n) {\n                    d = c[i] = recurse(childs[i], j, nodes);\n                    d.parent = node;\n                    v += d.value;\n                }\n                if (sort) c.sort(sort);\n                if (value) node.value = v;\n            } else {\n                delete node.children;\n                if (value) {\n                    node.value = +value.call(hierarchy, node, depth) || 0;\n                }\n            }\n            return node;\n        }\n\n        function revalue(node, depth) {\n            var children = node.children, v = 0;\n            if (children && (n = children.length)) {\n                var i = -1, n, j = depth + 1;\n                while (++i < n) v += revalue(children[i], j);\n            } else if (value) {\n                v = +value.call(hierarchy, node, depth) || 0;\n            }\n            if (value) node.value = v;\n            return v;\n        }\n\n        function hierarchy(d) {\n            var nodes = [];\n            recurse(d, 0, nodes);\n            return nodes;\n        }\n\n        hierarchy.sort = function (x) {\n            if (!arguments.length) return sort;\n            sort = x;\n            return hierarchy;\n        };\n        hierarchy.children = function (x) {\n            if (!arguments.length) return children;\n            children = x;\n            return hierarchy;\n        };\n        hierarchy.value = function (x) {\n            if (!arguments.length) return value;\n            value = x;\n            return hierarchy;\n        };\n        hierarchy.revalue = function (root) {\n            revalue(root, 0);\n            return root;\n        };\n        return hierarchy;\n    };\n    function d3_layout_hierarchyRebind(object, hierarchy) {\n        d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n        object.nodes = object;\n        object.links = d3_layout_hierarchyLinks;\n        return object;\n    }\n\n    function d3_layout_hierarchyChildren(d) {\n        return d.children;\n    }\n\n    function d3_layout_hierarchyValue(d) {\n        return d.value;\n    }\n\n    function d3_layout_hierarchySort(a, b) {\n        return b.value - a.value;\n    }\n\n    function d3_layout_hierarchyLinks(nodes) {\n        return d3.merge(nodes.map(function (parent) {\n            return (parent.children || []).map(function (child) {\n                return {\n                    source: parent,\n                    target: child\n                };\n            });\n        }));\n    }\n\n    d3.layout.partition = function () {\n        var hierarchy = d3.layout.hierarchy(), size = [1, 1];\n\n        function position(node, x, dx, dy) {\n            var children = node.children;\n            node.x = x;\n            node.y = node.depth * dy;\n            node.dx = dx;\n            node.dy = dy;\n            if (children && (n = children.length)) {\n                var i = -1, n, c, d;\n                dx = node.value ? dx / node.value : 0;\n                while (++i < n) {\n                    position(c = children[i], x, d = c.value * dx, dy);\n                    x += d;\n                }\n            }\n        }\n\n        function depth(node) {\n            var children = node.children, d = 0;\n            if (children && (n = children.length)) {\n                var i = -1, n;\n                while (++i < n) d = Math.max(d, depth(children[i]));\n            }\n            return 1 + d;\n        }\n\n        function partition(d, i) {\n            var nodes = hierarchy.call(this, d, i);\n            position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n            return nodes;\n        }\n\n        partition.size = function (x) {\n            if (!arguments.length) return size;\n            size = x;\n            return partition;\n        };\n        return d3_layout_hierarchyRebind(partition, hierarchy);\n    };\n    d3.layout.pie = function () {\n        var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;\n\n        function pie(data) {\n            var values = data.map(function (d, i) {\n                return +value.call(pie, d, i);\n            });\n            var a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle);\n            var k = ((typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);\n            var index = d3.range(data.length);\n            if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function (i, j) {\n                return values[j] - values[i];\n            } : function (i, j) {\n                return sort(data[i], data[j]);\n            });\n            var arcs = [];\n            index.forEach(function (i) {\n                var d;\n                arcs[i] = {\n                    data: data[i],\n                    value: d = values[i],\n                    startAngle: a,\n                    endAngle: a += d * k\n                };\n            });\n            return arcs;\n        }\n\n        pie.value = function (x) {\n            if (!arguments.length) return value;\n            value = x;\n            return pie;\n        };\n        pie.sort = function (x) {\n            if (!arguments.length) return sort;\n            sort = x;\n            return pie;\n        };\n        pie.startAngle = function (x) {\n            if (!arguments.length) return startAngle;\n            startAngle = x;\n            return pie;\n        };\n        pie.endAngle = function (x) {\n            if (!arguments.length) return endAngle;\n            endAngle = x;\n            return pie;\n        };\n        return pie;\n    };\n    var d3_layout_pieSortByValue = {};\n    d3.layout.stack = function () {\n        var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\n        function stack(data, index) {\n            var series = data.map(function (d, i) {\n                return values.call(stack, d, i);\n            });\n            var points = series.map(function (d) {\n                return d.map(function (v, i) {\n                    return [x.call(stack, v, i), y.call(stack, v, i)];\n                });\n            });\n            var orders = order.call(stack, points, index);\n            series = d3.permute(series, orders);\n            points = d3.permute(points, orders);\n            var offsets = offset.call(stack, points, index);\n            var n = series.length, m = series[0].length, i, j, o;\n            for (j = 0; j < m; ++j) {\n                out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n                for (i = 1; i < n; ++i) {\n                    out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n                }\n            }\n            return data;\n        }\n\n        stack.values = function (x) {\n            if (!arguments.length) return values;\n            values = x;\n            return stack;\n        };\n        stack.order = function (x) {\n            if (!arguments.length) return order;\n            order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n            return stack;\n        };\n        stack.offset = function (x) {\n            if (!arguments.length) return offset;\n            offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n            return stack;\n        };\n        stack.x = function (z) {\n            if (!arguments.length) return x;\n            x = z;\n            return stack;\n        };\n        stack.y = function (z) {\n            if (!arguments.length) return y;\n            y = z;\n            return stack;\n        };\n        stack.out = function (z) {\n            if (!arguments.length) return out;\n            out = z;\n            return stack;\n        };\n        return stack;\n    };\n    function d3_layout_stackX(d) {\n        return d.x;\n    }\n\n    function d3_layout_stackY(d) {\n        return d.y;\n    }\n\n    function d3_layout_stackOut(d, y0, y) {\n        d.y0 = y0;\n        d.y = y;\n    }\n\n    var d3_layout_stackOrders = d3.map({\n        \"inside-out\": function (data) {\n            var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function (a, b) {\n                return max[a] - max[b];\n            }), top = 0, bottom = 0, tops = [], bottoms = [];\n            for (i = 0; i < n; ++i) {\n                j = index[i];\n                if (top < bottom) {\n                    top += sums[j];\n                    tops.push(j);\n                } else {\n                    bottom += sums[j];\n                    bottoms.push(j);\n                }\n            }\n            return bottoms.reverse().concat(tops);\n        },\n        reverse: function (data) {\n            return d3.range(data.length).reverse();\n        },\n        \"default\": d3_layout_stackOrderDefault\n    });\n    var d3_layout_stackOffsets = d3.map({\n        silhouette: function (data) {\n            var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n            for (j = 0; j < m; ++j) {\n                for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n                if (o > max) max = o;\n                sums.push(o);\n            }\n            for (j = 0; j < m; ++j) {\n                y0[j] = (max - sums[j]) / 2;\n            }\n            return y0;\n        },\n        wiggle: function (data) {\n            var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n            y0[0] = o = o0 = 0;\n            for (j = 1; j < m; ++j) {\n                for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n                for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n                    for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n                        s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n                    }\n                    s2 += s3 * data[i][j][1];\n                }\n                y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n                if (o < o0) o0 = o;\n            }\n            for (j = 0; j < m; ++j) y0[j] -= o0;\n            return y0;\n        },\n        expand: function (data) {\n            var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n            for (j = 0; j < m; ++j) {\n                for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n                if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n            }\n            for (j = 0; j < m; ++j) y0[j] = 0;\n            return y0;\n        },\n        zero: d3_layout_stackOffsetZero\n    });\n\n    function d3_layout_stackOrderDefault(data) {\n        return d3.range(data.length);\n    }\n\n    function d3_layout_stackOffsetZero(data) {\n        var j = -1, m = data[0].length, y0 = [];\n        while (++j < m) y0[j] = 0;\n        return y0;\n    }\n\n    function d3_layout_stackMaxIndex(array) {\n        var i = 1, j = 0, v = array[0][1], k, n = array.length;\n        for (; i < n; ++i) {\n            if ((k = array[i][1]) > v) {\n                j = i;\n                v = k;\n            }\n        }\n        return j;\n    }\n\n    function d3_layout_stackReduceSum(d) {\n        return d.reduce(d3_layout_stackSum, 0);\n    }\n\n    function d3_layout_stackSum(p, d) {\n        return p + d[1];\n    }\n\n    d3.layout.histogram = function () {\n        var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\n        function histogram(data, i) {\n            var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n            while (++i < m) {\n                bin = bins[i] = [];\n                bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n                bin.y = 0;\n            }\n            if (m > 0) {\n                i = -1;\n                while (++i < n) {\n                    x = values[i];\n                    if (x >= range[0] && x <= range[1]) {\n                        bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n                        bin.y += k;\n                        bin.push(data[i]);\n                    }\n                }\n            }\n            return bins;\n        }\n\n        histogram.value = function (x) {\n            if (!arguments.length) return valuer;\n            valuer = x;\n            return histogram;\n        };\n        histogram.range = function (x) {\n            if (!arguments.length) return ranger;\n            ranger = d3_functor(x);\n            return histogram;\n        };\n        histogram.bins = function (x) {\n            if (!arguments.length) return binner;\n            binner = typeof x === \"number\" ? function (range) {\n                return d3_layout_histogramBinFixed(range, x);\n            } : d3_functor(x);\n            return histogram;\n        };\n        histogram.frequency = function (x) {\n            if (!arguments.length) return frequency;\n            frequency = !!x;\n            return histogram;\n        };\n        return histogram;\n    };\n    function d3_layout_histogramBinSturges(range, values) {\n        return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n    }\n\n    function d3_layout_histogramBinFixed(range, n) {\n        var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n        while (++x <= n) f[x] = m * x + b;\n        return f;\n    }\n\n    function d3_layout_histogramRange(values) {\n        return [d3.min(values), d3.max(values)];\n    }\n\n    d3.layout.tree = function () {\n        var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [1, 1], nodeSize = false;\n\n        function tree(d, i) {\n            var nodes = hierarchy.call(this, d, i), root = nodes[0];\n\n            function firstWalk(node, previousSibling) {\n                var children = node.children, layout = node._tree;\n                if (children && (n = children.length)) {\n                    var n, firstChild = children[0], previousChild, ancestor = firstChild, child, i = -1;\n                    while (++i < n) {\n                        child = children[i];\n                        firstWalk(child, previousChild);\n                        ancestor = apportion(child, previousChild, ancestor);\n                        previousChild = child;\n                    }\n                    d3_layout_treeShift(node);\n                    var midpoint = .5 * (firstChild._tree.prelim + child._tree.prelim);\n                    if (previousSibling) {\n                        layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n                        layout.mod = layout.prelim - midpoint;\n                    } else {\n                        layout.prelim = midpoint;\n                    }\n                } else {\n                    if (previousSibling) {\n                        layout.prelim = previousSibling._tree.prelim + separation(node, previousSibling);\n                    }\n                }\n            }\n\n            function secondWalk(node, x) {\n                node.x = node._tree.prelim + x;\n                var children = node.children;\n                if (children && (n = children.length)) {\n                    var i = -1, n;\n                    x += node._tree.mod;\n                    while (++i < n) {\n                        secondWalk(children[i], x);\n                    }\n                }\n            }\n\n            function apportion(node, previousSibling, ancestor) {\n                if (previousSibling) {\n                    var vip = node, vop = node, vim = previousSibling, vom = node.parent.children[0], sip = vip._tree.mod, sop = vop._tree.mod, sim = vim._tree.mod, som = vom._tree.mod, shift;\n                    while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n                        vom = d3_layout_treeLeft(vom);\n                        vop = d3_layout_treeRight(vop);\n                        vop._tree.ancestor = node;\n                        shift = vim._tree.prelim + sim - vip._tree.prelim - sip + separation(vim, vip);\n                        if (shift > 0) {\n                            d3_layout_treeMove(d3_layout_treeAncestor(vim, node, ancestor), node, shift);\n                            sip += shift;\n                            sop += shift;\n                        }\n                        sim += vim._tree.mod;\n                        sip += vip._tree.mod;\n                        som += vom._tree.mod;\n                        sop += vop._tree.mod;\n                    }\n                    if (vim && !d3_layout_treeRight(vop)) {\n                        vop._tree.thread = vim;\n                        vop._tree.mod += sim - sop;\n                    }\n                    if (vip && !d3_layout_treeLeft(vom)) {\n                        vom._tree.thread = vip;\n                        vom._tree.mod += sip - som;\n                        ancestor = node;\n                    }\n                }\n                return ancestor;\n            }\n\n            d3_layout_treeVisitAfter(root, function (node, previousSibling) {\n                node._tree = {\n                    ancestor: node,\n                    prelim: 0,\n                    mod: 0,\n                    change: 0,\n                    shift: 0,\n                    number: previousSibling ? previousSibling._tree.number + 1 : 0\n                };\n            });\n            firstWalk(root);\n            secondWalk(root, -root._tree.prelim);\n            var left = d3_layout_treeSearch(root, d3_layout_treeLeftmost), right = d3_layout_treeSearch(root, d3_layout_treeRightmost), deep = d3_layout_treeSearch(root, d3_layout_treeDeepest), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2, y1 = deep.depth || 1;\n            d3_layout_treeVisitAfter(root, nodeSize ? function (node) {\n                node.x *= size[0];\n                node.y = node.depth * size[1];\n                delete node._tree;\n            } : function (node) {\n                node.x = (node.x - x0) / (x1 - x0) * size[0];\n                node.y = node.depth / y1 * size[1];\n                delete node._tree;\n            });\n            return nodes;\n        }\n\n        tree.separation = function (x) {\n            if (!arguments.length) return separation;\n            separation = x;\n            return tree;\n        };\n        tree.size = function (x) {\n            if (!arguments.length) return nodeSize ? null : size;\n            nodeSize = (size = x) == null;\n            return tree;\n        };\n        tree.nodeSize = function (x) {\n            if (!arguments.length) return nodeSize ? size : null;\n            nodeSize = (size = x) != null;\n            return tree;\n        };\n        return d3_layout_hierarchyRebind(tree, hierarchy);\n    };\n    function d3_layout_treeSeparation(a, b) {\n        return a.parent == b.parent ? 1 : 2;\n    }\n\n    function d3_layout_treeLeft(node) {\n        var children = node.children;\n        return children && children.length ? children[0] : node._tree.thread;\n    }\n\n    function d3_layout_treeRight(node) {\n        var children = node.children, n;\n        return children && (n = children.length) ? children[n - 1] : node._tree.thread;\n    }\n\n    function d3_layout_treeSearch(node, compare) {\n        var children = node.children;\n        if (children && (n = children.length)) {\n            var child, n, i = -1;\n            while (++i < n) {\n                if (compare(child = d3_layout_treeSearch(children[i], compare), node) > 0) {\n                    node = child;\n                }\n            }\n        }\n        return node;\n    }\n\n    function d3_layout_treeRightmost(a, b) {\n        return a.x - b.x;\n    }\n\n    function d3_layout_treeLeftmost(a, b) {\n        return b.x - a.x;\n    }\n\n    function d3_layout_treeDeepest(a, b) {\n        return a.depth - b.depth;\n    }\n\n    function d3_layout_treeVisitAfter(node, callback) {\n        function visit(node, previousSibling) {\n            var children = node.children;\n            if (children && (n = children.length)) {\n                var child, previousChild = null, i = -1, n;\n                while (++i < n) {\n                    child = children[i];\n                    visit(child, previousChild);\n                    previousChild = child;\n                }\n            }\n            callback(node, previousSibling);\n        }\n\n        visit(node, null);\n    }\n\n    function d3_layout_treeShift(node) {\n        var shift = 0, change = 0, children = node.children, i = children.length, child;\n        while (--i >= 0) {\n            child = children[i]._tree;\n            child.prelim += shift;\n            child.mod += shift;\n            shift += child.shift + (change += child.change);\n        }\n    }\n\n    function d3_layout_treeMove(ancestor, node, shift) {\n        ancestor = ancestor._tree;\n        node = node._tree;\n        var change = shift / (node.number - ancestor.number);\n        ancestor.change += change;\n        node.change -= change;\n        node.shift += shift;\n        node.prelim += shift;\n        node.mod += shift;\n    }\n\n    function d3_layout_treeAncestor(vim, node, ancestor) {\n        return vim._tree.ancestor.parent == node.parent ? vim._tree.ancestor : ancestor;\n    }\n\n    d3.layout.pack = function () {\n        var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [1, 1], radius;\n\n        function pack(d, i) {\n            var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function () {\n                return radius;\n            };\n            root.x = root.y = 0;\n            d3_layout_treeVisitAfter(root, function (d) {\n                d.r = +r(d.value);\n            });\n            d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n            if (padding) {\n                var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n                d3_layout_treeVisitAfter(root, function (d) {\n                    d.r += dr;\n                });\n                d3_layout_treeVisitAfter(root, d3_layout_packSiblings);\n                d3_layout_treeVisitAfter(root, function (d) {\n                    d.r -= dr;\n                });\n            }\n            d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n            return nodes;\n        }\n\n        pack.size = function (_) {\n            if (!arguments.length) return size;\n            size = _;\n            return pack;\n        };\n        pack.radius = function (_) {\n            if (!arguments.length) return radius;\n            radius = _ == null || typeof _ === \"function\" ? _ : +_;\n            return pack;\n        };\n        pack.padding = function (_) {\n            if (!arguments.length) return padding;\n            padding = +_;\n            return pack;\n        };\n        return d3_layout_hierarchyRebind(pack, hierarchy);\n    };\n    function d3_layout_packSort(a, b) {\n        return a.value - b.value;\n    }\n\n    function d3_layout_packInsert(a, b) {\n        var c = a._pack_next;\n        a._pack_next = b;\n        b._pack_prev = a;\n        b._pack_next = c;\n        c._pack_prev = b;\n    }\n\n    function d3_layout_packSplice(a, b) {\n        a._pack_next = b;\n        b._pack_prev = a;\n    }\n\n    function d3_layout_packIntersects(a, b) {\n        var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n        return .999 * dr * dr > dx * dx + dy * dy;\n    }\n\n    function d3_layout_packSiblings(node) {\n        if (!(nodes = node.children) || !(n = nodes.length)) return;\n        var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\n        function bound(node) {\n            xMin = Math.min(node.x - node.r, xMin);\n            xMax = Math.max(node.x + node.r, xMax);\n            yMin = Math.min(node.y - node.r, yMin);\n            yMax = Math.max(node.y + node.r, yMax);\n        }\n\n        nodes.forEach(d3_layout_packLink);\n        a = nodes[0];\n        a.x = -a.r;\n        a.y = 0;\n        bound(a);\n        if (n > 1) {\n            b = nodes[1];\n            b.x = b.r;\n            b.y = 0;\n            bound(b);\n            if (n > 2) {\n                c = nodes[2];\n                d3_layout_packPlace(a, b, c);\n                bound(c);\n                d3_layout_packInsert(a, c);\n                a._pack_prev = c;\n                d3_layout_packInsert(c, b);\n                b = a._pack_next;\n                for (i = 3; i < n; i++) {\n                    d3_layout_packPlace(a, b, c = nodes[i]);\n                    var isect = 0, s1 = 1, s2 = 1;\n                    for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n                        if (d3_layout_packIntersects(j, c)) {\n                            isect = 1;\n                            break;\n                        }\n                    }\n                    if (isect == 1) {\n                        for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n                            if (d3_layout_packIntersects(k, c)) {\n                                break;\n                            }\n                        }\n                    }\n                    if (isect) {\n                        if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n                        i--;\n                    } else {\n                        d3_layout_packInsert(a, c);\n                        b = c;\n                        bound(c);\n                    }\n                }\n            }\n        }\n        var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n        for (i = 0; i < n; i++) {\n            c = nodes[i];\n            c.x -= cx;\n            c.y -= cy;\n            cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n        }\n        node.r = cr;\n        nodes.forEach(d3_layout_packUnlink);\n    }\n\n    function d3_layout_packLink(node) {\n        node._pack_next = node._pack_prev = node;\n    }\n\n    function d3_layout_packUnlink(node) {\n        delete node._pack_next;\n        delete node._pack_prev;\n    }\n\n    function d3_layout_packTransform(node, x, y, k) {\n        var children = node.children;\n        node.x = x += k * node.x;\n        node.y = y += k * node.y;\n        node.r *= k;\n        if (children) {\n            var i = -1, n = children.length;\n            while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n        }\n    }\n\n    function d3_layout_packPlace(a, b, c) {\n        var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n        if (db && (dx || dy)) {\n            var da = b.r + c.r, dc = dx * dx + dy * dy;\n            da *= da;\n            db *= db;\n            var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n            c.x = a.x + x * dx + y * dy;\n            c.y = a.y + x * dy - y * dx;\n        } else {\n            c.x = a.x + db;\n            c.y = a.y;\n        }\n    }\n\n    d3.layout.cluster = function () {\n        var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [1, 1], nodeSize = false;\n\n        function cluster(d, i) {\n            var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n            d3_layout_treeVisitAfter(root, function (node) {\n                var children = node.children;\n                if (children && children.length) {\n                    node.x = d3_layout_clusterX(children);\n                    node.y = d3_layout_clusterY(children);\n                } else {\n                    node.x = previousNode ? x += separation(node, previousNode) : 0;\n                    node.y = 0;\n                    previousNode = node;\n                }\n            });\n            var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n            d3_layout_treeVisitAfter(root, nodeSize ? function (node) {\n                node.x = (node.x - root.x) * size[0];\n                node.y = (root.y - node.y) * size[1];\n            } : function (node) {\n                node.x = (node.x - x0) / (x1 - x0) * size[0];\n                node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n            });\n            return nodes;\n        }\n\n        cluster.separation = function (x) {\n            if (!arguments.length) return separation;\n            separation = x;\n            return cluster;\n        };\n        cluster.size = function (x) {\n            if (!arguments.length) return nodeSize ? null : size;\n            nodeSize = (size = x) == null;\n            return cluster;\n        };\n        cluster.nodeSize = function (x) {\n            if (!arguments.length) return nodeSize ? size : null;\n            nodeSize = (size = x) != null;\n            return cluster;\n        };\n        return d3_layout_hierarchyRebind(cluster, hierarchy);\n    };\n    function d3_layout_clusterY(children) {\n        return 1 + d3.max(children, function (child) {\n                return child.y;\n            });\n    }\n\n    function d3_layout_clusterX(children) {\n        return children.reduce(function (x, child) {\n                return x + child.x;\n            }, 0) / children.length;\n    }\n\n    function d3_layout_clusterLeft(node) {\n        var children = node.children;\n        return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n    }\n\n    function d3_layout_clusterRight(node) {\n        var children = node.children, n;\n        return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n    }\n\n    d3.layout.treemap = function () {\n        var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [1, 1], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\n        function scale(children, k) {\n            var i = -1, n = children.length, child, area;\n            while (++i < n) {\n                area = (child = children[i]).value * (k < 0 ? 0 : k);\n                child.area = isNaN(area) || area <= 0 ? 0 : area;\n            }\n        }\n\n        function squarify(node) {\n            var children = node.children;\n            if (children && children.length) {\n                var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n                scale(remaining, rect.dx * rect.dy / node.value);\n                row.area = 0;\n                while ((n = remaining.length) > 0) {\n                    row.push(child = remaining[n - 1]);\n                    row.area += child.area;\n                    if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n                        remaining.pop();\n                        best = score;\n                    } else {\n                        row.area -= row.pop().area;\n                        position(row, u, rect, false);\n                        u = Math.min(rect.dx, rect.dy);\n                        row.length = row.area = 0;\n                        best = Infinity;\n                    }\n                }\n                if (row.length) {\n                    position(row, u, rect, true);\n                    row.length = row.area = 0;\n                }\n                children.forEach(squarify);\n            }\n        }\n\n        function stickify(node) {\n            var children = node.children;\n            if (children && children.length) {\n                var rect = pad(node), remaining = children.slice(), child, row = [];\n                scale(remaining, rect.dx * rect.dy / node.value);\n                row.area = 0;\n                while (child = remaining.pop()) {\n                    row.push(child);\n                    row.area += child.area;\n                    if (child.z != null) {\n                        position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n                        row.length = row.area = 0;\n                    }\n                }\n                children.forEach(stickify);\n            }\n        }\n\n        function worst(row, u) {\n            var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n            while (++i < n) {\n                if (!(r = row[i].area)) continue;\n                if (r < rmin) rmin = r;\n                if (r > rmax) rmax = r;\n            }\n            s *= s;\n            u *= u;\n            return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n        }\n\n        function position(row, u, rect, flush) {\n            var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n            if (u == rect.dx) {\n                if (flush || v > rect.dy) v = rect.dy;\n                while (++i < n) {\n                    o = row[i];\n                    o.x = x;\n                    o.y = y;\n                    o.dy = v;\n                    x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n                }\n                o.z = true;\n                o.dx += rect.x + rect.dx - x;\n                rect.y += v;\n                rect.dy -= v;\n            } else {\n                if (flush || v > rect.dx) v = rect.dx;\n                while (++i < n) {\n                    o = row[i];\n                    o.x = x;\n                    o.y = y;\n                    o.dx = v;\n                    y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n                }\n                o.z = false;\n                o.dy += rect.y + rect.dy - y;\n                rect.x += v;\n                rect.dx -= v;\n            }\n        }\n\n        function treemap(d) {\n            var nodes = stickies || hierarchy(d), root = nodes[0];\n            root.x = 0;\n            root.y = 0;\n            root.dx = size[0];\n            root.dy = size[1];\n            if (stickies) hierarchy.revalue(root);\n            scale([root], root.dx * root.dy / root.value);\n            (stickies ? stickify : squarify)(root);\n            if (sticky) stickies = nodes;\n            return nodes;\n        }\n\n        treemap.size = function (x) {\n            if (!arguments.length) return size;\n            size = x;\n            return treemap;\n        };\n        treemap.padding = function (x) {\n            if (!arguments.length) return padding;\n            function padFunction(node) {\n                var p = x.call(treemap, node, node.depth);\n                return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [p, p, p, p] : p);\n            }\n\n            function padConstant(node) {\n                return d3_layout_treemapPad(node, x);\n            }\n\n            var type;\n            pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [x, x, x, x],\n                padConstant) : padConstant;\n            return treemap;\n        };\n        treemap.round = function (x) {\n            if (!arguments.length) return round != Number;\n            round = x ? Math.round : Number;\n            return treemap;\n        };\n        treemap.sticky = function (x) {\n            if (!arguments.length) return sticky;\n            sticky = x;\n            stickies = null;\n            return treemap;\n        };\n        treemap.ratio = function (x) {\n            if (!arguments.length) return ratio;\n            ratio = x;\n            return treemap;\n        };\n        treemap.mode = function (x) {\n            if (!arguments.length) return mode;\n            mode = x + \"\";\n            return treemap;\n        };\n        return d3_layout_hierarchyRebind(treemap, hierarchy);\n    };\n    function d3_layout_treemapPadNull(node) {\n        return {\n            x: node.x,\n            y: node.y,\n            dx: node.dx,\n            dy: node.dy\n        };\n    }\n\n    function d3_layout_treemapPad(node, padding) {\n        var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n        if (dx < 0) {\n            x += dx / 2;\n            dx = 0;\n        }\n        if (dy < 0) {\n            y += dy / 2;\n            dy = 0;\n        }\n        return {\n            x: x,\n            y: y,\n            dx: dx,\n            dy: dy\n        };\n    }\n\n    d3.random = {\n        normal: function (µ, σ) {\n            var n = arguments.length;\n            if (n < 2) σ = 1;\n            if (n < 1) µ = 0;\n            return function () {\n                var x, y, r;\n                do {\n                    x = Math.random() * 2 - 1;\n                    y = Math.random() * 2 - 1;\n                    r = x * x + y * y;\n                } while (!r || r > 1);\n                return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n            };\n        },\n        logNormal: function () {\n            var random = d3.random.normal.apply(d3, arguments);\n            return function () {\n                return Math.exp(random());\n            };\n        },\n        bates: function (m) {\n            var random = d3.random.irwinHall(m);\n            return function () {\n                return random() / m;\n            };\n        },\n        irwinHall: function (m) {\n            return function () {\n                for (var s = 0, j = 0; j < m; j++) s += Math.random();\n                return s;\n            };\n        }\n    };\n    d3.scale = {};\n    function d3_scaleExtent(domain) {\n        var start = domain[0], stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    }\n\n    function d3_scaleRange(scale) {\n        return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n    }\n\n    function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n        var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n        return function (x) {\n            return i(u(x));\n        };\n    }\n\n    function d3_scale_nice(domain, nice) {\n        var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n        if (x1 < x0) {\n            dx = i0, i0 = i1, i1 = dx;\n            dx = x0, x0 = x1, x1 = dx;\n        }\n        domain[i0] = nice.floor(x0);\n        domain[i1] = nice.ceil(x1);\n        return domain;\n    }\n\n    function d3_scale_niceStep(step) {\n        return step ? {\n            floor: function (x) {\n                return Math.floor(x / step) * step;\n            },\n            ceil: function (x) {\n                return Math.ceil(x / step) * step;\n            }\n        } : d3_scale_niceIdentity;\n    }\n\n    var d3_scale_niceIdentity = {\n        floor: d3_identity,\n        ceil: d3_identity\n    };\n\n    function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n        var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n        if (domain[k] < domain[0]) {\n            domain = domain.slice().reverse();\n            range = range.slice().reverse();\n        }\n        while (++j <= k) {\n            u.push(uninterpolate(domain[j - 1], domain[j]));\n            i.push(interpolate(range[j - 1], range[j]));\n        }\n        return function (x) {\n            var j = d3.bisect(domain, x, 1, k) - 1;\n            return i[j](u[j](x));\n        };\n    }\n\n    d3.scale.linear = function () {\n        return d3_scale_linear([0, 1], [0, 1], d3_interpolate, false);\n    };\n    function d3_scale_linear(domain, range, interpolate, clamp) {\n        var output, input;\n\n        function rescale() {\n            var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n            output = linear(domain, range, uninterpolate, interpolate);\n            input = linear(range, domain, uninterpolate, d3_interpolate);\n            return scale;\n        }\n\n        function scale(x) {\n            return output(x);\n        }\n\n        scale.invert = function (y) {\n            return input(y);\n        };\n        scale.domain = function (x) {\n            if (!arguments.length) return domain;\n            domain = x.map(Number);\n            return rescale();\n        };\n        scale.range = function (x) {\n            if (!arguments.length) return range;\n            range = x;\n            return rescale();\n        };\n        scale.rangeRound = function (x) {\n            return scale.range(x).interpolate(d3_interpolateRound);\n        };\n        scale.clamp = function (x) {\n            if (!arguments.length) return clamp;\n            clamp = x;\n            return rescale();\n        };\n        scale.interpolate = function (x) {\n            if (!arguments.length) return interpolate;\n            interpolate = x;\n            return rescale();\n        };\n        scale.ticks = function (m) {\n            return d3_scale_linearTicks(domain, m);\n        };\n        scale.tickFormat = function (m, format) {\n            return d3_scale_linearTickFormat(domain, m, format);\n        };\n        scale.nice = function (m) {\n            d3_scale_linearNice(domain, m);\n            return rescale();\n        };\n        scale.copy = function () {\n            return d3_scale_linear(domain, range, interpolate, clamp);\n        };\n        return rescale();\n    }\n\n    function d3_scale_linearRebind(scale, linear) {\n        return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n    }\n\n    function d3_scale_linearNice(domain, m) {\n        return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    }\n\n    function d3_scale_linearTickRange(domain, m) {\n        if (m == null) m = 10;\n        var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n        if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n        extent[0] = Math.ceil(extent[0] / step) * step;\n        extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n        extent[2] = step;\n        return extent;\n    }\n\n    function d3_scale_linearTicks(domain, m) {\n        return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n    }\n\n    function d3_scale_linearTickFormat(domain, m, format) {\n        var range = d3_scale_linearTickRange(domain, m);\n        return d3.format(format ? format.replace(d3_format_re, function (a, b, c, d, e, f, g, h, i, j) {\n            return [b, c, d, e, f, g, h, i || \".\" + d3_scale_linearFormatPrecision(j, range), j].join(\"\");\n        }) : \",.\" + d3_scale_linearPrecision(range[2]) + \"f\");\n    }\n\n    var d3_scale_linearFormatSignificant = {\n        s: 1,\n        g: 1,\n        p: 1,\n        r: 1,\n        e: 1\n    };\n\n    function d3_scale_linearPrecision(value) {\n        return -Math.floor(Math.log(value) / Math.LN10 + .01);\n    }\n\n    function d3_scale_linearFormatPrecision(type, range) {\n        var p = d3_scale_linearPrecision(range[2]);\n        return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(Math.abs(range[0]), Math.abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n    }\n\n    d3.scale.log = function () {\n        return d3_scale_log(d3.scale.linear().domain([0, 1]), 10, true, [1, 10]);\n    };\n    function d3_scale_log(linear, base, positive, domain) {\n        function log(x) {\n            return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n        }\n\n        function pow(x) {\n            return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n        }\n\n        function scale(x) {\n            return linear(log(x));\n        }\n\n        scale.invert = function (x) {\n            return pow(linear.invert(x));\n        };\n        scale.domain = function (x) {\n            if (!arguments.length) return domain;\n            positive = x[0] >= 0;\n            linear.domain((domain = x.map(Number)).map(log));\n            return scale;\n        };\n        scale.base = function (_) {\n            if (!arguments.length) return base;\n            base = +_;\n            linear.domain(domain.map(log));\n            return scale;\n        };\n        scale.nice = function () {\n            var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n            linear.domain(niced);\n            domain = niced.map(pow);\n            return scale;\n        };\n        scale.ticks = function () {\n            var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n            if (isFinite(j - i)) {\n                if (positive) {\n                    for (; i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n                    ticks.push(pow(i));\n                } else {\n                    ticks.push(pow(i));\n                    for (; i++ < j;) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n                }\n                for (i = 0; ticks[i] < u; i++) {\n                }\n                for (j = ticks.length; ticks[j - 1] > v; j--) {\n                }\n                ticks = ticks.slice(i, j);\n            }\n            return ticks;\n        };\n        scale.tickFormat = function (n, format) {\n            if (!arguments.length) return d3_scale_logFormat;\n            if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n            var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12,\n                Math.floor), e;\n            return function (d) {\n                return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n            };\n        };\n        scale.copy = function () {\n            return d3_scale_log(linear.copy(), base, positive, domain);\n        };\n        return d3_scale_linearRebind(scale, linear);\n    }\n\n    var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n        floor: function (x) {\n            return -Math.ceil(-x);\n        },\n        ceil: function (x) {\n            return -Math.floor(-x);\n        }\n    };\n    d3.scale.pow = function () {\n        return d3_scale_pow(d3.scale.linear(), 1, [0, 1]);\n    };\n    function d3_scale_pow(linear, exponent, domain) {\n        var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\n        function scale(x) {\n            return linear(powp(x));\n        }\n\n        scale.invert = function (x) {\n            return powb(linear.invert(x));\n        };\n        scale.domain = function (x) {\n            if (!arguments.length) return domain;\n            linear.domain((domain = x.map(Number)).map(powp));\n            return scale;\n        };\n        scale.ticks = function (m) {\n            return d3_scale_linearTicks(domain, m);\n        };\n        scale.tickFormat = function (m, format) {\n            return d3_scale_linearTickFormat(domain, m, format);\n        };\n        scale.nice = function (m) {\n            return scale.domain(d3_scale_linearNice(domain, m));\n        };\n        scale.exponent = function (x) {\n            if (!arguments.length) return exponent;\n            powp = d3_scale_powPow(exponent = x);\n            powb = d3_scale_powPow(1 / exponent);\n            linear.domain(domain.map(powp));\n            return scale;\n        };\n        scale.copy = function () {\n            return d3_scale_pow(linear.copy(), exponent, domain);\n        };\n        return d3_scale_linearRebind(scale, linear);\n    }\n\n    function d3_scale_powPow(e) {\n        return function (x) {\n            return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n        };\n    }\n\n    d3.scale.sqrt = function () {\n        return d3.scale.pow().exponent(.5);\n    };\n    d3.scale.ordinal = function () {\n        return d3_scale_ordinal([], {\n            t: \"range\",\n            a: [[]]\n        });\n    };\n    function d3_scale_ordinal(domain, ranger) {\n        var index, range, rangeBand;\n\n        function scale(x) {\n            return range[((index.get(x) || ranger.t === \"range\" && index.set(x, domain.push(x))) - 1) % range.length];\n        }\n\n        function steps(start, step) {\n            return d3.range(domain.length).map(function (i) {\n                return start + step * i;\n            });\n        }\n\n        scale.domain = function (x) {\n            if (!arguments.length) return domain;\n            domain = [];\n            index = new d3_Map();\n            var i = -1, n = x.length, xi;\n            while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n            return scale[ranger.t].apply(scale, ranger.a);\n        };\n        scale.range = function (x) {\n            if (!arguments.length) return range;\n            range = x;\n            rangeBand = 0;\n            ranger = {\n                t: \"range\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangePoints = function (x, padding) {\n            if (arguments.length < 2) padding = 0;\n            var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);\n            range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);\n            rangeBand = 0;\n            ranger = {\n                t: \"rangePoints\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangeBands = function (x, padding, outerPadding) {\n            if (arguments.length < 2) padding = 0;\n            if (arguments.length < 3) outerPadding = padding;\n            var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n            range = steps(start + step * outerPadding, step);\n            if (reverse) range.reverse();\n            rangeBand = step * (1 - padding);\n            ranger = {\n                t: \"rangeBands\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangeRoundBands = function (x, padding, outerPadding) {\n            if (arguments.length < 2) padding = 0;\n            if (arguments.length < 3) outerPadding = padding;\n            var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;\n            range = steps(start + Math.round(error / 2), step);\n            if (reverse) range.reverse();\n            rangeBand = Math.round(step * (1 - padding));\n            ranger = {\n                t: \"rangeRoundBands\",\n                a: arguments\n            };\n            return scale;\n        };\n        scale.rangeBand = function () {\n            return rangeBand;\n        };\n        scale.rangeExtent = function () {\n            return d3_scaleExtent(ranger.a[0]);\n        };\n        scale.copy = function () {\n            return d3_scale_ordinal(domain, ranger);\n        };\n        return scale.domain(domain);\n    }\n\n    d3.scale.category10 = function () {\n        return d3.scale.ordinal().range(d3_category10);\n    };\n    d3.scale.category20 = function () {\n        return d3.scale.ordinal().range(d3_category20);\n    };\n    d3.scale.category20b = function () {\n        return d3.scale.ordinal().range(d3_category20b);\n    };\n    d3.scale.category20c = function () {\n        return d3.scale.ordinal().range(d3_category20c);\n    };\n    var d3_category10 = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(d3_rgbString);\n    var d3_category20 = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(d3_rgbString);\n    var d3_category20b = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(d3_rgbString);\n    var d3_category20c = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(d3_rgbString);\n    d3.scale.quantile = function () {\n        return d3_scale_quantile([], []);\n    };\n    function d3_scale_quantile(domain, range) {\n        var thresholds;\n\n        function rescale() {\n            var k = 0, q = range.length;\n            thresholds = [];\n            while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n            return scale;\n        }\n\n        function scale(x) {\n            if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n        }\n\n        scale.domain = function (x) {\n            if (!arguments.length) return domain;\n            domain = x.filter(function (d) {\n                return !isNaN(d);\n            }).sort(d3.ascending);\n            return rescale();\n        };\n        scale.range = function (x) {\n            if (!arguments.length) return range;\n            range = x;\n            return rescale();\n        };\n        scale.quantiles = function () {\n            return thresholds;\n        };\n        scale.invertExtent = function (y) {\n            y = range.indexOf(y);\n            return y < 0 ? [NaN, NaN] : [y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1]];\n        };\n        scale.copy = function () {\n            return d3_scale_quantile(domain, range);\n        };\n        return rescale();\n    }\n\n    d3.scale.quantize = function () {\n        return d3_scale_quantize(0, 1, [0, 1]);\n    };\n    function d3_scale_quantize(x0, x1, range) {\n        var kx, i;\n\n        function scale(x) {\n            return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n        }\n\n        function rescale() {\n            kx = range.length / (x1 - x0);\n            i = range.length - 1;\n            return scale;\n        }\n\n        scale.domain = function (x) {\n            if (!arguments.length) return [x0, x1];\n            x0 = +x[0];\n            x1 = +x[x.length - 1];\n            return rescale();\n        };\n        scale.range = function (x) {\n            if (!arguments.length) return range;\n            range = x;\n            return rescale();\n        };\n        scale.invertExtent = function (y) {\n            y = range.indexOf(y);\n            y = y < 0 ? NaN : y / kx + x0;\n            return [y, y + 1 / kx];\n        };\n        scale.copy = function () {\n            return d3_scale_quantize(x0, x1, range);\n        };\n        return rescale();\n    }\n\n    d3.scale.threshold = function () {\n        return d3_scale_threshold([.5], [0, 1]);\n    };\n    function d3_scale_threshold(domain, range) {\n        function scale(x) {\n            if (x <= x) return range[d3.bisect(domain, x)];\n        }\n\n        scale.domain = function (_) {\n            if (!arguments.length) return domain;\n            domain = _;\n            return scale;\n        };\n        scale.range = function (_) {\n            if (!arguments.length) return range;\n            range = _;\n            return scale;\n        };\n        scale.invertExtent = function (y) {\n            y = range.indexOf(y);\n            return [domain[y - 1], domain[y]];\n        };\n        scale.copy = function () {\n            return d3_scale_threshold(domain, range);\n        };\n        return scale;\n    }\n\n    d3.scale.identity = function () {\n        return d3_scale_identity([0, 1]);\n    };\n    function d3_scale_identity(domain) {\n        function identity(x) {\n            return +x;\n        }\n\n        identity.invert = identity;\n        identity.domain = identity.range = function (x) {\n            if (!arguments.length) return domain;\n            domain = x.map(identity);\n            return identity;\n        };\n        identity.ticks = function (m) {\n            return d3_scale_linearTicks(domain, m);\n        };\n        identity.tickFormat = function (m, format) {\n            return d3_scale_linearTickFormat(domain, m, format);\n        };\n        identity.copy = function () {\n            return d3_scale_identity(domain);\n        };\n        return identity;\n    }\n\n    d3.svg = {};\n    d3.svg.arc = function () {\n        var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\n        function arc() {\n            var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0,\n                a0 = a1, a1 = da), a1 - a0), df = da < π ? \"0\" : \"1\", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);\n            return da >= d3_svg_arcMax ? r0 ? \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"M0,\" + r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + -r0 + \"A\" + r0 + \",\" + r0 + \" 0 1,0 0,\" + r0 + \"Z\" : \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,1 0,\" + r1 + \"Z\" : r0 ? \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L\" + r0 * c1 + \",\" + r0 * s1 + \"A\" + r0 + \",\" + r0 + \" 0 \" + df + \",0 \" + r0 * c0 + \",\" + r0 * s0 + \"Z\" : \"M\" + r1 * c0 + \",\" + r1 * s0 + \"A\" + r1 + \",\" + r1 + \" 0 \" + df + \",1 \" + r1 * c1 + \",\" + r1 * s1 + \"L0,0\" + \"Z\";\n        }\n\n        arc.innerRadius = function (v) {\n            if (!arguments.length) return innerRadius;\n            innerRadius = d3_functor(v);\n            return arc;\n        };\n        arc.outerRadius = function (v) {\n            if (!arguments.length) return outerRadius;\n            outerRadius = d3_functor(v);\n            return arc;\n        };\n        arc.startAngle = function (v) {\n            if (!arguments.length) return startAngle;\n            startAngle = d3_functor(v);\n            return arc;\n        };\n        arc.endAngle = function (v) {\n            if (!arguments.length) return endAngle;\n            endAngle = d3_functor(v);\n            return arc;\n        };\n        arc.centroid = function () {\n            var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;\n            return [Math.cos(a) * r, Math.sin(a) * r];\n        };\n        return arc;\n    };\n    var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;\n\n    function d3_svg_arcInnerRadius(d) {\n        return d.innerRadius;\n    }\n\n    function d3_svg_arcOuterRadius(d) {\n        return d.outerRadius;\n    }\n\n    function d3_svg_arcStartAngle(d) {\n        return d.startAngle;\n    }\n\n    function d3_svg_arcEndAngle(d) {\n        return d.endAngle;\n    }\n\n    function d3_svg_line(projection) {\n        var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\n        function line(data) {\n            var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\n            function segment() {\n                segments.push(\"M\", interpolate(projection(points), tension));\n            }\n\n            while (++i < n) {\n                if (defined.call(this, d = data[i], i)) {\n                    points.push([+fx.call(this, d, i), +fy.call(this, d, i)]);\n                } else if (points.length) {\n                    segment();\n                    points = [];\n                }\n            }\n            if (points.length) segment();\n            return segments.length ? segments.join(\"\") : null;\n        }\n\n        line.x = function (_) {\n            if (!arguments.length) return x;\n            x = _;\n            return line;\n        };\n        line.y = function (_) {\n            if (!arguments.length) return y;\n            y = _;\n            return line;\n        };\n        line.defined = function (_) {\n            if (!arguments.length) return defined;\n            defined = _;\n            return line;\n        };\n        line.interpolate = function (_) {\n            if (!arguments.length) return interpolateKey;\n            if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n            return line;\n        };\n        line.tension = function (_) {\n            if (!arguments.length) return tension;\n            tension = _;\n            return line;\n        };\n        return line;\n    }\n\n    d3.svg.line = function () {\n        return d3_svg_line(d3_identity);\n    };\n    var d3_svg_lineInterpolators = d3.map({\n        linear: d3_svg_lineLinear,\n        \"linear-closed\": d3_svg_lineLinearClosed,\n        step: d3_svg_lineStep,\n        \"step-before\": d3_svg_lineStepBefore,\n        \"step-after\": d3_svg_lineStepAfter,\n        basis: d3_svg_lineBasis,\n        \"basis-open\": d3_svg_lineBasisOpen,\n        \"basis-closed\": d3_svg_lineBasisClosed,\n        bundle: d3_svg_lineBundle,\n        cardinal: d3_svg_lineCardinal,\n        \"cardinal-open\": d3_svg_lineCardinalOpen,\n        \"cardinal-closed\": d3_svg_lineCardinalClosed,\n        monotone: d3_svg_lineMonotone\n    });\n    d3_svg_lineInterpolators.forEach(function (key, value) {\n        value.key = key;\n        value.closed = /-closed$/.test(key);\n    });\n    function d3_svg_lineLinear(points) {\n        return points.join(\"L\");\n    }\n\n    function d3_svg_lineLinearClosed(points) {\n        return d3_svg_lineLinear(points) + \"Z\";\n    }\n\n    function d3_svg_lineStep(points) {\n        var i = 0, n = points.length, p = points[0], path = [p[0], \",\", p[1]];\n        while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n        if (n > 1) path.push(\"H\", p[0]);\n        return path.join(\"\");\n    }\n\n    function d3_svg_lineStepBefore(points) {\n        var i = 0, n = points.length, p = points[0], path = [p[0], \",\", p[1]];\n        while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n        return path.join(\"\");\n    }\n\n    function d3_svg_lineStepAfter(points) {\n        var i = 0, n = points.length, p = points[0], path = [p[0], \",\", p[1]];\n        while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n        return path.join(\"\");\n    }\n\n    function d3_svg_lineCardinalOpen(points, tension) {\n        return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));\n    }\n\n    function d3_svg_lineCardinalClosed(points, tension) {\n        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]),\n            points), d3_svg_lineCardinalTangents([points[points.length - 2]].concat(points, [points[1]]), tension));\n    }\n\n    function d3_svg_lineCardinal(points, tension) {\n        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n    }\n\n    function d3_svg_lineHermite(points, tangents) {\n        if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n            return d3_svg_lineLinear(points);\n        }\n        var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n        if (quad) {\n            path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n            p0 = points[1];\n            pi = 2;\n        }\n        if (tangents.length > 1) {\n            t = tangents[1];\n            p = points[pi];\n            pi++;\n            path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n            for (var i = 2; i < tangents.length; i++, pi++) {\n                p = points[pi];\n                t = tangents[i];\n                path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n            }\n        }\n        if (quad) {\n            var lp = points[pi];\n            path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n        }\n        return path;\n    }\n\n    function d3_svg_lineCardinalTangents(points, tension) {\n        var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n        while (++i < n) {\n            p0 = p1;\n            p1 = p2;\n            p2 = points[i];\n            tangents.push([a * (p2[0] - p0[0]), a * (p2[1] - p0[1])]);\n        }\n        return tangents;\n    }\n\n    function d3_svg_lineBasis(points) {\n        if (points.length < 3) return d3_svg_lineLinear(points);\n        var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [x0, x0, x0, (pi = points[1])[0]], py = [y0, y0, y0, pi[1]], path = [x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n        points.push(points[n - 1]);\n        while (++i <= n) {\n            pi = points[i];\n            px.shift();\n            px.push(pi[0]);\n            py.shift();\n            py.push(pi[1]);\n            d3_svg_lineBasisBezier(path, px, py);\n        }\n        points.pop();\n        path.push(\"L\", pi);\n        return path.join(\"\");\n    }\n\n    function d3_svg_lineBasisOpen(points) {\n        if (points.length < 4) return d3_svg_lineLinear(points);\n        var path = [], i = -1, n = points.length, pi, px = [0], py = [0];\n        while (++i < 3) {\n            pi = points[i];\n            px.push(pi[0]);\n            py.push(pi[1]);\n        }\n        path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n        --i;\n        while (++i < n) {\n            pi = points[i];\n            px.shift();\n            px.push(pi[0]);\n            py.shift();\n            py.push(pi[1]);\n            d3_svg_lineBasisBezier(path, px, py);\n        }\n        return path.join(\"\");\n    }\n\n    function d3_svg_lineBasisClosed(points) {\n        var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n        while (++i < 4) {\n            pi = points[i % n];\n            px.push(pi[0]);\n            py.push(pi[1]);\n        }\n        path = [d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py)];\n        --i;\n        while (++i < m) {\n            pi = points[i % n];\n            px.shift();\n            px.push(pi[0]);\n            py.shift();\n            py.push(pi[1]);\n            d3_svg_lineBasisBezier(path, px, py);\n        }\n        return path.join(\"\");\n    }\n\n    function d3_svg_lineBundle(points, tension) {\n        var n = points.length - 1;\n        if (n) {\n            var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n            while (++i <= n) {\n                p = points[i];\n                t = i / n;\n                p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n                p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n            }\n        }\n        return d3_svg_lineBasis(points);\n    }\n\n    function d3_svg_lineDot4(a, b) {\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n    }\n\n    var d3_svg_lineBasisBezier1 = [0, 2 / 3, 1 / 3, 0], d3_svg_lineBasisBezier2 = [0, 1 / 3, 2 / 3, 0], d3_svg_lineBasisBezier3 = [0, 1 / 6, 2 / 3, 1 / 6];\n\n    function d3_svg_lineBasisBezier(path, x, y) {\n        path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n    }\n\n    function d3_svg_lineSlope(p0, p1) {\n        return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n    }\n\n    function d3_svg_lineFiniteDifferences(points) {\n        var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n        while (++i < j) {\n            m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n        }\n        m[i] = d;\n        return m;\n    }\n\n    function d3_svg_lineMonotoneTangents(points) {\n        var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n        while (++i < j) {\n            d = d3_svg_lineSlope(points[i], points[i + 1]);\n            if (abs(d) < ε) {\n                m[i] = m[i + 1] = 0;\n            } else {\n                a = m[i] / d;\n                b = m[i + 1] / d;\n                s = a * a + b * b;\n                if (s > 9) {\n                    s = d * 3 / Math.sqrt(s);\n                    m[i] = s * a;\n                    m[i + 1] = s * b;\n                }\n            }\n        }\n        i = -1;\n        while (++i <= j) {\n            s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n            tangents.push([s || 0, m[i] * s || 0]);\n        }\n        return tangents;\n    }\n\n    function d3_svg_lineMonotone(points) {\n        return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n    }\n\n    d3.svg.line.radial = function () {\n        var line = d3_svg_line(d3_svg_lineRadial);\n        line.radius = line.x, delete line.x;\n        line.angle = line.y, delete line.y;\n        return line;\n    };\n    function d3_svg_lineRadial(points) {\n        var point, i = -1, n = points.length, r, a;\n        while (++i < n) {\n            point = points[i];\n            r = point[0];\n            a = point[1] + d3_svg_arcOffset;\n            point[0] = r * Math.cos(a);\n            point[1] = r * Math.sin(a);\n        }\n        return points;\n    }\n\n    function d3_svg_area(projection) {\n        var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\n        function area(data) {\n            var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function () {\n                return x;\n            } : d3_functor(x1), fy1 = y0 === y1 ? function () {\n                return y;\n            } : d3_functor(y1), x, y;\n\n            function segment() {\n                segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n            }\n\n            while (++i < n) {\n                if (defined.call(this, d = data[i], i)) {\n                    points0.push([x = +fx0.call(this, d, i), y = +fy0.call(this, d, i)]);\n                    points1.push([+fx1.call(this, d, i), +fy1.call(this, d, i)]);\n                } else if (points0.length) {\n                    segment();\n                    points0 = [];\n                    points1 = [];\n                }\n            }\n            if (points0.length) segment();\n            return segments.length ? segments.join(\"\") : null;\n        }\n\n        area.x = function (_) {\n            if (!arguments.length) return x1;\n            x0 = x1 = _;\n            return area;\n        };\n        area.x0 = function (_) {\n            if (!arguments.length) return x0;\n            x0 = _;\n            return area;\n        };\n        area.x1 = function (_) {\n            if (!arguments.length) return x1;\n            x1 = _;\n            return area;\n        };\n        area.y = function (_) {\n            if (!arguments.length) return y1;\n            y0 = y1 = _;\n            return area;\n        };\n        area.y0 = function (_) {\n            if (!arguments.length) return y0;\n            y0 = _;\n            return area;\n        };\n        area.y1 = function (_) {\n            if (!arguments.length) return y1;\n            y1 = _;\n            return area;\n        };\n        area.defined = function (_) {\n            if (!arguments.length) return defined;\n            defined = _;\n            return area;\n        };\n        area.interpolate = function (_) {\n            if (!arguments.length) return interpolateKey;\n            if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n            interpolateReverse = interpolate.reverse || interpolate;\n            L = interpolate.closed ? \"M\" : \"L\";\n            return area;\n        };\n        area.tension = function (_) {\n            if (!arguments.length) return tension;\n            tension = _;\n            return area;\n        };\n        return area;\n    }\n\n    d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n    d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n    d3.svg.area = function () {\n        return d3_svg_area(d3_identity);\n    };\n    d3.svg.area.radial = function () {\n        var area = d3_svg_area(d3_svg_lineRadial);\n        area.radius = area.x, delete area.x;\n        area.innerRadius = area.x0, delete area.x0;\n        area.outerRadius = area.x1, delete area.x1;\n        area.angle = area.y, delete area.y;\n        area.startAngle = area.y0, delete area.y0;\n        area.endAngle = area.y1, delete area.y1;\n        return area;\n    };\n    d3.svg.chord = function () {\n        var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\n        function chord(d, i) {\n            var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n            return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n        }\n\n        function subgroup(self, f, d, i) {\n            var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;\n            return {\n                r: r,\n                a0: a0,\n                a1: a1,\n                p0: [r * Math.cos(a0), r * Math.sin(a0)],\n                p1: [r * Math.cos(a1), r * Math.sin(a1)]\n            };\n        }\n\n        function equals(a, b) {\n            return a.a0 == b.a0 && a.a1 == b.a1;\n        }\n\n        function arc(r, p, a) {\n            return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n        }\n\n        function curve(r0, p0, r1, p1) {\n            return \"Q 0,0 \" + p1;\n        }\n\n        chord.radius = function (v) {\n            if (!arguments.length) return radius;\n            radius = d3_functor(v);\n            return chord;\n        };\n        chord.source = function (v) {\n            if (!arguments.length) return source;\n            source = d3_functor(v);\n            return chord;\n        };\n        chord.target = function (v) {\n            if (!arguments.length) return target;\n            target = d3_functor(v);\n            return chord;\n        };\n        chord.startAngle = function (v) {\n            if (!arguments.length) return startAngle;\n            startAngle = d3_functor(v);\n            return chord;\n        };\n        chord.endAngle = function (v) {\n            if (!arguments.length) return endAngle;\n            endAngle = d3_functor(v);\n            return chord;\n        };\n        return chord;\n    };\n    function d3_svg_chordRadius(d) {\n        return d.radius;\n    }\n\n    d3.svg.diagonal = function () {\n        var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\n        function diagonal(d, i) {\n            var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [p0, {\n                x: p0.x,\n                y: m\n            }, {\n                x: p3.x,\n                y: m\n            }, p3];\n            p = p.map(projection);\n            return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n        }\n\n        diagonal.source = function (x) {\n            if (!arguments.length) return source;\n            source = d3_functor(x);\n            return diagonal;\n        };\n        diagonal.target = function (x) {\n            if (!arguments.length) return target;\n            target = d3_functor(x);\n            return diagonal;\n        };\n        diagonal.projection = function (x) {\n            if (!arguments.length) return projection;\n            projection = x;\n            return diagonal;\n        };\n        return diagonal;\n    };\n    function d3_svg_diagonalProjection(d) {\n        return [d.x, d.y];\n    }\n\n    d3.svg.diagonal.radial = function () {\n        var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n        diagonal.projection = function (x) {\n            return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n        };\n        return diagonal;\n    };\n    function d3_svg_diagonalRadialProjection(projection) {\n        return function () {\n            var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;\n            return [r * Math.cos(a), r * Math.sin(a)];\n        };\n    }\n\n    d3.svg.symbol = function () {\n        var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\n        function symbol(d, i) {\n            return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n        }\n\n        symbol.type = function (x) {\n            if (!arguments.length) return type;\n            type = d3_functor(x);\n            return symbol;\n        };\n        symbol.size = function (x) {\n            if (!arguments.length) return size;\n            size = d3_functor(x);\n            return symbol;\n        };\n        return symbol;\n    };\n    function d3_svg_symbolSize() {\n        return 64;\n    }\n\n    function d3_svg_symbolType() {\n        return \"circle\";\n    }\n\n    function d3_svg_symbolCircle(size) {\n        var r = Math.sqrt(size / π);\n        return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n    }\n\n    var d3_svg_symbols = d3.map({\n        circle: d3_svg_symbolCircle,\n        cross: function (size) {\n            var r = Math.sqrt(size / 5) / 2;\n            return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n        },\n        diamond: function (size) {\n            var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n            return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n        },\n        square: function (size) {\n            var r = Math.sqrt(size) / 2;\n            return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n        },\n        \"triangle-down\": function (size) {\n            var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n            return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n        },\n        \"triangle-up\": function (size) {\n            var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n            return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n        }\n    });\n    d3.svg.symbolTypes = d3_svg_symbols.keys();\n    var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\n    function d3_transition(groups, id) {\n        d3_subclass(groups, d3_transitionPrototype);\n        groups.id = id;\n        return groups;\n    }\n\n    var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n    d3_transitionPrototype.call = d3_selectionPrototype.call;\n    d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n    d3_transitionPrototype.node = d3_selectionPrototype.node;\n    d3_transitionPrototype.size = d3_selectionPrototype.size;\n    d3.transition = function (selection) {\n        return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();\n    };\n    d3.transition.prototype = d3_transitionPrototype;\n    d3_transitionPrototype.select = function (selector) {\n        var id = this.id, subgroups = [], subgroup, subnode, node;\n        selector = d3_selection_selector(selector);\n        for (var j = -1, m = this.length; ++j < m;) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n                if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n                    if (\"__data__\" in node) subnode.__data__ = node.__data__;\n                    d3_transitionNode(subnode, i, id, node.__transition__[id]);\n                    subgroup.push(subnode);\n                } else {\n                    subgroup.push(null);\n                }\n            }\n        }\n        return d3_transition(subgroups, id);\n    };\n    d3_transitionPrototype.selectAll = function (selector) {\n        var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;\n        selector = d3_selection_selectorAll(selector);\n        for (var j = -1, m = this.length; ++j < m;) {\n            for (var group = this[j], i = -1, n = group.length; ++i < n;) {\n                if (node = group[i]) {\n                    transition = node.__transition__[id];\n                    subnodes = selector.call(node, node.__data__, i, j);\n                    subgroups.push(subgroup = []);\n                    for (var k = -1, o = subnodes.length; ++k < o;) {\n                        if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);\n                        subgroup.push(subnode);\n                    }\n                }\n            }\n        }\n        return d3_transition(subgroups, id);\n    };\n    d3_transitionPrototype.filter = function (filter) {\n        var subgroups = [], subgroup, group, node;\n        if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n        for (var j = 0, m = this.length; j < m; j++) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n                if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n                    subgroup.push(node);\n                }\n            }\n        }\n        return d3_transition(subgroups, this.id);\n    };\n    d3_transitionPrototype.tween = function (name, tween) {\n        var id = this.id;\n        if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);\n        return d3_selection_each(this, tween == null ? function (node) {\n            node.__transition__[id].tween.remove(name);\n        } : function (node) {\n            node.__transition__[id].tween.set(name, tween);\n        });\n    };\n    function d3_transition_tween(groups, name, value, tween) {\n        var id = groups.id;\n        return d3_selection_each(groups, typeof value === \"function\" ? function (node, i, j) {\n            node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n        } : (value = tween(value), function (node) {\n            node.__transition__[id].tween.set(name, value);\n        }));\n    }\n\n    d3_transitionPrototype.attr = function (nameNS, value) {\n        if (arguments.length < 2) {\n            for (value in nameNS) this.attr(value, nameNS[value]);\n            return this;\n        }\n        var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\n        function attrNull() {\n            this.removeAttribute(name);\n        }\n\n        function attrNullNS() {\n            this.removeAttributeNS(name.space, name.local);\n        }\n\n        function attrTween(b) {\n            return b == null ? attrNull : (b += \"\", function () {\n                var a = this.getAttribute(name), i;\n                return a !== b && (i = interpolate(a, b), function (t) {\n                        this.setAttribute(name, i(t));\n                    });\n            });\n        }\n\n        function attrTweenNS(b) {\n            return b == null ? attrNullNS : (b += \"\", function () {\n                var a = this.getAttributeNS(name.space, name.local), i;\n                return a !== b && (i = interpolate(a, b), function (t) {\n                        this.setAttributeNS(name.space, name.local, i(t));\n                    });\n            });\n        }\n\n        return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n    };\n    d3_transitionPrototype.attrTween = function (nameNS, tween) {\n        var name = d3.ns.qualify(nameNS);\n\n        function attrTween(d, i) {\n            var f = tween.call(this, d, i, this.getAttribute(name));\n            return f && function (t) {\n                    this.setAttribute(name, f(t));\n                };\n        }\n\n        function attrTweenNS(d, i) {\n            var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n            return f && function (t) {\n                    this.setAttributeNS(name.space, name.local, f(t));\n                };\n        }\n\n        return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n    };\n    d3_transitionPrototype.style = function (name, value, priority) {\n        var n = arguments.length;\n        if (n < 3) {\n            if (typeof name !== \"string\") {\n                if (n < 2) value = \"\";\n                for (priority in name) this.style(priority, name[priority], value);\n                return this;\n            }\n            priority = \"\";\n        }\n        function styleNull() {\n            this.style.removeProperty(name);\n        }\n\n        function styleString(b) {\n            return b == null ? styleNull : (b += \"\", function () {\n                var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;\n                return a !== b && (i = d3_interpolate(a, b), function (t) {\n                        this.style.setProperty(name, i(t), priority);\n                    });\n            });\n        }\n\n        return d3_transition_tween(this, \"style.\" + name, value, styleString);\n    };\n    d3_transitionPrototype.styleTween = function (name, tween, priority) {\n        if (arguments.length < 3) priority = \"\";\n        function styleTween(d, i) {\n            var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));\n            return f && function (t) {\n                    this.style.setProperty(name, f(t), priority);\n                };\n        }\n\n        return this.tween(\"style.\" + name, styleTween);\n    };\n    d3_transitionPrototype.text = function (value) {\n        return d3_transition_tween(this, \"text\", value, d3_transition_text);\n    };\n    function d3_transition_text(b) {\n        if (b == null) b = \"\";\n        return function () {\n            this.textContent = b;\n        };\n    }\n\n    d3_transitionPrototype.remove = function () {\n        return this.each(\"end.transition\", function () {\n            var p;\n            if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);\n        });\n    };\n    d3_transitionPrototype.ease = function (value) {\n        var id = this.id;\n        if (arguments.length < 1) return this.node().__transition__[id].ease;\n        if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n        return d3_selection_each(this, function (node) {\n            node.__transition__[id].ease = value;\n        });\n    };\n    d3_transitionPrototype.delay = function (value) {\n        var id = this.id;\n        return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n            node.__transition__[id].delay = +value.call(node, node.__data__, i, j);\n        } : (value = +value, function (node) {\n            node.__transition__[id].delay = value;\n        }));\n    };\n    d3_transitionPrototype.duration = function (value) {\n        var id = this.id;\n        return d3_selection_each(this, typeof value === \"function\" ? function (node, i, j) {\n            node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n        } : (value = Math.max(1, value), function (node) {\n            node.__transition__[id].duration = value;\n        }));\n    };\n    d3_transitionPrototype.each = function (type, listener) {\n        var id = this.id;\n        if (arguments.length < 2) {\n            var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n            d3_transitionInheritId = id;\n            d3_selection_each(this, function (node, i, j) {\n                d3_transitionInherit = node.__transition__[id];\n                type.call(node, node.__data__, i, j);\n            });\n            d3_transitionInherit = inherit;\n            d3_transitionInheritId = inheritId;\n        } else {\n            d3_selection_each(this, function (node) {\n                var transition = node.__transition__[id];\n                (transition.event || (transition.event = d3.dispatch(\"start\", \"end\"))).on(type, listener);\n            });\n        }\n        return this;\n    };\n    d3_transitionPrototype.transition = function () {\n        var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;\n        for (var j = 0, m = this.length; j < m; j++) {\n            subgroups.push(subgroup = []);\n            for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n                if (node = group[i]) {\n                    transition = Object.create(node.__transition__[id0]);\n                    transition.delay += transition.duration;\n                    d3_transitionNode(node, i, id1, transition);\n                }\n                subgroup.push(node);\n            }\n        }\n        return d3_transition(subgroups, id1);\n    };\n    function d3_transitionNode(node, i, id, inherit) {\n        var lock = node.__transition__ || (node.__transition__ = {\n                active: 0,\n                count: 0\n            }), transition = lock[id];\n        if (!transition) {\n            var time = inherit.time;\n            transition = lock[id] = {\n                tween: new d3_Map(),\n                time: time,\n                ease: inherit.ease,\n                delay: inherit.delay,\n                duration: inherit.duration\n            };\n            ++lock.count;\n            d3.timer(function (elapsed) {\n                var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];\n                timer.t = delay + time;\n                if (delay <= elapsed) return start(elapsed - delay);\n                timer.c = start;\n                function start(elapsed) {\n                    if (lock.active > id) return stop();\n                    lock.active = id;\n                    transition.event && transition.event.start.call(node, d, i);\n                    transition.tween.forEach(function (key, value) {\n                        if (value = value.call(node, d, i)) {\n                            tweened.push(value);\n                        }\n                    });\n                    d3.timer(function () {\n                        timer.c = tick(elapsed || 1) ? d3_true : tick;\n                        return 1;\n                    }, 0, time);\n                }\n\n                function tick(elapsed) {\n                    if (lock.active !== id) return stop();\n                    var t = elapsed / duration, e = ease(t), n = tweened.length;\n                    while (n > 0) {\n                        tweened[--n].call(node, e);\n                    }\n                    if (t >= 1) {\n                        transition.event && transition.event.end.call(node, d, i);\n                        return stop();\n                    }\n                }\n\n                function stop() {\n                    if (--lock.count) delete lock[id]; else delete node.__transition__;\n                    return 1;\n                }\n            }, 0, time);\n        }\n    }\n\n    d3.svg.axis = function () {\n        var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [10], tickValues = null, tickFormat_;\n\n        function axis(g) {\n            g.each(function () {\n                var g = d3.select(this);\n                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n                var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick).style(\"opacity\", 1), tickTransform;\n                var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([0]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"),\n                    d3.transition(path));\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n                var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\");\n                switch (orient) {\n                    case \"bottom\":\n                    {\n                        tickTransform = d3_svg_axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", Math.max(innerTickSize, 0) + tickPadding);\n                        text.attr(\"dy\", \".71em\").style(\"text-anchor\", \"middle\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n\n                    case \"top\":\n                    {\n                        tickTransform = d3_svg_axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -(Math.max(innerTickSize, 0) + tickPadding));\n                        text.attr(\"dy\", \"0em\").style(\"text-anchor\", \"middle\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n\n                    case \"left\":\n                    {\n                        tickTransform = d3_svg_axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding));\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", -(Math.max(innerTickSize, 0) + tickPadding)).attr(\"y\", 0);\n                        text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"end\");\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n\n                    case \"right\":\n                    {\n                        tickTransform = d3_svg_axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", Math.max(innerTickSize, 0) + tickPadding).attr(\"y\", 0);\n                        text.attr(\"dy\", \".32em\").style(\"text-anchor\", \"start\");\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1, dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function (d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1);\n                }\n                tickEnter.call(tickTransform, scale0);\n                tickUpdate.call(tickTransform, scale1);\n            });\n        }\n\n        axis.scale = function (x) {\n            if (!arguments.length) return scale;\n            scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) return orient;\n            orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n            return axis;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) return tickArguments_;\n            tickArguments_ = arguments;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (!arguments.length) return tickValues;\n            tickValues = x;\n            return axis;\n        };\n        axis.tickFormat = function (x) {\n            if (!arguments.length) return tickFormat_;\n            tickFormat_ = x;\n            return axis;\n        };\n        axis.tickSize = function (x) {\n            var n = arguments.length;\n            if (!n) return innerTickSize;\n            innerTickSize = +x;\n            outerTickSize = +arguments[n - 1];\n            return axis;\n        };\n        axis.innerTickSize = function (x) {\n            if (!arguments.length) return innerTickSize;\n            innerTickSize = +x;\n            return axis;\n        };\n        axis.outerTickSize = function (x) {\n            if (!arguments.length) return outerTickSize;\n            outerTickSize = +x;\n            return axis;\n        };\n        axis.tickPadding = function (x) {\n            if (!arguments.length) return tickPadding;\n            tickPadding = +x;\n            return axis;\n        };\n        axis.tickSubdivide = function () {\n            return arguments.length && axis;\n        };\n        return axis;\n    };\n    var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n        top: 1,\n        right: 1,\n        bottom: 1,\n        left: 1\n    };\n\n    function d3_svg_axisX(selection, x) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + x(d) + \",0)\";\n        });\n    }\n\n    function d3_svg_axisY(selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + y(d) + \")\";\n        });\n    }\n\n    d3.svg.brush = function () {\n        var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [0, 0], yExtent = [0, 0], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\n        function brush(g) {\n            g.each(function () {\n                var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n                var background = g.selectAll(\".background\").data([0]);\n                background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n                g.selectAll(\".extent\").data([0]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n                var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n                resize.exit().remove();\n                resize.enter().append(\"g\").attr(\"class\", function (d) {\n                    return \"resize \" + d;\n                }).style(\"cursor\", function (d) {\n                    return d3_svg_brushCursor[d];\n                }).append(\"rect\").attr(\"x\", function (d) {\n                    return /[ew]$/.test(d) ? -3 : null;\n                }).attr(\"y\", function (d) {\n                    return /^[ns]/.test(d) ? -3 : null;\n                }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n                resize.style(\"display\", brush.empty() ? \"none\" : null);\n                var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n                if (x) {\n                    range = d3_scaleRange(x);\n                    backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n                    redrawX(gUpdate);\n                }\n                if (y) {\n                    range = d3_scaleRange(y);\n                    backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n                    redrawY(gUpdate);\n                }\n                redraw(gUpdate);\n            });\n        }\n\n        brush.event = function (g) {\n            g.each(function () {\n                var event_ = event.of(this, arguments), extent1 = {\n                    x: xExtent,\n                    y: yExtent,\n                    i: xExtentDomain,\n                    j: yExtentDomain\n                }, extent0 = this.__chart__ || extent1;\n                this.__chart__ = extent1;\n                if (d3_transitionInheritId) {\n                    d3.select(this).transition().each(\"start.brush\", function () {\n                        xExtentDomain = extent0.i;\n                        yExtentDomain = extent0.j;\n                        xExtent = extent0.x;\n                        yExtent = extent0.y;\n                        event_({\n                            type: \"brushstart\"\n                        });\n                    }).tween(\"brush:brush\", function () {\n                        var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n                        xExtentDomain = yExtentDomain = null;\n                        return function (t) {\n                            xExtent = extent1.x = xi(t);\n                            yExtent = extent1.y = yi(t);\n                            event_({\n                                type: \"brush\",\n                                mode: \"resize\"\n                            });\n                        };\n                    }).each(\"end.brush\", function () {\n                        xExtentDomain = extent1.i;\n                        yExtentDomain = extent1.j;\n                        event_({\n                            type: \"brush\",\n                            mode: \"resize\"\n                        });\n                        event_({\n                            type: \"brushend\"\n                        });\n                    });\n                } else {\n                    event_({\n                        type: \"brushstart\"\n                    });\n                    event_({\n                        type: \"brush\",\n                        mode: \"resize\"\n                    });\n                    event_({\n                        type: \"brushend\"\n                    });\n                }\n            });\n        };\n        function redraw(g) {\n            g.selectAll(\".resize\").attr(\"transform\", function (d) {\n                return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n            });\n        }\n\n        function redrawX(g) {\n            g.select(\".extent\").attr(\"x\", xExtent[0]);\n            g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n        }\n\n        function redrawY(g) {\n            g.select(\".extent\").attr(\"y\", yExtent[0]);\n            g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n        }\n\n        function brushstart() {\n            var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;\n            var w = d3.select(d3_window).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n            if (d3.event.changedTouches) {\n                w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n            } else {\n                w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n            }\n            g.interrupt().selectAll(\"*\").interrupt();\n            if (dragging) {\n                origin[0] = xExtent[0] - origin[0];\n                origin[1] = yExtent[0] - origin[1];\n            } else if (resizing) {\n                var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n                offset = [xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1]];\n                origin[0] = xExtent[ex];\n                origin[1] = yExtent[ey];\n            } else if (d3.event.altKey) center = origin.slice();\n            g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n            d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n            event_({\n                type: \"brushstart\"\n            });\n            brushmove();\n            function keydown() {\n                if (d3.event.keyCode == 32) {\n                    if (!dragging) {\n                        center = null;\n                        origin[0] -= xExtent[1];\n                        origin[1] -= yExtent[1];\n                        dragging = 2;\n                    }\n                    d3_eventPreventDefault();\n                }\n            }\n\n            function keyup() {\n                if (d3.event.keyCode == 32 && dragging == 2) {\n                    origin[0] += xExtent[1];\n                    origin[1] += yExtent[1];\n                    dragging = 0;\n                    d3_eventPreventDefault();\n                }\n            }\n\n            function brushmove() {\n                var point = d3.mouse(target), moved = false;\n                if (offset) {\n                    point[0] += offset[0];\n                    point[1] += offset[1];\n                }\n                if (!dragging) {\n                    if (d3.event.altKey) {\n                        if (!center) center = [(xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2];\n                        origin[0] = xExtent[+(point[0] < center[0])];\n                        origin[1] = yExtent[+(point[1] < center[1])];\n                    } else center = null;\n                }\n                if (resizingX && move1(point, x, 0)) {\n                    redrawX(g);\n                    moved = true;\n                }\n                if (resizingY && move1(point, y, 1)) {\n                    redrawY(g);\n                    moved = true;\n                }\n                if (moved) {\n                    redraw(g);\n                    event_({\n                        type: \"brush\",\n                        mode: dragging ? \"move\" : \"resize\"\n                    });\n                }\n            }\n\n            function move1(point, scale, i) {\n                var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n                if (dragging) {\n                    r0 -= position;\n                    r1 -= size + position;\n                }\n                min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n                if (dragging) {\n                    max = (min += position) + size;\n                } else {\n                    if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n                    if (position < min) {\n                        max = min;\n                        min = position;\n                    } else {\n                        max = position;\n                    }\n                }\n                if (extent[0] != min || extent[1] != max) {\n                    if (i) yExtentDomain = null; else xExtentDomain = null;\n                    extent[0] = min;\n                    extent[1] = max;\n                    return true;\n                }\n            }\n\n            function brushend() {\n                brushmove();\n                g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n                d3.select(\"body\").style(\"cursor\", null);\n                w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n                dragRestore();\n                event_({\n                    type: \"brushend\"\n                });\n            }\n        }\n\n        brush.x = function (z) {\n            if (!arguments.length) return x;\n            x = z;\n            resizes = d3_svg_brushResizes[!x << 1 | !y];\n            return brush;\n        };\n        brush.y = function (z) {\n            if (!arguments.length) return y;\n            y = z;\n            resizes = d3_svg_brushResizes[!x << 1 | !y];\n            return brush;\n        };\n        brush.clamp = function (z) {\n            if (!arguments.length) return x && y ? [xClamp, yClamp] : x ? xClamp : y ? yClamp : null;\n            if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n            return brush;\n        };\n        brush.extent = function (z) {\n            var x0, x1, y0, y1, t;\n            if (!arguments.length) {\n                if (x) {\n                    if (xExtentDomain) {\n                        x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n                    } else {\n                        x0 = xExtent[0], x1 = xExtent[1];\n                        if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n                        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n                    }\n                }\n                if (y) {\n                    if (yExtentDomain) {\n                        y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n                    } else {\n                        y0 = yExtent[0], y1 = yExtent[1];\n                        if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n                        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n                    }\n                }\n                return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n            }\n            if (x) {\n                x0 = z[0], x1 = z[1];\n                if (y) x0 = x0[0], x1 = x1[0];\n                xExtentDomain = [x0, x1];\n                if (x.invert) x0 = x(x0), x1 = x(x1);\n                if (x1 < x0) t = x0, x0 = x1, x1 = t;\n                if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1];\n            }\n            if (y) {\n                y0 = z[0], y1 = z[1];\n                if (x) y0 = y0[1], y1 = y1[1];\n                yExtentDomain = [y0, y1];\n                if (y.invert) y0 = y(y0), y1 = y(y1);\n                if (y1 < y0) t = y0, y0 = y1, y1 = t;\n                if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1];\n            }\n            return brush;\n        };\n        brush.clear = function () {\n            if (!brush.empty()) {\n                xExtent = [0, 0], yExtent = [0, 0];\n                xExtentDomain = yExtentDomain = null;\n            }\n            return brush;\n        };\n        brush.empty = function () {\n            return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n        };\n        return d3.rebind(brush, event, \"on\");\n    };\n    var d3_svg_brushCursor = {\n        n: \"ns-resize\",\n        e: \"ew-resize\",\n        s: \"ns-resize\",\n        w: \"ew-resize\",\n        nw: \"nwse-resize\",\n        ne: \"nesw-resize\",\n        se: \"nwse-resize\",\n        sw: \"nesw-resize\"\n    };\n    var d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n    var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n    var d3_time_formatUtc = d3_time_format.utc;\n    var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n    d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n    function d3_time_formatIsoNative(date) {\n        return date.toISOString();\n    }\n\n    d3_time_formatIsoNative.parse = function (string) {\n        var date = new Date(string);\n        return isNaN(date) ? null : date;\n    };\n    d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n    d3_time.second = d3_time_interval(function (date) {\n        return new d3_date(Math.floor(date / 1e3) * 1e3);\n    }, function (date, offset) {\n        date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n    }, function (date) {\n        return date.getSeconds();\n    });\n    d3_time.seconds = d3_time.second.range;\n    d3_time.seconds.utc = d3_time.second.utc.range;\n    d3_time.minute = d3_time_interval(function (date) {\n        return new d3_date(Math.floor(date / 6e4) * 6e4);\n    }, function (date, offset) {\n        date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n    }, function (date) {\n        return date.getMinutes();\n    });\n    d3_time.minutes = d3_time.minute.range;\n    d3_time.minutes.utc = d3_time.minute.utc.range;\n    d3_time.hour = d3_time_interval(function (date) {\n        var timezone = date.getTimezoneOffset() / 60;\n        return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n    }, function (date, offset) {\n        date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n    }, function (date) {\n        return date.getHours();\n    });\n    d3_time.hours = d3_time.hour.range;\n    d3_time.hours.utc = d3_time.hour.utc.range;\n    d3_time.month = d3_time_interval(function (date) {\n        date = d3_time.day(date);\n        date.setDate(1);\n        return date;\n    }, function (date, offset) {\n        date.setMonth(date.getMonth() + offset);\n    }, function (date) {\n        return date.getMonth();\n    });\n    d3_time.months = d3_time.month.range;\n    d3_time.months.utc = d3_time.month.utc.range;\n    function d3_time_scale(linear, methods, format) {\n        function scale(x) {\n            return linear(x);\n        }\n\n        scale.invert = function (x) {\n            return d3_time_scaleDate(linear.invert(x));\n        };\n        scale.domain = function (x) {\n            if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n            linear.domain(x);\n            return scale;\n        };\n        function tickMethod(extent, count) {\n            var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n            return i == d3_time_scaleSteps.length ? [methods.year, d3_scale_linearTickRange(extent.map(function (d) {\n                return d / 31536e6;\n            }), count)[2]] : !i ? [d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2]] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n        }\n\n        scale.nice = function (interval, skip) {\n            var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n            if (method) interval = method[0], skip = method[1];\n            function skipped(date) {\n                return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n            }\n\n            return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n                floor: function (date) {\n                    while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n                    return date;\n                },\n                ceil: function (date) {\n                    while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n                    return date;\n                }\n            } : interval));\n        };\n        scale.ticks = function (interval, skip) {\n            var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [{\n                range: interval\n            }, skip];\n            if (method) interval = method[0], skip = method[1];\n            return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n        };\n        scale.tickFormat = function () {\n            return format;\n        };\n        scale.copy = function () {\n            return d3_time_scale(linear.copy(), methods, format);\n        };\n        return d3_scale_linearRebind(scale, linear);\n    }\n\n    function d3_time_scaleDate(t) {\n        return new Date(t);\n    }\n\n    var d3_time_scaleSteps = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6];\n    var d3_time_scaleLocalMethods = [[d3_time.second, 1], [d3_time.second, 5], [d3_time.second, 15], [d3_time.second, 30], [d3_time.minute, 1], [d3_time.minute, 5], [d3_time.minute, 15], [d3_time.minute, 30], [d3_time.hour, 1], [d3_time.hour, 3], [d3_time.hour, 6], [d3_time.hour, 12], [d3_time.day, 1], [d3_time.day, 2], [d3_time.week, 1], [d3_time.month, 1], [d3_time.month, 3], [d3_time.year, 1]];\n    var d3_time_scaleLocalFormat = d3_time_format.multi([[\".%L\", function (d) {\n        return d.getMilliseconds();\n    }], [\":%S\", function (d) {\n        return d.getSeconds();\n    }], [\"%I:%M\", function (d) {\n        return d.getMinutes();\n    }], [\"%I %p\", function (d) {\n        return d.getHours();\n    }], [\"%a %d\", function (d) {\n        return d.getDay() && d.getDate() != 1;\n    }], [\"%b %d\", function (d) {\n        return d.getDate() != 1;\n    }], [\"%B\", function (d) {\n        return d.getMonth();\n    }], [\"%Y\", d3_true]]);\n    var d3_time_scaleMilliseconds = {\n        range: function (start, stop, step) {\n            return d3.range(+start, +stop, step).map(d3_time_scaleDate);\n        },\n        floor: d3_identity,\n        ceil: d3_identity\n    };\n    d3_time_scaleLocalMethods.year = d3_time.year;\n    d3_time.scale = function () {\n        return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n    };\n    var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function (m) {\n        return [m[0].utc, m[1]];\n    });\n    var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([[\".%L\", function (d) {\n        return d.getUTCMilliseconds();\n    }], [\":%S\", function (d) {\n        return d.getUTCSeconds();\n    }], [\"%I:%M\", function (d) {\n        return d.getUTCMinutes();\n    }], [\"%I %p\", function (d) {\n        return d.getUTCHours();\n    }], [\"%a %d\", function (d) {\n        return d.getUTCDay() && d.getUTCDate() != 1;\n    }], [\"%b %d\", function (d) {\n        return d.getUTCDate() != 1;\n    }], [\"%B\", function (d) {\n        return d.getUTCMonth();\n    }], [\"%Y\", d3_true]]);\n    d3_time_scaleUtcMethods.year = d3_time.year.utc;\n    d3_time.scale.utc = function () {\n        return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n    };\n    d3.text = d3_xhrType(function (request) {\n        return request.responseText;\n    });\n    d3.json = function (url, callback) {\n        return d3_xhr(url, \"application/json\", d3_json, callback);\n    };\n    function d3_json(request) {\n        return JSON.parse(request.responseText);\n    }\n\n    d3.html = function (url, callback) {\n        return d3_xhr(url, \"text/html\", d3_html, callback);\n    };\n    function d3_html(request) {\n        var range = d3_document.createRange();\n        range.selectNode(d3_document.body);\n        return range.createContextualFragment(request.responseText);\n    }\n\n    d3.xml = d3_xhrType(function (request) {\n        return request.responseXML;\n    });\n\n    return d3;\n});\n","/**\n * Created by mcandela on 05/11/13.\n */\n\ndefine('dnsmon.view.template-manager',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\"\n], function(utils, $){\n\n    /**\n     * TemplateManagerView is the component in charge of creating and manipulating the HTML dom elements.\n     *\n     * @class TemplateManagerView\n     * @constructor\n     * @module view\n     */\n\n    var TemplateManagerView = function(env){\n        var widgetUrl, config;\n\n        widgetUrl = env.widgetUrl;\n        config = env.config;\n\n        this.loadingImage = '<img src=\"' + widgetUrl + 'view/img/loading.gif\" class=\"loading-image\"/> ';\n\n        this.timeMargins = '<div class=\"time-margins\"><div style=\"position: absolute; left: 0;\"></div> <div style=\"position: absolute; right: 0;\"></div></div>';\n\n        this.controlPanel =\n            '<div class=\"button-group control-panel\">' +\n                '<div class=\"legend-controller\">' +\n                '<select class=\"legend-controller-select\" title=\"' + env.lang.viewSelectboxTitle + '\"></select>' +\n                '</div>' +\n                '<div class=\"legend\">' +\n                '<div class=\"legend-pls\">' +\n                '<div class=\"legend-pls-item\"><div class=\"pls-color\"></div>&nbsp;&gt;&nbsp;<span class=\"pls-percentage\"></span><span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '<div class=\"legend-pls-item\"><div class=\"pls-color\"></div>&nbsp;&le;&nbsp;<span class=\"pls-percentage\"></span><span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '</div>' +\n                '<div class=\"legend-agr-level\">' +\n                '</div>'\n                +\n                '</div>' +\n\n\n                '<div class=\"button forward\">' +\n                '<img src=\"' + widgetUrl + 'view/img/dnsmon_forward_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button right\">' +\n                '<img src=\"' + widgetUrl + 'view/img/right_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button zoom-in\">' +\n                '<img src=\"' + widgetUrl + 'view/img/zoomin_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button zoom-out\">' +\n                '<img src=\"' + widgetUrl + 'view/img/zoomout_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button allrows\">' +\n                '<img src=\"' + widgetUrl + 'view/img/allrows_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button left\">' +\n                '<img src=\"' + widgetUrl + 'view/img/left_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button timepicker\">' +\n                '<img src=\"' + widgetUrl + 'view/img/calendar_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button thresholds\">' +\n                '<img src=\"' + widgetUrl + 'view/img/thresholds_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button keep-updated\">' +\n                '<img src=\"' + widgetUrl + 'view/img/keep_updated_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button filters\">' +\n                '<img src=\"' + widgetUrl + 'view/img/filter_icon.png\"/>' +\n                '</div>' +\n\n                '<div class=\"button full-screen\">' +\n                '<img src=\"' + widgetUrl + 'view/img/dnsmon_fullscreen_icon.png\"/>' +\n                '</div>' +\n\n\n                '<div class=\"dnsmon-popup default-text\">' +\n                '</div>' +\n\n                '</div>';\n\n        this.timepickersPopup =\n            '<div style=\"float: left;\">' + env.lang.startDateLabel + ' <br/><input type=\"text\" class=\"timepicker-start date-field\" /></div>' +\n                '<div style=\"position: absolute; top: 15px; left: 145px;\"><img style=\"\" src=\"' + widgetUrl + 'view/img/double_arrow.gif\" /></div>' +\n                '<div style=\"float: right;\">' + env.lang.endDateLabel + ' <br/><input type=\"text\" class=\"timepicker-stop date-field\" /></div>';\n\n        this.thresholdsPopup =\n            '<div>' +\n                '<div class=\"thresholds-internal-legend\">' + '<div class=\"popup-pls-text\"></div>' +\n                '<div class=\"popup-pls-item\"><div class=\"pls-color\"></div>&nbsp;&gt;&nbsp;<input class=\"pls-percentage max-val\" value=\"0\"/>&nbsp;<span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '<div class=\"popup-pls-item\"><div class=\"pls-color\"></div>&nbsp;&le;&nbsp;<input class=\"pls-percentage min-val\" value=\"0\"/>&nbsp;<span class=\"pls-unit\"></span>&nbsp;</div>' +\n                '</div>' +\n                '<div class=\"popup-pls-apply\">' + env.lang.pressToApply + '</div>' +\n                '<div class=\"thresholds-slider\"></div>' +\n                '</div>';\n\n        this.slidingMenu = '<div class=\"sliding-panel\">' +\n            '</div>';\n\n        this.openTimeOverviewImage = '<img src=\"' + widgetUrl + 'view/img/open_time_overview.png\" class=\"open-timeoverview-button\"/>';\n\n        this.getLastData = '<div>5h</div>' +\n            '<div>1d</div>' +\n            '<div>1w</div>' +\n            '<div>1m</div>';\n\n\n        this.extraDataPopup =\n            '<div>' +\n                '<div>' + env.lang.extraInfoDialogTextSample + ':' +\n                '<div class=\"popup-raw-data\"></div>' +\n                '</div>' +\n\n                '<div style=\"margin-top: 10px;\">' + env.lang.extraInfoDialogTextOverview + ':' +\n                '<div class=\"popup-overview-raw-data\"></div>' +\n                '</div>' +\n                '<div class=\"popup-tabs\">' +\n                    '<ul>' +\n                        '<li><a href=\"#tabs-1\">' + env.lang.tab1Title + '</a></li>' +\n                        '<li><a href=\"#tabs-2\">' + env.lang.tab2Title + '</a></li>' +\n                        '<li><a href=\"#tabs-3\">' + env.lang.tab3Title + '</a></li>' +\n                    '</ul>' +\n                    '<div id=\"tabs-1\">' +\n                        '<div class=\"popup-dns-response\"></div>' +\n                    '</div>' +\n                    '<div id=\"tabs-2\">' +\n                        '<div class=\"popup-traceroute\"></div>' +\n                    '</div>' +\n                    '<div id=\"tabs-3\">' +\n                        '<div class=\"popup-hostnamebind-response\"></div>' +\n                    '</div>' +\n                '</div>' +\n                '</div>';\n\n        this.dnsResponse =\n            '<table class=\"dns-response-table\" border=\"1\">' +\n                '<tr class=\"dns-response-top\">' +\n                '<td>' + env.lang.dnsResponsePrbId + ': <span class=\"dns-response-prbid\"></span>' + '</td>' +\n                '<td>' + env.lang.dnsResponseRt + ': <span class=\"dns-response-rt\"></span>' + '</td>' +\n                '<td>' + env.lang.dnsResponseDate + ': <span class=\"dns-response-date\"></span>' + '</td>' +\n                '</tr>' +\n                '<tr class=\"dns-response-nsid-rd\">' +\n                '<td colspan = \"3\">' + env.lang.dnsResponseNsId + ': <span class=\"dns-response-nsid\"></span></td>' +\n                '</tr>' +\n                '<tr class=\"dns-response-bottom\">' +\n                '<td colspan = \"3\"><span class=\"dns-response-plaintext\"></span></td>' +\n                '</tr>' +\n            '</table>';\n\n        this.hostBindResponse =\n            '<table class=\"hostbind-response-table\" border=\"1\">' +\n            '<tr class=\"hostbind-response-top\">' +\n            '<td>' + env.lang.hostBindResponsePrbId + ': <span class=\"hostbind-response-prbid\"></span>' + '</td>' +\n            '<td>' + env.lang.hostBindResponseRt + ': <span class=\"hostbind-response-rt\"></span>' + '</td>' +\n            '<td>' + env.lang.hostBindResponseDate + ': <span class=\"hostbind-response-date\"></span>' + '</td>' +\n            '</tr>' +\n            '<tr class=\"hostbind-response-msmId-rd\">' +\n            '<td colspan = \"3\">' + env.lang.hostBindResponseMsmId + ': <span class=\"hostbind-response-msmId\"></span></td>' +\n            '</tr>' +\n            '<tr class=\"hostbind-response-bottom\">' +\n            '<td colspan = \"3\"><span class=\"hostbind-response-plaintext\"></span></td>' +\n            '</tr>' +\n            '</table>';\n\n        this.tracerouteRensponse =\n            '<div>' +\n            '<div class=\"traceroute-title\">' + env.lang.closestTracerouteLabel + '</div>' +\n            '</div>';\n\n        this.fullScreenThrobber = '<img class=\"full-screen-throbber\" src=\"' + widgetUrl + 'view/img/full_screen_loader.gif\"/>';\n\n        this.filtersPopup =\n            '<div>' +\n                '<label>' + env.lang.filterSelectionTitle + '</label><br/>' +\n                '<div class=\"filter-popup-item\">' +\n                  env.lang.excludeErrorsFilterLabel + '<input type=\"checkbox\" class=\"exclude-errors\" name=\"exclude-errors\">' +\n                '</div>' +\n\n                '<div class=\"filter-popup-item\">' +\n                  '<span>' + env.lang.protocol3SelectionFilterLabel + ': ' +\n                    '<select class=\"dnsmon-filter-3protocol\">' +\n                      '<option value=\"both\">IPv4 and IPv6</option>' +\n                      '<option value=\"4\">IPv4 only</option>' +\n                      '<option value=\"6\">IPv6 only</option>' +\n                    '</select>' +\n                  '</span>' +\n                '</div>' +\n\n              '<div class=\"filter-popup-item\">' +\n              '<span>' + env.lang.protocol4SelectionFilterLabel + ': ' +\n              '<select class=\"dnsmon-filter-4protocol\">' +\n                '<option value=\"udp\">UDP</option>' +\n                '<option value=\"tcp\">TCP</option>' +\n              '</select>' +\n              '</span>' +\n              '</div>' +\n\n            '</div>';\n\n        this.breadcrumbs = '<div class=\"stacked-title\"></div>';\n\n        this.overlayMessage = '<div class=\"dnsmon-message\"></div>';\n\n\n        /**\n         * This method creates all the basic DOM elements needed to the widget\n         *\n         * @method createDom\n         * @input {Object} parentDom A DOM element to be filled with the initial DOM of the widget\n         * @input {Object} instanceParams A vector of initialisation parameter\n         */\n\n        this.createDom = function(parentDom, instanceParams){\n            var containerDom, svgContainerDom, externalDom, timeMargins, timeOvervireContainerDom, bottomInfoSection;\n\n            this.dom = {};\n\n            /*\n             * Set the DOM container\n             */\n            externalDom = $('<div></div>').addClass(config.domClasses.externalDom).css(\"border-width\", config.style.externalBorderWidth);\n            containerDom = $('<div></div>').addClass(config.domClasses.mainDom).css(\"margin\", config.style.containerMargin);\n            svgContainerDom = $('<div></div>').addClass(config.domClasses.svgContainerDom);\n            timeOvervireContainerDom = $('<div></div>').addClass(config.domClasses.timeOvervireContainerDom);\n            bottomInfoSection = $('<div>' + env.lang.bottomInfoSection + '</div>').addClass(config.domClasses.bottomInfoNoticeClass);\n            timeMargins = $(this.timeMargins).css(\"top\", config.style.controlPanelHeight);\n\n            /*\n             * Style the container\n             */\n            if (instanceParams.width < config.containerMinWidth){\n                console.log(\"The minimum possible with is \" + config.containerMinWidth);\n                instanceParams.width = null;\n            }\n\n            externalDom.css(\"width\", (instanceParams.width || config.containerWidthDefault) - (config.style.externalBorderWidth * 2));\n            timeOvervireContainerDom.css(\"margin-left\", config.labelWidth - config.timeOverviewMargins.left);\n\n            containerDom.tooltip(\n                {\n                    tooltipClass: 'custom-jquery-ui-tooltip',\n                    hide: {\n                        effect: \"fade\",\n                        duration: config.tooltipFade\n                    }\n                }\n            );\n\n            /*\n             * Build DOM tree\n             */\n            containerDom.append(svgContainerDom);\n            externalDom.append(containerDom);\n            $(parentDom).append(externalDom);\n\n            /*\n             * Build DOM js vectors\n             */\n            env.mainDom = utils.encapsulateDom(containerDom);\n            env.externalDom = utils.encapsulateDom(externalDom);\n\n            this.dom.svgContainer = utils.encapsulateDom(svgContainerDom);\n\n            env.mainDom.$.append(timeMargins);\n            this.dom.timeMargins = utils.encapsulateDom(timeMargins);\n\n            env.mainDom.$.append(timeOvervireContainerDom);\n            this.dom.timeOverviewContainer = utils.encapsulateDom(timeOvervireContainerDom);\n\n            env.mainDom.$.append(bottomInfoSection);\n            this.dom.bottomInfoSection = utils.encapsulateDom(bottomInfoSection);\n\n            this.dom.loadingImage = utils.encapsulateDom($(this.loadingImage));\n            env.mainDom.$.append(this.dom.loadingImage.$);\n\n            this.dom.message = utils.encapsulateDom($(this.overlayMessage));\n            env.mainDom.$.append(this.dom.message.$);\n\n\n            if (utils.getUrlParam(\"dnsmon_info\") == \"true\" && window.atob){\n                // - Christopher Amin (data-api), Massimo Candela (web tool), Andreas Strikos (deployment) - RIPE NCC\n                bottomInfoSection.html(\"Version: \" + env.version + window.atob(\"IC0gQ2hyaXN0b3BoZXIgQW1pbiAoZGF0YS1hcGkpLCBNYXNzaW1vIENhbmRlbGEgKHdlYiB0b29sKSwgQW5kcmVhcyBTdHJpa29zIChkZXBsb3ltZW50KSAtIFJJUEUgTkND\"));\n            }\n\n        };\n\n    };\n\n\n    return TemplateManagerView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/2/13\n * Time: 10:42 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.view.time-overview',[\n    \"dnsmon.lib.d3\" // Load d3 - put your path here\n], function(d3){\n\n    /**\n     * TimeOverviewView is the view component providing the time overview bar.\n     * It allows the user to easily interact with the TimeController.\n     *\n     * @class TimeOverviewView\n     * @constructor\n     * @module view\n     */\n\n    var TimeOverviewView = function(options, callbacks){\n        var timeMapper, timeTicker, brusherBucketLevelsMinutes, timeGrid, margins, width, hideIfLessThanSeconds,\n            height, brush, xAxis, svg, groupOverview, timeUnitGrid, $this, dom, labels, verticalLabels,\n            format, innerWidth, innerHeight, endCallback, interactionCallback, changeCallback, initCallback,\n            parent, borderMargin;\n\n        $this = this;\n        margins = options.margins;\n        brusherBucketLevelsMinutes = options.granularityLevels;\n        hideIfLessThanSeconds = options.hideIfLessThanSeconds;\n        verticalLabels = (options.verticalLabels != null) ? options.verticalLabels : true;\n        format = options.format || d3.time.format.utc(\"%Y-%m-%d\");\n        endCallback = callbacks.end;\n        interactionCallback = callbacks.interaction;\n        changeCallback = callbacks.change;\n        initCallback = callbacks.init;\n        width = options.width;\n        height = options.height;\n\n        borderMargin = 1;\n\n\n        /**\n         * This method initialises the time overview\n         *\n         * @method init\n         * @input {Object} domElement A DOM element to be filled with the time overview representation\n         * @input {Array} domainRange An array composed of two Date object and describing the actual domain\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.init = function(domElement, domainRange, currentSelection){\n            var points;\n\n            parent = d3.select(domElement);\n            dom = parent\n                .append('div')\n                .attr('class', 'time-overview-container');\n\n            if (domainRange && currentSelection){\n                if (this.render(domainRange, currentSelection)) {\n                    points = [xAxis(currentSelection[0]), xAxis(currentSelection[1])];\n                    initCallback.call(this, currentSelection[0], currentSelection[1], points);\n                }\n            }\n        };\n\n\n        /**\n         * This is a callback triggered after the interaction with the time overview\n         *\n         * @method _afterInteraction\n         * @private\n         */\n\n        this._afterInteraction = function(){\n            if (!d3.event.sourceEvent) return;\n            var extent0, selectionPoints, boundedLeft, boundedRight, selectionPointsRounded, magneticEffect, points;\n\n            extent0 = brush.extent();\n\n            boundedLeft = false;\n            boundedRight = false;\n            magneticEffect = 10 * 60 * 60 * 1000;\n\n            selectionPoints = extent0; // Normal selection\n            selectionPointsRounded = extent0.map(timeUnitGrid.round); // Magnetic effect\n\n            // If empty or reversed align it to the minimum unit possible\n            if (selectionPointsRounded[0] >= selectionPointsRounded[1]) {\n                selectionPointsRounded[0] = timeUnitGrid.floor(extent0[0]);\n                selectionPointsRounded[1] = timeUnitGrid.ceil(extent0[1]);\n            }\n\n            if (selectionPoints[0].getTime() <= $this.domainRange[0].getTime() + magneticEffect){\n                selectionPoints[0] = $this.domainRange[0];\n                boundedLeft = true;\n            }\n\n            if (selectionPoints[1].getTime()  >= $this.domainRange[1].getTime() - magneticEffect){\n                selectionPoints[1] = $this.domainRange[1];\n                boundedRight = true;\n            }\n\n            if (boundedLeft && !boundedRight){\n                selectionPoints[1] = selectionPointsRounded[1];\n            }else if (!boundedLeft && boundedRight){\n                selectionPoints[0] = selectionPointsRounded[0];\n            }else if (!boundedLeft && !boundedRight){\n                selectionPoints[0] = selectionPointsRounded[0];\n                selectionPoints[1] = selectionPointsRounded[1];\n            }\n\n            // Apply magnetic feedback\n            d3.select(this).transition()\n                .call(brush.extent(selectionPoints));\n\n            points = [xAxis(selectionPoints[0]), xAxis(selectionPoints[1])];\n\n            endCallback.call(this, selectionPoints[0], selectionPoints[1], points);\n        };\n\n\n        /**\n         * This is a callback triggered during the interaction with the time overview\n         *\n         * @method _duringInteraction\n         * @private\n         */\n\n        this._duringInteraction = function(){\n            if (!d3.event.sourceEvent) return;\n            var extent0, selectionPoints, points;\n\n            extent0 = brush.extent();\n\n            selectionPoints = extent0;\n\n            points = [xAxis(selectionPoints[0]), xAxis(selectionPoints[1])];\n            interactionCallback.call(this, selectionPoints[0], selectionPoints[1], points);\n        };\n\n\n        /**\n         * This method renders the time overview\n         *\n         * @method render\n         * @input {Array} domainRange An array composed of two Date object and describing the actual domain\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.render = function(domainRange, currentSelection){\n            var timeWindow;\n\n            this.domainRange = domainRange;\n            this.currentSelection = currentSelection;\n\n            timeWindow = domainRange[1] - domainRange[0];\n\n            if (timeWindow < hideIfLessThanSeconds * 1000){\n                return false;\n            }\n\n            if (timeWindow < (brusherBucketLevelsMinutes.day * 60 * 1000)){\n                timeMapper = d3.time.day.utc;\n                timeTicker = d3.time.days.utc;\n                timeGrid = d3.time.hours.utc;\n                timeUnitGrid = d3.time.hour.utc;\n            }else if (timeWindow < (brusherBucketLevelsMinutes.week * 60 * 1000)){\n                timeMapper = d3.time.week.utc;\n                timeTicker = d3.time.weeks.utc;\n                timeGrid = d3.time.days.utc;\n                timeUnitGrid = d3.time.day.utc;\n            }else if (timeWindow < (brusherBucketLevelsMinutes.month * 60 * 1000)){\n                timeMapper = d3.time.month.utc;\n                timeTicker = d3.time.months.utc;\n                timeGrid = d3.time.weeks.utc;\n                timeUnitGrid = d3.time.week.utc;\n            }else if (timeWindow < (brusherBucketLevelsMinutes.months * 60 * 1000)){\n                timeMapper = d3.time.month.utc;\n                timeTicker = d3.time.months.utc;\n                timeGrid = d3.time.weeks.utc;\n                timeUnitGrid = d3.time.week.utc;\n            }else {\n                timeMapper = d3.time.year.utc;\n                timeTicker = d3.time.years.utc;\n                timeGrid = d3.time.months.utc;\n                timeUnitGrid = d3.time.month.utc;\n            }\n\n            innerWidth = width - margins.left - margins.right - borderMargin;\n            innerHeight = height - margins.top - margins.bottom;\n\n            xAxis = d3\n                .time\n                .scale\n                .utc()\n                .domain(domainRange)\n                .range([0, innerWidth]);\n\n            brush = d3.svg.brush()\n                .x(xAxis)\n                .extent(currentSelection)\n                .on(\"brush\", $this._duringInteraction)\n                .on(\"brushend\", $this._afterInteraction);\n\n            svg = dom\n                .append(\"svg\")\n                .attr(\"class\", \"time-overview\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .append(\"g\")\n                .attr(\"transform\", \"translate(\" + margins.left + \",\" + margins.top + \")\");\n\n            svg.append(\"rect\")\n                .attr(\"class\", \"grid-background\")\n                .attr(\"width\", innerWidth)\n                .attr(\"height\", innerHeight);\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x grid\")\n                .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n                .call(d3.svg.axis()\n                    .scale(xAxis)\n                    .orient(\"bottom\")\n                    .ticks(timeGrid)\n                    .tickSize(-innerHeight)\n                    .tickFormat(\"\"))\n                .selectAll(\".tick\")\n                .classed(\"minor\", function(d) { return d.getHours(); });\n\n            svg.append(\"g\")\n                .attr(\"class\", \"x axis\")\n                .attr(\"transform\", \"translate(0,\" + innerHeight + \")\")\n                .call(d3.svg.axis()\n                    .scale(xAxis)\n                    .orient(\"bottom\")\n                    .ticks(timeTicker)\n                    .tickFormat(format)\n                    .tickPadding(0))\n                .selectAll(\"text\")\n                .attr(\"x\", 6)\n                .style(\"text-anchor\", null);\n\n            groupOverview = svg.append(\"g\")\n                .attr(\"class\", \"brush\")\n                .call(brush);\n\n            groupOverview.selectAll(\"rect\")\n                .attr(\"height\", innerHeight);\n\n            labels = svg.selectAll(\"text\")\n                .style(\"text-anchor\", \"end\");\n\n            if (verticalLabels){\n                labels\n                    .attr(\"dx\", \"-1.2em\")\n                    .attr(\"dy\", \".15em\")\n                    .attr('transform', 'rotate(-65)');\n            }\n\n            return true;\n        };\n\n\n        /**\n         * This method updates the time overview. If the domainRange changes, a complete redraw is triggered.\n         *\n         * @method update\n         * @input {Array} domainRange An array composed of two Date object and describing the actual domain\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.update = function(domainRange, currentSelection){\n            var points, out;\n\n            if (this.domainRange[0] == domainRange[0] && this.domainRange[1] == domainRange[1]){\n                return this.updateSelection(currentSelection);\n            }else{\n                dom\n                    .select(\".time-overview\")\n                    .remove();\n\n                out = this.render(domainRange, currentSelection);\n                if (out) {\n                    points = [xAxis(currentSelection[0]), xAxis(currentSelection[1])];\n                    changeCallback.call(this, currentSelection[0], currentSelection[1], points);\n                }\n                return out;\n            }\n        };\n\n\n\n        /**\n         * This method redraws the time overview imposing a different width\n         *\n         * @method width\n         * @input {Number} newWidth The new width in pixels\n         */\n\n        this.width = function(newWidth){\n            if (newWidth == null){\n                return width;\n            }else{\n                if (width != newWidth && this.domainRange && this.currentSelection){\n\n                    width = newWidth;\n                    dom\n                        .select(\".time-overview\")\n                        .remove();\n\n                    this.render(this.domainRange, this.currentSelection);\n                }\n            }\n        };\n\n\n        /**\n         * This method updates the selection on the time overview\n         *\n         * @method updateSelection\n         * @input {Array} currentSelection An array composed of two Date object and describing the actual selection\n         */\n\n        this.updateSelection = function(currentSelection){\n            var points;\n\n            if (this.currentSelection != currentSelection && xAxis){\n                groupOverview\n                    .call(brush.extent(currentSelection));\n\n                points = [xAxis(currentSelection[0]), xAxis(currentSelection[1])];\n                changeCallback.call(this, currentSelection[0], currentSelection[1], points);\n\n                return true;\n            }\n            return false;\n        };\n};\n\nreturn TimeOverviewView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:25 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.view.svg.chart',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.env.config\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.lib.d3\"\n], function(utils, config, $, d3){\n\n    /**\n     * SvgChartView is the view component representing the chart in SVG terms\n     *\n     * @class SvgChartView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgChartView = function(container, margins, options) {\n        var jqueryDom, $this, padding, lineFunction, duration, chartMaxHeight, chartMinHeight, cellsMinHeight,\n            cellsMaxHeight, maxHeight, minHeight;\n\n        $this = this;\n\n        this.margin = margins;\n\n        padding = options.trackerPadding;\n        maxHeight = options.maxHeight;\n        minHeight = options.minHeight;\n        duration = options.animationDuration || 0;\n\n        lineFunction = d3.svg.line()\n            .x(function(d) { return d.x; })\n            .y(function(d) { return d.y; })\n            .interpolate(\"linear\");\n\n        this.width = function() {\n            return container.width() - (this.margin.left + this.margin.right);\n        };\n\n        this.height = function() {\n            return container.height() - (this.margin.top + this.margin.bottom);\n        };\n\n        chartMaxHeight = maxHeight;\n        chartMinHeight = minHeight;\n\n        cellsMinHeight = config.cellsMinHeight;\n        cellsMaxHeight = config.cellsMaxHeight;\n\n        this.computeBestHeight = function(numberOfRows){\n            var totalCellsMinHeight, totalCellsMaxHeight, height, residualSpace;\n\n            totalCellsMinHeight = numberOfRows * cellsMinHeight;\n            totalCellsMaxHeight = numberOfRows * cellsMaxHeight;\n\n            if (totalCellsMaxHeight <= chartMinHeight){\n                height = chartMinHeight;\n            }else if (totalCellsMaxHeight >= chartMaxHeight){\n                height = chartMaxHeight;\n            }else{\n                residualSpace = (chartMaxHeight - totalCellsMaxHeight);\n                height = Math.min(Math.max((Math.log(residualSpace) + totalCellsMinHeight), chartMinHeight), chartMaxHeight);\n            }\n\n            height = Math.min(height, chartMaxHeight);\n            height = Math.max(height, chartMinHeight);\n\n            return height;\n        };\n\n        this.chartSelectorVertical = container.svg\n            .append(\"rect\")\n            .attr(\"class\", config.domClasses.chartSelectorVertical)\n            .attr(\"fill\", config.style.chartBackground)\n            .attr(\"x\", margins.left)\n            .attr(\"y\", margins.top)\n            .style(\"stroke\", config.style.selectorRectColor)\n            .style(\"shape-rendering\", \"crispEdges\")\n            .attr(\"height\", $this.height());\n\n        this.timeBoundaries = container.svg\n            .append(\"path\")\n            .attr(\"class\", \"cone-time-boundaries\");\n\n        this.svg = container.svg\n            .append(\"g\")\n            .attr(\"class\", config.domClasses.chartDom)\n            .attr(\"transform\", \"translate(\" + margins.left + \", \" + margins.top + \")\");\n\n        this.trackerBackground = this.svg\n            .append(\"svg:rect\")\n            .attr(\"class\", \"selectionTracker\")\n            .attr(\"fill\", config.style.chartBackground)\n            .attr(\"opacity\", 0)\n            .attr(\"transform\", \"translate(-\" + padding + \", -\" + padding + \")\")\n            .attr(\"width\", $this.width() + padding + padding)\n            .attr(\"height\", $this.height() + padding + padding);\n\n        jqueryDom = $(\".\" + config.domClasses.chartDom);\n\n        this.dom = utils.encapsulateDom(jqueryDom);\n\n        this.update = function(){\n            this.svg\n                .transition()\n                .duration(duration)\n                .attr(\"height\", $this.height())\n                .attr(\"width\", $this.width());\n\n            this.chartSelectorVertical\n                .attr(\"height\", $this.height());\n\n            this.trackerBackground\n                .attr(\"width\", $this.width() + padding + padding)\n                .attr(\"height\", $this.height() + padding + padding);\n\n        };\n\n        this.updateBoundaries = function(points){\n            this.timeBoundaries\n                .attr(\"d\", lineFunction([\n                    {x: margins.left, y: $this.height() + margins.top},\n                    {x: points[0] + margins.left, y: $this.height() + margins.top + margins.bottom},\n                    {x: points[1] + margins.left, y: $this.height() + margins.top + margins.bottom},\n                    {x: $this.width() + margins.left, y: $this.height() + margins.top}\n                ]));\n        };\n\n        this.getCenter = function(){\n            var center = {};\n\n            center.x = this.width() / 2;\n            center.y = this.height() / 2;\n\n            return center;\n        };\n\n        container.updateList.push({update: this.update, context: this});\n    };\n\n    return SvgChartView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:24 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.view.svg.container',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.env.config\",\n    \"dnsmon.lib.d3\",\n    \"dnsmon.view.svg.chart\"\n], function(utils, config, d3, SvgChartView){\n\n    /**\n     * SvgContainerView is the view component representing the SVG container\n     *\n     * @class SvgContainerView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgContainerView = function(parentDom, chartMargins, options){\n        var node, svg, duration;\n\n        node = d3.select(parentDom.plain);\n\n        this.dom = parentDom;\n        this.updateList = [];\n\n        duration = options.animationDuration || 0;\n\n        this.svg = node\n            .append('svg')\n            .attr(\"class\", \"dnsmon-svg\");\n\n        this.width = function(val) {\n            if (val != null){\n                parentDom.$.width(val);\n                this.updateDimensions();\n            }\n            return parentDom.$.width();\n        };\n\n        this.height = function(val) {\n            if (val != null){\n                parentDom.$.height(val);\n                this.updateDimensions();\n            }\n\n            return parentDom.$.height();\n        };\n\n        this.updateDimensions = function(){\n            var updateFuncElement;\n\n            this.svg\n                .transition()\n                .duration(duration)\n                .attr(\"width\", parentDom.$.width())\n                .attr(\"height\", parentDom.$.height())\n                .style(\"width\", parentDom.$.width())\n                .style(\"height\", parentDom.$.height());\n\n            for (var n=0, length=this.updateList.length; n<length; n++){\n                updateFuncElement = this.updateList[n];\n                updateFuncElement.update.call(updateFuncElement.context);\n            }\n        };\n\n\n        /*\n         * Draw chart\n         */\n\n        this.chart = new SvgChartView(this, chartMargins, options);\n        this.chart.hidden = false;\n\n    };\n\n    return SvgContainerView;\n});\n","/**\n * Created by mcandela on 19/11/13.\n */\ndefine('dnsmon.view.pop-up',[\n    \"dnsmon.lib.d3\",\n    \"dnsmon.env.utils\"\n], function(d3, utils){\n\n    /**\n     * PopUpView is the view component for the cell's pop-up function\n     *\n     * @class PopUpView\n     * @constructor\n     * @module view\n     */\n\n    var PopUpView = function(env){\n        var config;\n\n        config = env.config;\n\n\n        /**\n         * This method hides the pop-up describing a cell\n         *\n         * @method hide\n         */\n\n        this.hide = function(){\n            clearTimeout(this._popupDelayTimer);\n\n            if (this.svgBalloon){\n                this.svgBalloon.group\n                    .remove();\n\n                this.svgBalloon = null;\n            }\n        };\n\n\n        /**\n         * This method shows the pop-up describing a cell\n         *\n         * @method show\n         * @input {Object} cell A cell\n         * @input {Object} mouseCoords The coordinates of the mouse cursor\n         */\n\n        this.show = function(cell, mouseCoords){\n            if (env.timeEventsActive){\n                var $this, container, chart;\n                $this = this;\n\n                clearTimeout(this._popupDelayTimer);\n\n                if (!container){\n                    container = env.container;\n                    chart = container.chart;\n                }\n\n                this._popupDelayTimer = setTimeout(function(){\n                        var balloonWidth, balloonHeight, svgBallonLeft, svgBallonRight, cursorOffset, arrowPoint,\n                            chartCenter, translationVector, arrowTop, absTranslationVector, balloonArray, lineFunction,\n                            cursorOffsetUnit, roundingFactor, balloonCellPosition, cellText, fontCharWidth, fontCharHeight,\n                            defaultYTranslation;\n\n                        fontCharWidth = 7; // Pixels\n                        fontCharHeight = 20; // Pixels\n                        defaultYTranslation = chart.margin.top + 20; // Pixels\n\n\n                        if (env.timeEventsActive){\n                            chartCenter = chart.getCenter();\n\n                            cellText = cell.toArrayString();\n\n                            balloonWidth = utils.getLongestString(cellText) * fontCharWidth;\n                            balloonHeight = cellText.length * fontCharHeight;\n\n                            chartCenter.y = Math.max(balloonHeight + defaultYTranslation, chartCenter.y); // This line avoids the pop-up to overflow the chart top margin\n\n                            cursorOffsetUnit = 3;\n\n                            absTranslationVector = {x: balloonWidth/4, y: balloonHeight/4};\n                            translationVector = {x: 0, y: 0};\n\n                            arrowTop = false;\n\n                            svgBallonLeft = [];\n                            svgBallonRight = [];\n\n                            roundingFactor = 3;\n\n                            //Balloon points\n\n                            // ---Left\n                            svgBallonLeft.push({x: balloonWidth/4, y: 0});\n\n                            svgBallonLeft.push({x: roundingFactor, y: 0}); //Rounded\n                            svgBallonLeft.push({x: 0, y: roundingFactor}); //Rounded\n\n                            svgBallonLeft.push({x: 0, y: balloonHeight - roundingFactor}); //Rounded\n                            svgBallonLeft.push({x: roundingFactor, y: balloonHeight}); //Rounded\n\n                            svgBallonLeft.push({x: balloonWidth/4, y: balloonHeight});\n\n\n                            // ---Right\n                            svgBallonRight.push({x: (balloonWidth/4)*3, y: balloonHeight});\n\n                            svgBallonRight.push({x: balloonWidth - roundingFactor, y: balloonHeight}); //Rounded\n                            svgBallonRight.push({x: balloonWidth, y: balloonHeight - roundingFactor}); //Rounded\n\n                            svgBallonRight.push({x: balloonWidth, y: roundingFactor}); //Rounded\n                            svgBallonRight.push({x: balloonWidth - roundingFactor, y: 0}); //Rounded\n\n                            svgBallonRight.push({x: (balloonWidth/4)*3, y: 0});\n\n                            if (mouseCoords.x > chartCenter.x && mouseCoords.y < chartCenter.y){ //First quadrant\n                                arrowTop = true;\n                                cursorOffset = {x: -cursorOffsetUnit, y: cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x - (absTranslationVector.x + balloonWidth);\n                                translationVector.y = mouseCoords.y + absTranslationVector.y;\n\n                            }else if (mouseCoords.x < chartCenter.x && mouseCoords.y < chartCenter.y){ //Second quadrant\n                                arrowTop = true;\n                                cursorOffset = {x: cursorOffsetUnit, y: cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x + absTranslationVector.x;\n                                translationVector.y = mouseCoords.y + absTranslationVector.y;\n\n                            }else if (mouseCoords.x < chartCenter.x && mouseCoords.y > chartCenter.y){ //Third quadrant\n                                arrowTop = false;\n                                cursorOffset = {x: cursorOffsetUnit, y: -cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x + absTranslationVector.x;\n                                translationVector.y = mouseCoords.y - (absTranslationVector.y + balloonHeight);\n\n                            }else{ //Fourth quadrant\n                                arrowTop = false;\n                                cursorOffset = {x: -cursorOffsetUnit, y: -cursorOffsetUnit}; //To avoid overlaps with the mouse cursor\n                                translationVector.x = mouseCoords.x - (absTranslationVector.x + balloonWidth);\n                                translationVector.y = mouseCoords.y - (absTranslationVector.y + balloonHeight);\n\n                            }\n\n                            svgBallonLeft = utils.translate(svgBallonLeft, translationVector);\n                            svgBallonRight = utils.translate(svgBallonRight, translationVector);\n\n                            arrowPoint = {x: mouseCoords.x + cursorOffset.x , y: mouseCoords.y + cursorOffset.y};\n\n                            //Add the arrow\n                            if (arrowTop == false){\n                                svgBallonLeft.push(arrowPoint);\n                                balloonArray = svgBallonLeft.concat(svgBallonRight);\n                            }else{\n                                svgBallonRight.push(arrowPoint);\n                                balloonArray = svgBallonRight.concat(svgBallonLeft);\n                            }\n\n                            lineFunction = d3.svg.line()\n                                .x(function(d) { return d.x; })\n                                .y(function(d) { return d.y; })\n                                .interpolate(\"linear-closed\");\n\n\n                            if (!$this.svgBalloon){\n\n                                $this.svgBalloon = {};\n\n                                $this.svgBalloon.group = container.svg\n                                    .append('g');\n\n                                $this.svgBalloon.cloud = $this.svgBalloon.group\n                                    .append(\"path\")\n                                    .attr(\"class\", \"svg-balloon\");\n\n                                $this.svgBalloon.cell = $this.svgBalloon.group\n                                    .append(\"rect\")\n                                    .attr(\"class\", \"balloon-rect\");\n\n                                $this.svgBalloon.text = $this.svgBalloon.group\n                                    .append('g');\n                            }\n\n                            $this.svgBalloon.cloud\n                                .attr(\"d\", lineFunction(balloonArray))\n                                .attr(\"stroke\", \"#757575\")\n                                .attr(\"stroke-width\", 2)\n                                .attr(\"opacity\", 0.8)\n                                .attr(\"fill\", \"white\");\n\n                            balloonCellPosition = utils.translate([{x: 0, y: 0}], translationVector)[0];\n\n                            $this.svgBalloon.cell\n                                .attr(\"width\", balloonWidth - 10)\n                                .attr(\"height\", balloonHeight - 10)\n                                .attr(\"rx\", 3)\n                                .attr(\"ry\", 3)\n                                .attr(\"x\", balloonCellPosition.x + 5)\n                                .attr(\"y\", balloonCellPosition.y + 5)\n                                .attr(\"fill\", function(){\n                                    return env.mainView.getCellColor(cell);\n                                });\n\n                            utils.writeSvgText($this.svgBalloon.text, cellText, balloonCellPosition, {left: 10, top: 20});\n                        }\n                    },\n                    config.popupDelay);\n\n            }\n        };\n    };\n    return PopUpView;\n});\n","/**\n * Created by mcandela on 28/11/13.\n */\n\ndefine('dnsmon.view.breadcrumbs',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.env.params-manager\"\n], function(utils, $, paramsManager){\n\n    /**\n     * BreadcrumbsView is the view component for the breadcrumbs function\n     *\n     * @class BreadcrumbsView\n     * @constructor\n     * @module view\n     */\n\n    var BreadcrumbsView = function(env){\n        var levelsIndex, dom, stateStack, config, $this;\n\n        config = env.config;\n        levelsIndex = [];\n        stateStack = {};\n        $this = this;\n\n        dom = $(env.mainView.templateManager.breadcrumbs);\n\n        env.mainDom.$.append(dom);\n\n        dom.css(\"margin-left\", config.labelWidth + \"px\");\n\n\n        /**\n         * This method updates the html representing the breadcrumbs\n         *\n         * @method update\n         */\n\n        this.update = function(){\n            var domElement, item, positionIndex;\n\n            domElement = $(this._getTitle());\n\n            domElement\n                .off(\"click\")\n                .on(\"click\", function(){\n\n                    item = $(this).text();\n\n                    env.params = utils.lightClone(stateStack[item]); // Rebuild the status\n\n                    positionIndex = utils.indexOf(item, levelsIndex);\n                    if (positionIndex != levelsIndex.length){\n                        levelsIndex = levelsIndex.slice(0, $.inArray(item, levelsIndex) + 1);\n\n                        $this.update();\n                    }\n                    env.mainView.redraw();\n                });\n\n            dom.html(domElement);\n        };\n\n\n        /**\n         * This method removes the last entry of the breadcrumbs\n         *\n         * @method removeLastLevel\n         */\n\n        this.removeLastLevel = function(){\n            var index;\n\n            if (levelsIndex.length > 0){\n                index = levelsIndex.pop();\n                delete stateStack[index];\n\n                this.update();\n            }\n        };\n\n\n        /**\n         * This method removes all the entries of the breadcrumbs\n         *\n         * @method resetLevels\n         */\n\n        this.resetLevels = function(){\n            levelsIndex = [];\n            stateStack = {};\n\n            dom.children().off('click');\n            this.update();\n        };\n\n\n        /**\n         * This method initialises the breadcrumbs\n         *\n         * @method init\n         */\n\n        this.init = function(){\n            if (env.initialHistory){\n                this.pushHistory(env.initialHistory);\n            }else{\n                this.addLevel(env.connector.getGroup().label);\n            }\n        };\n\n\n        /**\n         * This method pushes a new entry in the breadcrumbs based on the actual query parameters\n         *\n         * @method addLevel\n         * @input {String} levelString A string describing the new state\n         */\n\n        this.addLevel = function(levelString){\n            this._addLevelWithParams(levelString, env.params);\n        };\n\n\n        /**\n         * This method pushes a new entries and a vector of query parameters fot that entry\n         *\n         * @method _addLevelWithParams\n         * @private\n         * @input {String} levelString A string describing the new state\n         * @input {Object} levelString A vector of query parameters\n         */\n\n        this._addLevelWithParams = function(levelString, params){\n            var label;\n\n            if (!(params.type == \"servers\" && env.params.isUdm)) {\n                label = this._getLabelPrefix(params.type);\n                levelString = label + levelString;\n\n                if (utils.indexOf(levelString, levelsIndex) == -1) {\n                    levelsIndex.push(levelString);\n\n                    stateStack[levelString] = utils.lightClone(params);\n                    this.update();\n                }\n            }\n        };\n\n\n        /**\n         * This method returns the actual html representation for the breadcrumbs\n         *\n         * @method _getTitle\n         * @private\n         * @return {Array} A set of DOM elements\n         */\n\n        this._getTitle = function(){\n            var domElements, index;\n\n            domElements = [];\n\n            for (var n=0,length=levelsIndex.length; n<length; n++){\n                index = levelsIndex[n];\n                domElements.push('<span class=\"stacked-title-item\">' + index + '</span>');\n            }\n\n            return utils.join(domElements, \"&nbsp;&gt;&nbsp;\");\n        };\n\n\n        /**\n         * This method imposes a set of items based on a given history object\n         *\n         * @method pushHistory\n         * @input {Object} history A history object\n         */\n\n        this.pushHistory = function(history){\n            var historicParams, historicParamItem, group, entryId;\n\n            this.resetLevels();\n\n            for (var n=0,length=history.length; n<length; n++){\n                historicParamItem = history[n];\n                historicParams = paramsManager.mergeParams(utils.lightClone(env.params), historicParamItem.params);\n\n                group = env.connector.getGroup();\n\n                entryId = historicParamItem.id;\n\n                if (group && group.id == historicParamItem.id) {\n                    entryId = group.label\n                }\n\n                this._addLevelWithParams(paramsManager.convertLocalToRemoteId(entryId), historicParams);\n\n            }\n        };\n\n\n        this.enrichLabel = function(id, label, type) {\n            var levelStringOld, prefix, element, levelStringNew;\n\n            prefix = this._getLabelPrefix(type);\n            levelStringOld = prefix + paramsManager.convertLocalToRemoteId(id);\n            levelStringNew = prefix + label;\n\n            element = stateStack[levelStringOld];\n\n            if (element) {\n                delete stateStack[levelStringOld];\n\n                stateStack[levelStringNew] = element;\n                levelsIndex[levelsIndex.indexOf(levelStringOld)] = levelStringNew;\n\n                if (!env.fullScreenActive){\n                    this.update();\n                } else {\n                    setTimeout(function(){\n                        $this.update.call($this);\n                    }, 4000);\n                }\n            }\n        };\n\n        /**\n         * This method returns the introducing label of an entry based on its type\n         *\n         * @method _getLabelPrefix\n         * @private\n         * @input {String} type An entry type\n         * @return {String} A label\n         */\n\n        this._getLabelPrefix = function(type){\n            var label;\n\n            switch(type){\n\n                case \"servers\":\n                    label = env.lang.zoneLevelLabel;\n                    break;\n\n                case \"probes\":\n                    label = env.lang.serverLevelLabel;\n                    break;\n\n                case \"instance\":\n                    label = ''; // For now\n                    break;\n            }\n\n            return label + ': ';\n        };\n\n    };\n\n    return BreadcrumbsView;\n});\n","/**\n * Created by mcandela on 19/11/13.\n */\ndefine('dnsmon.view.full-screen',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\"\n], function(utils, $){\n\n    /**\n     * FullScreenView is the view component for the full screen feature\n     *\n     * @class FullScreenView\n     * @constructor\n     * @module view\n     */\n\n    var FullScreenView = function(env){\n\n        var oldDimensions, oldDomDimensions, oldBackground, config, templateManager, margin, body, fullScreenThrobber,\n            timeOverviewContainer, oldTimeOverviewDimensions, openTimeOverviewImage, $this, isTimeOverviewOpened,\n            windowWidth, windowHeight;\n\n        $this = this;\n        config = env.config;\n        templateManager = env.mainView.templateManager;\n        body = $('body');\n        margin = config.style.fullScreenMargin;\n        fullScreenThrobber = $(templateManager.fullScreenThrobber);\n        timeOverviewContainer = templateManager.dom.timeOverviewContainer;\n        openTimeOverviewImage = $(templateManager.openTimeOverviewImage);\n        isTimeOverviewOpened = config.timeOverviewOpenedByDefaultInFullScreen;\n\n        /**\n         * This method manages the full screen mode\n         *\n         * @method fullScreenMode\n         * @input {Boolean} fullScreen If true the full screen will be enabled\n         */\n\n        this.fullScreenMode = function(fullScreen){\n            if (fullScreen){\n                this._openFullScreen();\n            }else{\n                this._closeFullScreen();\n            }\n        };\n\n\n        /**\n         * This method shows the time overview\n         *\n         * @method openTimeOverviewPanel\n         */\n\n        this.openTimeOverviewPanel = function(){\n            timeOverviewContainer.$.css({\"position\": \"relative\"}).animate({\"height\": oldTimeOverviewDimensions.height}, 800);\n\n            env.mainView.defaultDimensions.height = windowHeight;\n            env.container.height(env.mainView.defaultDimensions.height);\n            env.mainView.redraw(function(){\n                env.container.chart.timeBoundaries.style(\"visibility\", \"visible\");\n            }, this);\n\n            openTimeOverviewImage\n                .css(\"opacity\", 0.8);\n        };\n\n\n        /**\n         * This method hides the time overview\n         *\n         * @method closeTimeOverviewPanel\n         */\n\n        this.closeTimeOverviewPanel = function(){\n            timeOverviewContainer.$.animate({\"height\": \"0\"}, 800);\n\n\n            env.mainView.defaultDimensions.height = windowHeight + config.style.timeOverviewHeight;\n            env.container.height(env.mainView.defaultDimensions.height);\n            env.mainView.redraw();\n\n            env.mainDom.$\n                .append(openTimeOverviewImage);\n\n            env.container.chart.timeBoundaries.style(\"visibility\", \"hidden\");\n\n            openTimeOverviewImage\n                .css(\"opacity\", 1)\n                .off(\"click\")\n                .on(\"click\", function(){\n\n                    if (isTimeOverviewOpened){\n                        $this.closeTimeOverviewPanel();\n                    }else{\n                        $this.openTimeOverviewPanel();\n                    }\n                    isTimeOverviewOpened = !isTimeOverviewOpened;\n                });\n        };\n\n\n        /**\n         * This method starts the full screen mode\n         *\n         * @method _openFullScreen\n         * @private\n         */\n\n        this._openFullScreen = function(){\n            oldDimensions = {width: env.container.width(), height: env.container.height()};\n            oldTimeOverviewDimensions = {width: timeOverviewContainer.$.width(), height: timeOverviewContainer.$.height()};\n            oldDomDimensions = {width: env.externalDom.$.width(), height: env.externalDom.$.height()};\n\n            oldBackground = body.css(\"background\");\n\n            windowWidth = $(window).width() - margin;\n            windowHeight = $(window).height() - margin;\n\n            env.mainView.templateManager.dom.bottomInfoSection.$.hide();\n\n            env.mainView.defaultDimensions.height = windowHeight;\n            env.container.width(windowWidth);\n\n            body.css({\n                \"visibility\": \"hidden\", // Hide the rest of the page\n                \"background\": config.style.fullScreenBackground\n            }).append(fullScreenThrobber);\n\n            timeOverviewContainer.$.addClass(\"floating-panel\");\n\n            env.externalDom.$.css({\n                width: \"auto\",\n                visibility: \"visible\",\n                position: \"fixed\",\n                opacity: 0,\n                \"z-index\": config.style.fullScreenZIndex,\n                top: \"0\",\n                left: \"0\"\n            });\n\n            env.mainView.redraw(function(){\n                env.externalDom.$.animate({\"opacity\": \"1\"}, 400);\n                fullScreenThrobber.remove();\n                if (!isTimeOverviewOpened){\n                    $this.closeTimeOverviewPanel();\n                }\n            }, this);\n        };\n\n\n        /**\n         * This method closes the full screen mode\n         *\n         * @method _closeFullScreen\n         * @private\n         */\n\n        this._closeFullScreen = function(){\n\n            isTimeOverviewOpened = config.timeOverviewOpenedByDefaultInFullScreen;\n            body.css({\n                \"visibility\":  \"visible\",\n                \"background\": oldBackground\n            });\n\n            env.container.chart.timeBoundaries.style(\"visibility\", \"visible\");\n            timeOverviewContainer.$.removeClass(\"floating-panel\").css(\"height\", oldTimeOverviewDimensions.height);\n\n            env.mainView.defaultDimensions = oldDomDimensions;\n            env.container.width(oldDimensions.width);\n\n            env.mainView.templateManager.dom.bottomInfoSection.$.show();\n\n            env.externalDom.$.css({\n                position: \"relative\",\n                visibility: \"visible\",\n                opacity: 0,\n                width: oldDomDimensions.width\n            });\n\n            env.mainView.redraw(function(){\n                env.externalDom.$.animate({\"opacity\": \"1\"}, 400);\n                openTimeOverviewImage.remove();\n            }, this);\n        };\n\n\n    };\n\n    return FullScreenView;\n});\n","/**\n * Created by mcandela on 20/11/13.\n */\n\ndefine('dnsmon.view.control-panel',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.env.params-manager\",\n    \"dnsmon.view.full-screen\"\n    //\"lib.jquery-ui.timepicker\"\n], function(utils, $, paramsManager, FullScreenView){\n\n    /**\n     * ControlPanelView is the view component managing the representation of the control panel\n     *\n     * @class ControlPanelView\n     * @constructor\n     * @module view\n     */\n\n    var ControlPanelView = function(env){\n        var container, chart, thresholdsPopup, legendColors, legendPercentages, legendUnit, config, lang, templateManager,\n            disabledOpacity, normalOpacity, filtersPopup, extraDataPopup, dnsResponseDom, tracerouteDom, lazyLoadTab2,\n            autoUpdateButton, slidingMenu, insideSubMenu, slidingMenuOpened, fullScreenButton, hostBindResponseDom,\n            lazyLoadTab3, lazyLoadTab1;\n\n        config = env.config;\n        lang = env.lang;\n        container = env.container;\n        chart = container.chart;\n        templateManager = env.mainView.templateManager;\n\n        disabledOpacity = config.style.disabledControllerOpacity;\n        normalOpacity = config.style.normalControllerOpacity;\n        this.dom = $(templateManager.controlPanel);\n\n\n        /**\n         * This method updates the width of this view\n         *\n         * @method updateWidth\n         */\n\n        this.updateWidth = function(){\n            var margin;\n\n            margin = 6;\n            this.dom.css(\"width\", env.container.chart.width() - margin + \"px\");\n        };\n\n\n        /**\n         * This method renders this view\n         *\n         * @method render\n         * @input {Object} parentDom The parent DOM where this view should be drawn\n         */\n\n        this.render = function(parentDom){\n            var $this, datepickers;\n\n            $this = this;\n            parentDom.$.prepend($this.dom);\n            this.dom.css(\"margin-left\", config.labelWidth);\n\n            this.fullScreenView = new FullScreenView(env);\n\n            datepickers = $(templateManager.timepickersPopup);\n            filtersPopup = $(templateManager.filtersPopup);\n            thresholdsPopup = $(templateManager.thresholdsPopup);\n            extraDataPopup = $(templateManager.extraDataPopup);\n            dnsResponseDom = $(templateManager.dnsResponse);\n            hostBindResponseDom = $(templateManager.hostBindResponse);\n            tracerouteDom = $(templateManager.tracerouteRensponse);\n            slidingMenu = $(templateManager.slidingMenu);\n\n            autoUpdateButton = this.dom.find(\".keep-updated\");\n            fullScreenButton = this.dom.find(\".full-screen\");\n\n            this.dialogPopUp = this.dom.find(\".dnsmon-popup\");\n\n            this.legend = this.dom.find(\".legend\");\n            this.aggregationLevelLegend = this.dom.find(\".legend-agr-level\");\n\n            this.updatePeriodically = {\n                \"dom\": autoUpdateButton,\n                \"icon\": autoUpdateButton.find(\"img\")\n            };\n\n            this.fullScreenButton = {\n                \"dom\": fullScreenButton,\n                \"icon\": fullScreenButton.find(\"img\")\n            };\n\n            this.aggregationLevelLegend.html(lang.aggregationLevelLabel + env.aggregationLabel);\n\n            this.viewSelect = this.dom.find(\".legend-controller-select\");\n\n\n\n            this.thresholdsPopup = {\n                \"dom\": thresholdsPopup,\n                \"slider\": thresholdsPopup.find(\".thresholds-slider\"),\n                \"legendPercentages\": thresholdsPopup.find(\".pls-percentage\"),\n                \"legendUnit\": thresholdsPopup.find(\".pls-unit\"),\n                \"legendColors\": thresholdsPopup.find(\".pls-color\"),\n                \"description\": thresholdsPopup.find(\".popup-pls-text\"),\n                \"messageApply\": thresholdsPopup.find(\".popup-pls-apply\")\n            };\n\n            this.extraDataPopup = {\n                \"dom\": extraDataPopup,\n                \"rawUrl\": extraDataPopup.find(\".popup-raw-data\"),\n                \"overviewRawUrl\": extraDataPopup.find(\".popup-overview-raw-data\"),\n                \"dnsResponse\": extraDataPopup.find(\".popup-dns-response\"),\n                \"hostBindResponse\": extraDataPopup.find(\".popup-hostnamebind-response\"),\n                \"traceroutePlace\":extraDataPopup.find(\".popup-traceroute\"),\n\n                \"dnsResponseDom\": dnsResponseDom,\n                \"hostBindResponseDom\": hostBindResponseDom,\n                \"tracerouteDom\": tracerouteDom\n            };\n\n            this.filtersPopup = {\n                \"dom\": filtersPopup,\n                \"excludeErrorsCheck\": filtersPopup.find(\".exclude-errors\"),\n                \"filter3Protocol\": filtersPopup.find(\".dnsmon-filter-3protocol\"),\n                \"filter4Protocol\": filtersPopup.find(\".dnsmon-filter-4protocol\")\n            };\n\n            this.datepickers = {\n                \"dom\": datepickers\n            };\n\n            legendColors = $this.legend.find(\".pls-color\");\n            legendUnit = $this.legend.find(\".pls-unit\");\n            legendPercentages = $this.legend.find(\".pls-percentage\");\n\n            legendColors.last().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[0]));\n            legendColors.first().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[1] + config.colorSeparationOffset)); // Greater than\n\n            this.thresholdsPopup.legendPercentages.last().val(env.mainView.colorDomainBreakPoints[0]);\n            this.thresholdsPopup.legendPercentages.first().val(env.mainView.colorDomainBreakPoints[1]);\n\n            this.thresholdsPopup.legendColors.last().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[0]));\n            this.thresholdsPopup.legendColors.first().css(\"background-color\", env.mainView.color(env.mainView.colorDomainBreakPoints[1] + config.colorSeparationOffset)); // Greater than\n\n\n            this.dialogPopUp.dialog({\n                resizable: false,\n                modal: true,\n                hide: 200,\n                autoOpen: false,\n                show: 100,\n                open: function(){\n                    $('.ui-dialog').addClass('default-text');\n                },\n                close: function(){\n                    $('.ui-dialog').removeClass('default-text');\n                }\n            });\n\n            this.initButtonEventHandlers();\n        };\n\n\n        /**\n         * This method creates sliding menus\n         *\n         * @method bindSlidingMenu\n         * @input {Object} callerButton The DOM element where to attach the sliding menu\n         * @input {Object} menuItemsHtml The DOM to draw inside the sliding menu\n         * @input {Number} height The height of the menu\n         * @input {String} cssClass The class to be applied to the sliding menu\n         * @input {Function} callback The callback to be called on click\n         */\n\n        this.bindSlidingMenu = function(callerButton, menuItemsHtml, height, cssClass, callback){\n            var timerHide;\n\n            if (insideSubMenu == null){\n                env.mainDom.$.append(slidingMenu); // Append the sub menu dom\n                slidingMenuOpened = false;\n                insideSubMenu = false;\n\n                slidingMenu\n                    .on(\"mouseenter\", function(){\n                        insideSubMenu = true;\n                    })\n                    .on(\"mouseleave\", function(evt){\n                        insideSubMenu = false;\n                        if ($(evt.target).attr('class') == slidingMenu.attr('class')){\n                            hideSubMenu();\n                        }\n                    });\n            }\n\n            function hideSubMenu(){\n                if (insideSubMenu == false){\n                    slidingMenu\n                        .removeClass(cssClass)\n                        .off(\"click\")\n                        .hide()\n                        .css({\n                            height: \"0\"\n                        });\n                    slidingMenuOpened = false;\n                    env.mainDom.$.tooltip(\"enable\");\n                }\n            }\n\n            callerButton\n                .on(\"mouseenter\",\n                function(){\n                    if (slidingMenuOpened == false){\n                        clearTimeout(timerHide);\n                        slidingMenuOpened = true;\n                        slidingMenu.html(menuItemsHtml);\n\n                        slidingMenu\n                            .on(\"click\", callback)\n                            .addClass(cssClass)\n                            .css({\n                                left: callerButton.position().left,\n                                top: callerButton.position().top + 20\n                            })\n                            .show()\n                            .animate({\n                                height: height\n                            }, 300);\n\n                        env.mainDom.$.tooltip(\"disable\");\n                    }\n                })\n                .on(\"mouseleave\", function(){\n                    clearTimeout(timerHide);\n                    timerHide = setTimeout(hideSubMenu, 1000);\n                });\n\n\n        };\n\n\n        /**\n         * This method populates the view selectbox with all the options\n         *\n         * @method loadPossibleView\n         */\n\n        this.loadPossibleView = function(){\n            var queryType;\n            queryType = env.params.type;\n\n            this.removeAllViews();\n\n            switch(queryType){\n                case \"probes\":\n                    this.addPossibleView(lang.packetLossLabel, \"pls\");\n                    this.addPossibleView(lang.responseTimeLabel, \"rtt\");\n                    this.addPossibleView(lang.relativeResponseTimeLabel, \"relative-rtt\");\n                    break;\n\n                case \"servers\":\n                    this.addPossibleView(lang.packetLossLabel, \"pls\");\n                    this.addPossibleView(lang.responseTimeLabel, \"rtt\");\n                    this.addPossibleView(lang.relativeResponseTimeLabel, \"relative-rtt\");\n                    break;\n\n                case \"instances\":\n                    this.addPossibleView(lang.numberProbesLabel, \"prb\");\n                    this.addPossibleView(lang.responseTimeLabel, \"rtt\");\n                    this.addPossibleView(lang.relativeResponseTimeLabel, \"relative-rtt\");\n                    break;\n            }\n        };\n\n\n        /**\n         * This method manages the auto-update function. It is an indirection for keepUpdated in MainView but it manages\n         * the menu and the feedback for the user\n         *\n         * @method keepUpdatedActive\n         * @input {Boolean} active If true the auto-update function will be activated\n         */\n\n        this.keepUpdatedActive = function(active){\n            if(env.isOngoing){ // Is the measurement ongoing?\n                if (!active){\n                    env.mainView.showMessage(lang.keepUpdatedNotActive);\n                    this.updatePeriodically.icon.attr(\"src\", env.widgetUrl + 'view/img/keep_updated_icon.png');\n                }else{\n                    env.mainView.showMessage(lang.keepUpdatedActive);\n                    this.updatePeriodically.icon.attr(\"src\", env.widgetUrl + 'view/img/keep_updated_icon_move2.png');\n                }\n\n                env.isUpdatedPeriodicallyActive = active;\n                env.mainView.timeController.keepUpdated(active);\n            }\n        };\n\n\n        /**\n         * This method manages all the auto-start functions\n         *\n         * @method _initAutoStartFunctions\n         * @private\n         */\n\n        this._initAutoStartFunctions = function(){\n            var $this;\n\n            $this = this;\n\n            env.mainView.on(\"load\", function(){\n\n                if (env.isUpdatedPeriodicallyActive){\n                    $this.keepUpdatedActive(true); // Start the auto-update function\n                }\n\n                if (env.fullScreenActive){\n                    $this.fullScreenView.fullScreenMode(true); // Start the full-screen\n                }\n\n            });\n        };\n\n\n        /**\n         * This method creates all the listeners for the controllers\n         *\n         * @method initButtonEventHandlers\n         */\n\n        this.initButtonEventHandlers = function(){\n            var timeController, manualZoomFactor, $this;\n\n            timeController = env.mainView.timeController;\n            manualZoomFactor = config.manualZoomFactor;\n            $this = this;\n\n            this._initAutoStartFunctions();\n\n            this.updatePeriodicallyButton = this.updatePeriodically.dom\n                .attr(\"title\", lang.keepUpdatedTitle)\n                .css(\"opacity\", disabledOpacity)\n                .on(\"click\", function(){\n                    env.isUpdatedPeriodicallyActive = !env.isUpdatedPeriodicallyActive;\n                    $this.keepUpdatedActive(env.isUpdatedPeriodicallyActive);\n                });\n\n\n            this.zoomInButton = this.dom\n                .find(\".zoom-in\")\n                .attr(\"title\", lang.zoomInTitle)\n                .on(\"click\", function(){\n                    if (env.isZoomableIn){\n                        timeController.zoomIn.call(timeController, manualZoomFactor);\n                    }\n                });\n\n            this.zoomOutButton = this.dom\n                .find(\".zoom-out\")\n                .attr(\"title\", lang.zoomOutTitle)\n                .on(\"click\", function(){\n                    if (env.isZoomableOut){\n                        timeController.zoomOut.call(timeController, manualZoomFactor);\n                    }\n                });\n\n            this.leftButton = this.dom\n                .find(\".left\")\n                .attr(\"title\", lang.shiftLeftTitle)\n                .on(\"click\", function(){\n                    if (env.isTranslableLeft){\n                        timeController.shiftLeft.call(timeController);\n                    }\n                });\n\n            this.rightButton = this.dom\n                .find(\".right\")\n                .attr(\"title\", lang.shiftRightTitle)\n                .on(\"click\", function(){\n                    if (env.isTranslableRight){\n                        timeController.shiftRight.call(timeController);\n                    }\n                });\n\n            this.fullScreenButton.dom\n                .attr(\"title\", lang.fullScreenTitle)\n                .on(\"click\", function(){\n                    env.fullScreenActive = !env.fullScreenActive; // Toggle full screen\n                    $this.setFullScreen(env.fullScreenActive);\n                });\n\n            this.forwardButton = this.dom\n                .find(\".forward\")\n                .attr(\"title\", lang.forwardTitle)\n                .on(\"click\", function(){\n                    timeController.getNewData.call(timeController, null);\n                });\n\n            this.bindSlidingMenu(this.forwardButton, $(templateManager.getLastData), 90, 'get-last-data-sliding-panel', function(evt){\n                var value;\n\n                value = paramsManager.convertRemoteToLocalTimeWindow($(evt.target).text());\n\n                timeController.getNewData.call(timeController, value);\n            });\n\n\n            this.datepickerButton = this.dom\n                .find(\".timepicker\")\n                .attr(\"title\", lang.changeTimeWindowTitle)\n                .on(\"click\", function(){\n\n                    $this.dialogPopUp.html($this.datepickers.dom);\n                    $this.dialogPopUp.dialog(\"open\");\n\n                    $this.datepickers.start = $this.dialogPopUp.find(\".timepicker-start\");\n                    $this.datepickers.stop = $this.dialogPopUp.find(\".timepicker-stop\");\n\n                    $this.datepickers.start.datetimepicker({\n                        minDate: utils.localDateToUTCDate(env.measurementStartTime),\n                        maxDate: utils.localDateToUTCDate(env.measurementEndTime),\n                        dateFormat: \"yy-mm-dd\",\n                        beforeShow: function(){\n                            $('#ui-datepicker-div').addClass('default-text');\n                        },\n                        onClose: function(){\n                            $('#ui-datepicker-div').removeClass('default-text');\n                        }\n                    });\n\n                    $this.datepickers.stop.datetimepicker({\n                        minDate: utils.localDateToUTCDate(env.measurementStartTime),\n                        maxDate: utils.localDateToUTCDate(env.measurementEndTime),\n                        dateFormat: \"yy-mm-dd\",\n                        beforeShow: function(){\n                            $('#ui-datepicker-div').addClass('default-text');\n                        },\n                        onClose: function(){\n                            $('#ui-datepicker-div').removeClass('default-text');\n                        }\n                    });\n\n                    $this.datepickers.start.datepicker(\"setDate\", utils.localDateToUTCDate(env.params.startDate));\n                    $this.datepickers.stop.datepicker(\"setDate\", utils.localDateToUTCDate(env.params.endDate));\n\n\n                    $this.dialogPopUp.dialog({\n                        title: lang.changeTimeWindowTitle,\n                        width: 380,\n                        height: 140,\n                        buttons: {\n                            \"Cancel\": function() {\n                                $(this).dialog(\"close\");\n                            },\n\n                            \"Apply\": function() {\n                                env.params.startDate = utils.UTCDateToLocalDate($this.datepickers.start.datetimepicker('getDate'));\n                                env.params.endDate = utils.UTCDateToLocalDate($this.datepickers.stop.datetimepicker('getDate'));\n                                env.mainView.updateXDomain(true);\n                                $(this).dialog(\"close\");\n                            }\n                        },\n                        beforeClose: function() {\n                            $this.datepickers.start.datepicker(\"destroy\");\n                            $this.datepickers.stop.datepicker(\"destroy\");\n                        }\n                    });\n\n                });\n\n            this.thresholdsButton = this.dom\n                .find(\".thresholds,.legend-pls\") // Both button and legend are clickable STAT-511\n                .attr(\"title\", lang.changeColorsRangeTitle)\n                .on(\"click\", function(){\n                    var thresholdsRanges;\n\n                    $this.dialogPopUp.dialog(\"open\");\n\n                    thresholdsRanges = $this._getThresholdsRanges();\n                    $this.dialogPopUp.html($this.thresholdsPopup.dom);\n\n                    $this.dialogPopUp.dialog({\n                        title: lang.changeColorsRangeTitle,\n                        width: 460,\n                        height: 220,\n                        buttons: {\n\n                            \"Default\": function(){\n                                var newColorScale, showFilter;\n\n                                showFilter = env.showFilter;\n\n                                newColorScale = utils.computeColorScale(config.normalColorScales[showFilter]);\n                                env.mainView.updateOnlyColors(newColorScale.valueRange);\n                                $this.updateLegend(newColorScale.valueRange[2], newColorScale.valueRange[3]);\n                                env.history.update();\n                                $(this).dialog(\"close\");\n                            },\n\n                            \"Close\": function() {\n                                $(this).dialog(\"close\");\n                            }\n                        }\n                    });\n\n                    $this.thresholdsPopup.description.html(lang.thresholdsDescritions[env.showFilter]);\n\n                    $this.thresholdsPopup.slider.show();\n                    $this.thresholdsPopup.messageApply.hide();\n\n                    $this.thresholdsPopup\n                        .slider\n                        .slider({\n                            range: true,\n                            min: thresholdsRanges[0],\n                            max: thresholdsRanges[1],\n                            values: env.mainView.colorDomainBreakPoints,\n                            stop: function(){\n                                env.history.update();\n                            },\n                            slide: function(event, ui) {\n                                var newValuesRange;\n\n                                $this.updateLegend(ui.values[0], ui.values[1]);\n\n                                newValuesRange = [\n                                    thresholdsRanges[0],\n                                    ui.values[0],\n                                    ui.values[0],\n                                    ui.values[1],\n                                    thresholdsRanges[1]\n                                ];\n                                env.mainView.updateOnlyColors(newValuesRange);\n                            }\n                        });\n\n                    $this.thresholdsPopup.legendPercentages\n                        .off('keydown')\n                        .off('change')\n                        .on('keydown', function(evt){\n                            var unicode;\n\n                            evt.stopPropagation();\n                            unicode = (evt.which) ? evt.which : evt.keyCode;\n                            if (!(unicode > 31 && (unicode < 48 || unicode > 57) && (unicode < 96 || unicode > 105))) {\n                                $this.thresholdsPopup.slider.hide();\n                                $this.thresholdsPopup.messageApply.show();\n                            }\n                        })\n                        .on('change keyup', function(evt){\n                            var max, min, valueMax, valueMin, values, slider, parent, unicode;\n                            evt.stopPropagation();\n\n                            unicode = (evt.which) ? evt.which : evt.keyCode;\n\n                            if (!unicode || unicode == 13){\n\n                                $this.thresholdsPopup.messageApply.hide();\n                                slider = $this.thresholdsPopup.slider;\n\n                                slider.show();\n\n                                max = slider.slider('option', 'max');\n                                min = slider.slider('option', 'min');\n\n                                parent = $this.thresholdsPopup.dom;\n\n                                values = [parseFloat(parent.find('.min-val').val()), parseFloat(parent.find('.max-val').val())];\n\n                                valueMin = (utils.isNumber(values[0]) && values[0] < max && values[0] > min) ? parseFloat(values[0]) : parseFloat(min);\n                                valueMax = (utils.isNumber(values[1]) && values[1] < max && values[1] > min) ? parseFloat(values[1]) : parseFloat(max);\n\n\n                                if (valueMax < valueMin){ // Don't invert the boundaries\n                                    if (valueMax == parseFloat($(this).val())){ // Give to the user a feedback related to what is changed in the last interaction\n                                        valueMax = valueMin;\n                                    }else{\n                                        valueMin = valueMax;\n                                    }\n\n                                }\n\n                                slider.slider(\"values\", 1, valueMin);\n                                $this.thresholdsPopup.legendPercentages.last().val(valueMin);\n\n                                slider.slider(\"values\", 0, valueMax);\n                                $this.thresholdsPopup.legendPercentages.first().val(valueMax);\n\n                                $this.updateLegend(valueMin, valueMax);\n                                env.mainView.updateOnlyColors([min, valueMin, valueMin, valueMax, max]);\n                            }\n                        });\n                });\n\n            this.allRowsButton = this.dom\n                .find(\".allrows\")\n                .attr(\"title\", lang.allRowsTitle)\n                .css(\"opacity\", disabledOpacity)\n                .on(\"click\", function(){\n                    if (env.params.selectedRows.length != 0){\n\n                        env.params.selectedRows = [];\n                        env.params.filterProbes = false;\n                        env.mainView.redraw();\n                    }\n                });\n\n            this.filterSelection = this.dom\n                .find(\".filters\")\n                .attr(\"title\", lang.filterSelectionTitle)\n                .on(\"click\", function(){\n\n                    $this.dialogPopUp.dialog(\"open\");\n                    $this.dialogPopUp.html($this.filtersPopup.dom);\n\n                    $this.dialogPopUp.dialog({\n                        title: lang.filtersPopupTitle,\n                        width: 300,\n                        height: 140,\n                        buttons: {\n                            \"Close\": function() {\n                                $(this).dialog(\"close\");\n                            }\n                        }\n                    });\n\n                    $this.filtersPopup\n                        .excludeErrorsCheck\n                        .off(\"click\")\n                        .attr('checked', (env.session.getValue('exclude-errors') == 'true'))\n                        .on(\"click\", function(){\n                            env.session.saveValue('exclude-errors', $(this).is(\":checked\"));\n                            env.mainView.redraw();\n                        });\n\n\n                    $this.filtersPopup\n                        .filter3Protocol\n                        .off(\"change\")\n                        .attr(\"disabled\", (env.params.type == \"probes\"))\n                        .val((env.params.ipVersion == null) ? \"both\" : env.params.ipVersion)\n                        .on(\"change\", function(){\n                            var actualVal;\n\n                            actualVal = $(this).val();\n                            actualVal = (actualVal == \"both\") ? null : actualVal;\n                            env.params.selectedRows = [];\n                            env.params.ipVersion = actualVal;\n                            env.mainView.redraw();\n                        });\n\n                    $this.filtersPopup\n                        .filter4Protocol\n                        .off(\"change\")\n                        .val((env.params.isTcp) ? \"tcp\" : \"udp\")\n                        .on(\"change\", function(){\n                            env.params.isTcp = ($(this).val() == \"tcp\");\n                            env.mainView.redraw();\n                        })\n                        .attr(\"disabled\", env.params.isUdm);\n\n                });\n\n            this.viewSelect\n                .on(\"change\", function(){\n                    env.showFilter = $(this).val();\n                    env.mainView.redraw();\n                });\n        };\n\n\n        /**\n         * This method returns the ranges for the colors thresholds\n         *\n         * @method _getThresholdsRanges\n         * @private\n         * @return {Array} An array composed of two integers\n         */\n\n        this._getThresholdsRanges = function(){\n            var showFilter;\n\n            showFilter = env.showFilter;\n            switch(showFilter){\n                case \"pls\":\n                    return [0, 100];\n                    break;\n\n                case \"rtt\":\n                    return [0, 5000];\n                    break;\n\n                case \"relative-rtt\":\n                    return [0, 1000];\n                    break;\n\n                case \"prb\":\n                    return [0, 5000];\n                    break;\n            }\n        };\n\n\n        /**\n         * This method manages the full screen mode. It is an indirection for fullScreenMode in FullScreenView\n         * but it manages the menu and the feedback for the user\n         *\n         * @method setFullScreen\n         * @return {Boolean} fullScreen If true the full screen will be activated\n         */\n\n        this.setFullScreen = function(fullScreen){\n            var icon;\n\n            icon = (fullScreen) ? 'view/img/dnsmon_smallscreen_icon.png' : 'view/img/dnsmon_fullscreen_icon.png';\n\n            this.fullScreenButton.icon.attr(\"src\", env.widgetUrl + icon);\n            this.fullScreenView.fullScreenMode(fullScreen);\n        };\n\n\n        /**\n         * This method updates the status of all the items in the menu (e.g. if a button is clickable or not)\n         *\n         * @method update\n         */\n\n        this.update = function(){\n            this.allRowsButton.css(\"opacity\", (env.params.selectedRows.length == 0) ? disabledOpacity : normalOpacity);\n            this.rightButton.css(\"opacity\", (env.isTranslableRight == false) ? disabledOpacity : normalOpacity);\n            this.leftButton.css(\"opacity\", (env.isTranslableLeft == false) ? disabledOpacity : normalOpacity);\n            this.zoomInButton.css(\"opacity\", (env.isZoomableIn == false) ? disabledOpacity : normalOpacity);\n            this.zoomOutButton.css(\"opacity\", (env.isZoomableOut == false) ? disabledOpacity : normalOpacity);\n\n            this.updatePeriodicallyButton.css(\"opacity\", (env.isOngoing == false) ? disabledOpacity : normalOpacity);\n\n\n            this.updateAggregationLevelLegend(lang.aggregationLevelLabel + ': ' + env.aggregationLabel);\n\n            this.updateLegend(env.mainView.colorDomainBreakPoints[0], env.mainView.colorDomainBreakPoints[1]);\n\n            this.loadPossibleView();\n        };\n\n\n        /**\n         * This method updates the color thresholds with the new values\n         *\n         * @method updateLegend\n         * @input {Number} firstValue An integer for the first threshold\n         * @input {Number} secondValue An integer for the second threshold\n         */\n\n        this.updateLegend = function(firstValue, secondValue){\n            var firstUnit, secondUnit, showFilter, realFirstValue, realSecondValue, realFirstUnit, realSecondUnit;\n\n            showFilter = env.showFilter;\n\n            realFirstValue = firstValue;\n            realSecondValue = secondValue;\n\n            switch(showFilter){\n                case \"pls\":\n                    realFirstUnit = \"%\";\n                    realSecondUnit = \"%\";\n                    firstUnit = realFirstUnit;\n                    secondUnit = realSecondUnit;\n                    break;\n\n                case \"rtt\":\n                    if (firstValue >= 1000){\n                        firstValue = (firstValue/1000).toFixed(1);\n                        realFirstUnit = \"ms\";\n                        firstUnit = \"s\";\n                    }else{\n                        realFirstUnit = \"ms\";\n                        firstUnit = \"ms\";\n                    }\n\n                    if (secondValue >= 1000){\n                        secondValue = (secondValue/1000).toFixed(1);\n                        realSecondUnit = \"ms\";\n                        secondUnit = \"s\";\n                    }else{\n                        realSecondUnit = \"ms\";\n                        secondUnit = \"ms\";\n                    }\n\n                    break;\n\n                case \"relative-rtt\":\n                    realFirstUnit = \"%\";\n                    realSecondUnit = \"%\";\n                    firstUnit = realFirstUnit;\n                    secondUnit = realSecondUnit;\n                    break;\n\n                case \"prb\":\n                    firstUnit = \"#p\";\n                    secondUnit = \"#p\";\n                    break;\n            }\n\n            legendPercentages.last().html(firstValue);\n            legendPercentages.first().html(secondValue);\n\n            legendUnit.last().html(firstUnit);\n            legendUnit.first().html(secondUnit);\n\n            this.thresholdsPopup.legendPercentages.last().val(realFirstValue);\n            this.thresholdsPopup.legendPercentages.first().val(realSecondValue);\n\n            this.thresholdsPopup.legendUnit.last().html(realFirstUnit);\n            this.thresholdsPopup.legendUnit.first().html(realSecondUnit);\n        };\n\n\n        /**\n         * This method updates the data resolution legend\n         *\n         * @method updateAggregationLevelLegend\n         * @input {String} newLabel The new legend\n         */\n\n        this.updateAggregationLevelLegend = function(newLabel){\n            var domElement;\n            domElement = this.aggregationLevelLegend;\n\n            if (domElement.text() != newLabel){\n                domElement\n                    .html(newLabel)\n                    .attr(\"title\", lang.aggregationLevelTitle)\n                    .toggleClass(\"updated\");\n\n                setTimeout(function(){\n                    domElement.toggleClass(\"updated\");\n                }, config.aggregationLegendUpdatedDuration);\n            }\n\n        };\n\n\n        /**\n         * This method appends an option for the selectobox fo the views\n         *\n         * @method addPossibleView\n         * @input {String} label The name of the view\n         * @input {String} value The value/key of the view\n         */\n\n        this.addPossibleView = function(label, value){\n            var checked, showFilter;\n\n            showFilter = env.showFilter;\n\n            checked = (value == showFilter) ? 'selected=\"selected\"' : '' ;\n            this.viewSelect.append('<option value=\"' + value + '\" ' + checked + '>' + label + '</option>');\n        };\n\n\n        /**\n         * This method removes all the options of the selectobox fo the views\n         *\n         * @method removeAllViews\n         */\n\n        this.removeAllViews = function(){\n            this.viewSelect.html(\"\");\n        };\n\n\n        this._showDnsResponse = function(cell, dnsResponsePlace){\n            var htmlDnsResponse, dataItem;\n\n            try {\n                this.dialogPopUp.dialog({height: 320, minWidth: 0, minHeight: 0, maxHeight: 0});\n                this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n                if (!lazyLoadTab1) {\n                    env.connector.getNativeDnsResult(cell, function (data) { // Show the DNS response\n\n                        lazyLoadTab1 = true;\n                        for (var n = 0, length = data.length; n < length; n++) {\n                            dataItem = data[n];\n                            htmlDnsResponse = this.extraDataPopup.dnsResponseDom.clone();\n\n                            htmlDnsResponse.find(\".dns-response-prbid\").html(dataItem.probeId);\n                            htmlDnsResponse.find(\".dns-response-rt\").html(dataItem.responseTime);\n                            htmlDnsResponse.find(\".dns-response-date\").html(utils.dateToString(dataItem.date));\n\n                            if (dataItem.nsId) {\n                                htmlDnsResponse.find(\".dns-response-nsid\").html(dataItem.nsId);\n                            } else {\n                                htmlDnsResponse.find(\".dns-response-nsid-rd\").hide();\n                            }\n\n                            if (dataItem.response && dataItem.response != '') {\n                                htmlDnsResponse.find(\".dns-response-plaintext\").html(dataItem.response);\n                            }\n\n                            if (dataItem.error) {\n                                htmlDnsResponse.find(\".dns-response-plaintext\").addClass(\"dns-response-error\").html('[' + dataItem.error.type + '] ' + dataItem.error.message);\n                            }\n\n                            dnsResponsePlace.append(htmlDnsResponse);\n                        }\n\n                    }, this);\n                }\n\n            } catch(error){\n                dnsResponsePlace.html(\"No DNS measurement set.\");\n            }\n        };\n\n\n        this._showTraceroutes = function(cell, traceroutePlace){\n            var dataItem, textareaWidth, tracerouteArea;\n\n            try {\n\n                this.dialogPopUp.dialog({height: 512, minWidth: 490, minHeight: 512, maxHeight: 512});\n                this.dialogPopUp.dialog(\"option\", \"resizable\", true);\n                if (!lazyLoadTab2) {\n                    env.connector.getClosestTraceroutes(cell, function (data) { // Show the closest Traceroutes\n                        lazyLoadTab2 = true;\n                        if (data.length > 0) {\n                            tracerouteDom = this.extraDataPopup.tracerouteDom.clone();\n                            traceroutePlace.append(tracerouteDom);\n\n                            if (data.length >= 2) {\n//                            this.dialogPopUp.dialog(\"option\", \"resizable\", true);\n                                this.dialogPopUp.dialog({\n                                    resize: function (event, ui) {\n                                        if (ui.size.width > textareaWidth * 2 + 74) {\n                                            $(this).addClass(\"resized-dialog-traceroute\");\n                                        } else {\n                                            $(this).removeClass(\"resized-dialog-traceroute\");\n                                        }\n                                    }\n                                });\n\n                            } else {\n                                this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n                            }\n\n                            for (var n = 0, length = data.length; n < length; n++) {\n\n                                dataItem = data[n];\n\n                                tracerouteArea = $('<div class=\"textarea\"></div>').tooltip(\n                                    {\n                                        tooltipClass: 'custom-jquery-ui-tooltip',\n                                        hide: {\n                                            effect: \"fade\",\n                                            duration: config.tooltipFade\n                                        }\n                                    });\n\n                                tracerouteArea.html(dataItem);\n                                tracerouteDom.append(tracerouteArea);\n                                textareaWidth = tracerouteArea.outerWidth();\n                            }\n\n                        }\n                    }, this);\n                }\n\n            } catch(error){\n                traceroutePlace.html(\"No traceroute measurement set.\");\n            }\n        };\n\n        this._showHostonameBindResponse = function(cell, hostBindResponsePlace){\n            var htmlHostnameResponse, dataItem;\n\n            try {\n                this.dialogPopUp.dialog({height: 380, minWidth: 0, minHeight: 0, maxHeight: 0});\n                this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n                if (!lazyLoadTab3) {\n                    env.connector.getClosestHostnameBind(cell, function (data) { // Show the closest Hostname Bind\n                        lazyLoadTab3 = true;\n\n                        if (data.length > 0) {\n                            for (var n = 0, length = data.length; n < length; n++) {\n                                dataItem = data[n];\n\n                                htmlHostnameResponse = this.extraDataPopup.hostBindResponseDom.clone();\n                                htmlHostnameResponse.find(\".hostbind-response-prbid\").html(dataItem.probeId);\n                                htmlHostnameResponse.find(\".hostbind-response-msmId\").html(dataItem.msmId);\n                                htmlHostnameResponse.find(\".hostbind-response-rt\").html(dataItem.responseTime);\n                                htmlHostnameResponse.find(\".hostbind-response-date\").html(utils.dateToString(dataItem.date));\n\n                                if (dataItem.response && dataItem.response != '') {\n                                    htmlHostnameResponse.find(\".hostbind-response-plaintext\").html(dataItem.response);\n                                } else {\n                                    htmlHostnameResponse.find(\".hostbind-response-plaintext\").html(env.lang.hostBindResponseNoAnswer);\n                                }\n\n                                hostBindResponsePlace.append(htmlHostnameResponse);\n                            }\n\n                        }\n                    }, this);\n                }\n\n            } catch(error){\n                hostBindResponsePlace.html(\"No hostname.bind measurement set.\");\n            }\n        };\n\n        /**\n         * This method renders a dialog box with all the information related to a cell\n         *\n         * @method showExtraInfoDialog\n         * @input {Object} cell A cell object\n         */\n\n        this.showExtraInfoDialog = function(cell){\n            var overviewUrls, sampleUrls, parentOverview, parentSample, linkText, linkUrl, linkCurrent, urlItem,\n                dnsResponsePlace, traceroutePlace, dialogHeight, n, length, hostBindResponsePlace, $this;\n\n            $this = this;\n\n            lazyLoadTab1 = false;\n            lazyLoadTab2 = false;\n            lazyLoadTab3 = false;\n\n            overviewUrls = env.connector.getDataUrls(cell);\n            sampleUrls = env.connector.getCellDataUrls(cell);\n\n            dialogHeight = 210;\n\n            this.dialogPopUp.dialog({\n                title: lang.extraInfoDialogTitle,\n                width: 500,\n                height: dialogHeight,\n                close: function(){\n                    var $this;\n\n                    $this = $(this);\n                    $this.removeClass(\"resized-dialog-traceroute\");\n                    $this.dialog({height: 0, minWidth: 0, minHeight: 0, maxHeight: Infinity});\n                    $this.dialog(\"option\", \"resizable\", false);\n                },\n                buttons: {\n                    \"Close\": function() {\n                        $(this).dialog(\"close\");\n                    }\n                }\n            });\n\n            this.dialogPopUp.dialog(\"open\");\n            this.dialogPopUp.html(this.extraDataPopup.dom);\n\n            parentOverview = this.extraDataPopup.overviewRawUrl;\n            parentSample = this.extraDataPopup.rawUrl;\n\n            parentOverview.html('');\n            parentSample.html('');\n\n            for (n=0,length=sampleUrls.length; n<length; n++){\n                urlItem = sampleUrls[n];\n                linkUrl = urlItem.url;\n                linkText = urlItem.label;\n                linkCurrent = urlItem.current;\n\n                if (env.retrievedAggregationLevel != 0 || linkCurrent){\n                    parentSample.append('<a target=\"_blank\" href=\"' + linkUrl + '\" title=\"' + linkText + '\">' + linkText + ((linkCurrent) ? ' (current)' : '') + '</a> ');\n                }\n            }\n\n            for (n=0,length=overviewUrls.length; n<length; n++){\n                urlItem = overviewUrls[n];\n                linkUrl = urlItem.url;\n                linkText = urlItem.label;\n                linkCurrent = urlItem.current;\n                if (env.retrievedAggregationLevel != 0 || linkCurrent){\n                    parentOverview.append('<a target=\"_blank\" href=\"' + linkUrl + '\" title=\"' + linkText + '\">' + linkText + ((linkCurrent) ? ' (current)' : '') + '</a> ');\n                }\n            }\n\n            dnsResponsePlace = this.extraDataPopup.dnsResponse;\n            dnsResponsePlace.html(\"\").removeClass('dns-response-error');\n\n            hostBindResponsePlace = this.extraDataPopup.hostBindResponse;\n            hostBindResponsePlace.html(\"\").removeClass('hostbind-response-error');\n\n            traceroutePlace = this.extraDataPopup.traceroutePlace;\n            traceroutePlace.html(\"\");\n\n            this.dialogPopUp.dialog(\"option\", \"resizable\", false);\n\n            if (env.retrievedAggregationLevel == 0) { //&& !env.params.isUdm\n                this.dialogPopUp\n                    .find('.popup-tabs')\n                    .show()\n                    .tabs()\n                    .find('a')\n                    .on('click', function () {\n                        var tab, tabId;\n\n                        tab = $(this);\n                        tabId = tab.attr('href');\n\n                        switch (tabId) {\n\n                            case '#tabs-1':\n                                $this._showDnsResponse(cell, dnsResponsePlace);\n                                break;\n\n                            case '#tabs-2':\n                                $this._showTraceroutes(cell, traceroutePlace);\n                                break;\n\n                            case '#tabs-3':\n                                $this._showHostonameBindResponse(cell, hostBindResponsePlace);\n                                break;\n                        }\n                    });\n                this._showDnsResponse(cell, dnsResponsePlace);\n            } else {\n                this.dialogPopUp.find('.popup-tabs').hide();\n            }\n\n        };\n\n\n    };\n\n    return ControlPanelView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 9/20/13\n * Time: 10:59 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.controller.gesture-manager',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.lib.d3\"\n], function(utils, $, d3){\n\n    /**\n     * GesturesManager provides all the features handling user gestures/interactions.\n     *\n     * @class GesturesManager\n     * @constructor\n     * @module controller\n     */\n\n    var GesturesManager =  function(env){\n        var $this, config, mouseWheelSensibility, eventsAttachedOn;\n\n        $this = this;\n        config = env.config;\n        mouseWheelSensibility = config.mouseWheelSensibility;\n\n        this.alreadyInit = false;\n        this.eventsList = {};\n        this.eventsList.scrollDown = [];\n        this.eventsList.scrollUp = [];\n        this.eventsList.scrollLeft = [];\n        this.eventsList.scrollRight = [];\n\n        env.timeEventsActive = true;\n\n\n        /**\n         * Attach a callback to a gesture\n         *\n         * @method on\n         * @param {String} evt An event id\n         * @param {Function} callback A callback\n         * @param {Object} context The context of the callback\n         */\n\n        this.on = function(evt, func, context){\n\n            if (!this.alreadyInit) {\n                this._init();\n                this.alreadyInit = true;\n            }\n\n            this.eventsList[evt].push({\n                bindedFunction: func,\n                context: context\n            });\n\n        };\n\n\n        /**\n         * Initialise all the events related to the mouse wheel\n         *\n         * @method _initMouseWheel\n         * @private\n         */\n\n        this._initMouseWheel = function(){\n            env.container.chart.dom.$.on('DOMMouseScroll mousewheel', function (evt) {\n                var list, element, newYDomain, wheelDelta, characherization;\n\n                evt.preventDefault();\n\n                if (mouseWheelSensibility != 0){\n                    mouseWheelSensibility--;\n                    return false;\n                }else{\n                    mouseWheelSensibility = config.mouseWheelSensibility;\n                }\n\n                list = [];\n\n                if (env.timeEventsActive ==  true){\n\n                    if (env.isUpdatedPeriodicallyActive){ // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    wheelDelta = evt.originalEvent.detail || -(evt.originalEvent.wheelDelta/120);\n\n                    if (wheelDelta < 0) { //alternative options for wheelData: wheelDeltaX & wheelDeltaY\n\n                        list = $this.eventsList.scrollDown;\n\n                    }else{\n\n                        if (config.allRowsZoomingOut && $this.rowsSubSelection){ // It is possible to get all the rows before to zoom out, check config.allRowsZoomingOut\n\n                            $this.rowsSubSelection = false;\n                            env.timeEventsActive = false;\n                            env.params.selectedRows = [];\n                            characherization = env.mainView.rowsCharacterization(env.mainView.rows);\n                            newYDomain = characherization.domain;\n                            env.mainView.yAxis.setDomain(function(){return newYDomain;});\n                            env.mainView.redraw();\n\n                        }else{\n                            list = $this.eventsList.scrollUp;\n                        }\n\n                    }\n\n                    for (var n=0,length=list.length; n<length; n++){\n                        element = list[n];\n                        element.bindedFunction.call(element.context, wheelDelta);\n                    }\n\n                }\n                return false;\n            });\n\n        };\n\n\n        /**\n         * Initialise all the events related to the keyboard\n         *\n         * @method _initKeyEvents\n         * @private\n         */\n\n        this._initKeyEvents = function(){\n            eventsAttachedOn.$.keydown(function(evt){\n                var list, element, key;\n\n                if (env.timeEventsActive ==  true){\n                    key = (evt.which) ? evt.which : evt.keyCode;\n                    switch(key){\n                        case 37: //Left\n                            list = $this.eventsList.scrollLeft;\n                            break;\n\n                        case 39: //Right\n                            list = $this.eventsList.scrollRight;\n                            break;\n                    }\n\n                    if (list){\n                        evt.preventDefault();\n\n                        for (var n=0,length=list.length; n<length; n++){\n                            element = list[n];\n                            element.bindedFunction.call(element.context);\n                        }\n                    }\n                }\n\n            });\n        };\n\n\n        /**\n         * Initialise all the events\n         *\n         * @method _init\n         * @private\n         */\n\n        this._init = function(){\n            eventsAttachedOn = env.document;\n            env.timeEventsActive = true;\n\n            if (env.activeMouseZoom) {\n                this._initMouseWheel();\n            }\n\n            if(env.activeKeys){\n                this._initKeyEvents();\n            }\n\n            if (env.activeGestures){\n                this._initializeSelectionTool();\n            }\n\n            this._initializeActiveLabels();\n            this._initializeRemoveRowsFunction();\n        };\n\n\n        /**\n         * Initialise the function to remove rows\n         *\n         * @method _initializeRemoveRowsFunction\n         * @private\n         */\n\n        this._initializeRemoveRowsFunction = function(){\n\n            eventsAttachedOn.$.on(\"keydown\", function(evt){\n                var key;\n\n                key = (evt.which) ? evt.which : evt.keyCode;\n                if (evt.shiftKey || key == 16) { // Shift\n                    env.rowRemotionOngoing = true;\n                    env.mainView.showMessage(env.lang.clickToRemoveRow);\n                    d3.selectAll(\".y text\").attr(\"class\", \"removable\");\n                }\n            });\n\n            eventsAttachedOn.$.on(\"keyup\", function(evt){\n                if (env.rowRemotionOngoing){ // Shift\n                    env.rowRemotionOngoing = false;\n                    d3.selectAll(\".y text\").attr(\"class\", null);\n                }\n            });\n        };\n\n\n        /**\n         * This method removes a row from the scene.\n         *\n         * @method _removeRowFromSelection\n         * @private\n         * @input {Object} rowSelection The selected row in a jQuery format\n         */\n\n        this._removeRowFromSelection = function(rowSelection){\n            var rowMagnet;\n\n            rowMagnet = rowSelection.attr(\"magnet\");\n\n            if (env.params.selectedRows.length == 0){\n                env.params.selectedRows = $.map(env.connector.getRows(), function(item){ return item.id; }); // Get all rows\n            }\n\n            env.params.filterProbes = true;\n            env.params.selectedRows = utils.removeSubArray(env.params.selectedRows, [rowMagnet]);\n            env.mainView.redraw();\n        };\n\n\n        /**\n         * This method executes the default click behaviour of a label on the y-axis.\n         *\n         * @method _executeRowAction\n         * @private\n         * @input {Object} rowSelection The selected row in a jQuery format\n         */\n\n        this._executeRowAction = function(rowSelection){\n            var queryType, triggerAction, rowMagnet, rowObject;\n\n            triggerAction = false;\n            queryType = env.params.type;\n            rowMagnet = rowSelection.attr(\"magnet\");\n            rowObject = env.connector.getRowById(rowMagnet);\n\n            switch (queryType) {\n\n                case \"probes\":\n                    //if (!env.params.isUdm) {\n                        window.open(env.connector.getProbesPageUrl(rowMagnet, env.params), \"_blank\");\n                    //}\n                    break;\n\n                case \"servers\":\n                    if (rowObject.cells.length > 0) {\n                        env.params.type = \"probes\";\n                        env.params.root = env.params.group;\n                        env.params.group = rowMagnet;\n                        env.params.filterProbes = false;\n                        env.params.selectedRows = [];\n                        triggerAction = true;\n                    } else {\n                        env.mainView.showMessage(env.lang.noDataForRow);\n                    }\n                    break;\n            }\n\n            if (triggerAction == true) {\n                env.mainView.breadcrumbs.addLevel(rowSelection.text());\n                env.mainView.redraw();\n            }\n\n        };\n\n\n        /**\n         * Initialise labels on the y-axis\n         *\n         * @method _initializeActiveLabels\n         * @private\n         */\n\n        this._initializeActiveLabels = function(){\n            env.mainView.yAxis.onClick(function(evt){\n                var selectedRow;\n\n                selectedRow = $(this);\n\n                if (!env.rowRemotionOngoing) {\n\n                    $this._executeRowAction(selectedRow);\n\n                }else{\n\n                    $this._removeRowFromSelection(selectedRow);\n\n                }\n            });\n        };\n\n\n\n\n        /**\n         * Initialise the selection tool\n         *\n         * @method _initializeSelectionTool\n         * @private\n         */\n\n        this._initializeSelectionTool = function(){\n            var svg, body, selectionRect, endCoords, trackerDomElement, container, params, chart, selectedCells,\n                removeSelectionWithFeedback, coords, startCoords, currentElement, coordsMousemove, finalStartCoords,\n                finalEndCoords, removeRect, startSelection, stopSelection,\n                getNormalCellColor, getSelectedCellColor, updateSelectionTimes, selectedRectsBoundingBox,\n                updateSelectionNormal, updateSelectionLowProfile, dragStarted, selectionTooltipStart, selectionTooltipStop;\n\n            container = env.container;\n            params = env.params;\n            chart = container.chart;\n            svg = chart.svg;\n            body = d3.select(\"body\");\n\n\n            trackerDomElement = svg;\n\n            selectedRectsBoundingBox = {min: {x: Infinity, y: Infinity}, max: {x: -1, y: -1}}; //Reset the selection boundaries\n\n            trackerDomElement.style(\"cursor\", config.style.selectionCursor);\n\n\n            // This function removes the selection providing a feedback for the user\n            removeSelectionWithFeedback = function(event){\n\n                if (event.target.nodeName != 'rect' && event.target.nodeName != 'svg'){\n\n                    if (selectionRect){ //Remove the low profile selection rect\n                        selectionRect\n                            .transition()\n                            .duration(config.selectionWithdrawalDuration)\n                            .attr(\"width\", \"0\")\n                            .attr(\"height\", \"0\")\n                            .remove();\n                    }\n\n                    selectionTooltipStart.remove();\n                    selectionTooltipStop.remove();\n\n                    if(selectedCells && env.lowProfile == false){ //Remove the selected rectangles\n                        selectedCells\n                            .transition()\n                            .duration(config.selectionWithdrawalDuration)\n                            .style(\"fill\", getNormalCellColor);\n                    }\n\n                    currentElement = null;\n\n                    env.timeEventsActive = true;\n\n                    body.classed(\"stat-noselect\", false); //Remove the non-selection from all the dom\n                    eventsAttachedOn.$.off(\"mouseup.selection\").off(\"keyup.selection\"); // Remove useless listeners\n                    document.onselectstart = function(){return true;}; //Remove the cursor hack\n                    trackerDomElement.on(\"mousemove\", null);// .on(\"mouseup\", null); //Remove the selection events\n                }\n            };\n\n\n            // This function provides the selection feature in the low-profile mode\n            updateSelectionLowProfile = function(){\n                var chartHeight, chartWidth, x, y, width, height, tooltipsOffset, dates, startDateString, endDateString,\n                    tooltipWidth;\n\n                if (currentElement == null) return;\n\n                coordsMousemove = d3.mouse(currentElement);\n\n                chartHeight = chart.height();\n                chartWidth = chart.width();\n\n                tooltipsOffset = 3;\n\n                // The following lines bound the selection inside the chart\n                coordsMousemove[0] = (coordsMousemove[0] > 0) ? coordsMousemove[0] : 1 ;\n                coordsMousemove[0] = (coordsMousemove[0] < chartWidth) ? coordsMousemove[0] : chartWidth ;\n\n                coordsMousemove[1] = (coordsMousemove[1] > 0) ? coordsMousemove[1] : 1 ;\n                coordsMousemove[1] = (coordsMousemove[1] < chartHeight) ? coordsMousemove[1] : chartHeight ;\n\n                endCoords = {x: ((coordsMousemove[0] > 0) ? coordsMousemove[0] : 1 ), y: coordsMousemove[1]};\n                dragStarted = true;\n\n                x = Math.min(startCoords.x, endCoords.x);\n                y = Math.min(startCoords.y, endCoords.y);\n                width = Math.abs(startCoords.x - endCoords.x);\n                height = Math.abs(startCoords.y - endCoords.y);\n\n                dates = $this._computeSubDomains(startCoords, endCoords);\n\n                startDateString = utils.dateToString(dates[0][0]);\n                endDateString = utils.dateToString(dates[0][1]);\n\n                tooltipWidth = (startDateString.length * 8); // Where 8 is the base width of a char in the tooltip (don't retrieve it for performance purposes)\n\n                selectionTooltipStart\n                    .css({\n                        \"position\": \"absolute\",\n                        \"left\": x + chart.margin.left - tooltipsOffset - selectionTooltipStart.outerWidth(),\n                        \"top\": y + chart.margin.top - tooltipsOffset - selectionTooltipStart.outerHeight(),\n                        \"width\": tooltipWidth\n                    })\n                    .text(startDateString)\n                    .show();\n\n                selectionTooltipStop\n                    .css({\n                        \"position\": \"absolute\",\n                        \"left\": x + width + chart.margin.left + tooltipsOffset,\n                        \"top\": y + height + chart.margin.top + tooltipsOffset,\n                        \"width\": tooltipWidth\n                    })\n                    .text(endDateString)\n                    .show();\n\n                selectionRect.attr({\n                    \"x\": x, //Update the selection rectangle in low profile mode\n                    \"y\": y,\n                    \"width\": width,\n                    \"height\": height\n                }).style(\"fill-opacity\", function(){\n                    return (env.lowProfile == true) ? 0.5 : 0.2;\n                });\n            };\n\n\n            // This function provides the selection feature in the normal mode\n            updateSelectionNormal = function(){\n                var selectionVertices, allCells;\n\n                updateSelectionTimes--;\n\n                if (currentElement != null && updateSelectionTimes == 0) {\n\n                    allCells = env.container.chart.svg.selectAll(\"rect.cell\");\n\n                    updateSelectionLowProfile();\n\n                    dragStarted = true;\n\n                    updateSelectionTimes = config.sensibilityFactorDuringSelection; // Reset the number of callback accepted\n\n                    coordsMousemove = d3.mouse(currentElement); // Get the actual cursor position\n\n                    endCoords = {x: coordsMousemove[0], y: coordsMousemove[1]};// Get the actual cursor position in our internal format\n\n                    selectedRectsBoundingBox = {min: {x: Infinity, y: Infinity}, max: {x: -1, y: -1}}; //Reset the selection boundaries\n\n                    finalStartCoords = {x: Math.min(startCoords.x, endCoords.x), y: Math.min(startCoords.y, endCoords.y)}; //Calculate the bounding box of the cells touched by the selection\n                    finalEndCoords = {x: Math.max(startCoords.x, endCoords.x), y: Math.max(startCoords.y, endCoords.y)};\n\n                    selectionVertices = utils.getRectangularVertexPoints(finalStartCoords.x, finalStartCoords.y, finalEndCoords.x - finalStartCoords.x, finalEndCoords.y - finalStartCoords.y); // Get Selection vertices\n\n                    // This function finds the subset of cells outside the bounding box\n                    allCells\n                        .filter(function (d) {\n                            var out;\n                            out = d.selected;\n\n                            if (out == true) {\n                                d.selected = false;\n                            }\n\n                            return out;\n                        })\n                        .style(\"fill\", getNormalCellColor); //Replace the color of the cells outside with the default one (useful for cells no longer involved in the selection)\n\n\n                    // This function finds the subset of cells inside the bounding box\n                    selectedCells = allCells\n                        .filter(function (d) {\n                            var isCellSelected, rectVertices, currentRect;\n\n                            currentRect = d3.select(this); // Points the current cell\n\n                            d.optional.rectVertices = d.optional.rectVertices || utils.getRectangularVertexPoints(d.optional.xPosition, d.optional.yPosition, parseFloat(currentRect.attr(\"width\")), parseFloat(currentRect.attr(\"height\"))); // Calculate the cell vertices\n\n                            rectVertices = d.optional.rectVertices;\n\n                            isCellSelected = utils.isThereAnIntersection(selectionVertices, rectVertices);// && d.selected == false; // Find if there is an intersection\n\n                            if (isCellSelected == true) {\n                                /*\n                                 * Calculate the real bounding box based on cells boundaries\n                                 */\n                                selectedRectsBoundingBox.min = {x: Math.min(rectVertices[0].x, selectedRectsBoundingBox.min.x), y: Math.min(rectVertices[2].y, selectedRectsBoundingBox.min.y)};\n                                selectedRectsBoundingBox.max = {x: Math.max(rectVertices[0].x, selectedRectsBoundingBox.max.x), y: Math.max(rectVertices[3].y, selectedRectsBoundingBox.max.y)};\n\n                                d.selected = true;\n                            }\n\n                            return isCellSelected;\n                        })\n                        .style(\"fill\", getSelectedCellColor); //Change the color of the selected cells\n\n\n                }\n            };\n\n            // This function is called when the user starts to select cells\n            startSelection = function() {\n                var mainView;\n\n                mainView = env.mainView;\n\n                mainView.popUp.hide(); // Cancel any popup\n                mainView.showMessage(''); // Cancel any message\n                mainView.selectColumn(false); // Unselect column\n                mainView.selectRow(false); // Unselect row\n\n                env.timeEventsActive = false;\n\n                dragStarted = false;\n\n                document.onselectstart = function () {return false;}; //Cursor hack to avoid browser default dragging cursor\n\n                currentElement = this;\n\n                coords = d3.mouse(currentElement);\n\n                startCoords = {x: coords[0], y: coords[1]};\n                endCoords = {x: coords[0], y: coords[1]};\n\n\n                if (env.lowProfile == true) {\n\n                    d3.select(eventsAttachedOn.plain) //Attach the low profile callback for the mouse gestures\n                        .on(\"mousemove\", updateSelectionLowProfile);\n                }\n\n\n                if (selectionRect){ //Remove any possible old selection rectangles (can happen when the window goes out of focus)\n                    selectionRect.remove();\n                }\n\n                selectionRect = svg //Introduce the selection rectangle\n                    .append(\"rect\")\n                    .attr(\"class\", \"selection-rect\");\n\n                selectionTooltipStart = $('<div class=\"dnsmon-tooltip selection-tooltip-start custom-jquery-ui-tooltip\"></div>');\n                selectionTooltipStop = $('<div class=\"dnsmon-tooltip selection-tooltip-stop custom-jquery-ui-tooltip\"></div>');\n\n                container.dom.$.append(selectionTooltipStart);\n                container.dom.$.append(selectionTooltipStop);\n\n\n                if (env.lowProfile == false){\n\n                    d3.select(eventsAttachedOn.plain) //Attach the high profile callback for the mouse gestures\n                        .on(\"mousemove\", updateSelectionNormal);\n\n                    getNormalCellColor = env.mainView.getCellColor;\n                    getSelectedCellColor = env.mainView.getSelectedCellColor;\n                    updateSelectionTimes = config.sensibilityFactorDuringSelection;\n                }\n\n                body.classed(\"stat-noselect\", true);\n\n                eventsAttachedOn.$\n                    .on(\"mouseup.selection\", stopSelection)\n                    .on(\"keyup.selection\", function(evt){\n                        var key;\n\n                        key = (evt.which) ? evt.which : evt.keyCode;\n                        if (key == 27){ // Esc\n                            removeSelectionWithFeedback(evt);\n                        }\n                    });\n\n            };\n\n            // This function is called when the user stops to select cells\n            stopSelection = function(evt) {\n                var zoomAnimationDuration, zoomAnimationDelay, selectionWithdrawalDuration;\n\n                zoomAnimationDuration = config.zoomAnimationDuration;\n                zoomAnimationDelay = config.zoomAnimationDelay;\n                selectionWithdrawalDuration = config.selectionWithdrawalDuration;\n\n                if (currentElement == null){\n                    return;\n                }\n\n\n                body.classed(\"stat-noselect\", false);\n                eventsAttachedOn.$.off(\"mouseup.selection\").off(\"keyup.selection\");\n                env.mainView.selectColumn(false); // Unselect column\n                env.mainView.selectRow(false); // Unselect row\n                document.onselectstart = function () {return true;}; //Remove the cursor hack\n\n                if (dragStarted == false){\n                    $this._clickEvent(evt);\n\n                    currentElement = null; // Reset it (also if not used in the same function)\n                    if (selectionRect){\n                        selectionRect.remove();\n                    }\n                    return;\n                }\n\n                selectionTooltipStart.remove();\n                selectionTooltipStop.remove();\n\n                if (env.lowProfile == true || selectedRectsBoundingBox.min.x == Infinity) { // Set the approximate box\n                    selectedRectsBoundingBox.min = {x: Math.min(startCoords.x, endCoords.x), y: Math.min(startCoords.y, endCoords.y)};\n                    selectedRectsBoundingBox.max = {x: Math.max(startCoords.x, endCoords.x), y: Math.max(startCoords.y, endCoords.y)};\n                }\n\n                removeRect = function(){ //This function will be pushed as a callback of the redraw function in order to remove the selection rect if the selection is not applicable\n                    selectionRect\n                        .transition()\n                        .duration(zoomAnimationDuration)\n                        .delay(zoomAnimationDelay)\n                        .attr(\"x\", 0)\n                        .attr(\"y\", 0)\n                        .attr(\"width\", chart.width())\n                        .attr(\"height\", chart.height())\n                        .remove();\n\n                    env.timeEventsActive = true;\n                };\n\n                if (!$this._computeSubDomainsAndApply(selectedRectsBoundingBox.min, selectedRectsBoundingBox.max, removeRect)){ //checks if the new subselection is not applicable\n\n                    env.timeEventsActive = true;\n\n                    if (selectionRect){\n                        selectionRect\n                            .transition()\n                            .duration(selectionWithdrawalDuration)\n                            .attr(\"x\", (selectedRectsBoundingBox.max.x - selectedRectsBoundingBox.min.x)/2 + selectedRectsBoundingBox.min.x)\n                            .attr(\"y\", (selectedRectsBoundingBox.max.y - selectedRectsBoundingBox.min.y)/2 + selectedRectsBoundingBox.min.y)\n                            .attr(\"width\", 0)\n                            .attr(\"height\", 0)\n                            .remove();\n                    }\n\n                    if (selectedCells){\n                        selectedCells //Gives a feedback to the user about the inapplicability of the subselection\n                            .style(\"fill\", config.style.noSelectableAreaColor)\n                            .transition()\n                            .duration(selectionWithdrawalDuration)\n                            .style(\"fill\", getNormalCellColor);\n\n                    }\n                }\n\n                currentElement = null; //Reset the selection start point\n                trackerDomElement\n                    .on(\"mousemove\", null);\n            };\n\n            trackerDomElement\n                .on(\"mousedown\", startSelection);\n        };\n\n\n        /**\n         * This function is called when an user clicks on a cell\n         *\n         * @method _clickEvent\n         * @private\n         */\n\n        this._clickEvent = function(evt){\n            var selectedCellData, target;\n\n            env.timeEventsActive = true;\n            target = d3.select(evt.target);\n            selectedCellData = target[0][0][\"__data__\"];\n            if (selectedCellData){\n                env.mainView.controlPanel.showExtraInfoDialog(selectedCellData);\n            }\n\n        };\n\n\n        /**\n         * This function computes the new sub-domain after a selection\n         *\n         * @method _computeSubDomains\n         * @private\n         * @param {Number} finalStartCoords The top-left point of the selection\n         * @param {Number} finalEndCoords The bottom-right point of the selection\n         * @return {Array} The new domain\n         */\n\n        this._computeSubDomains = function(finalStartCoords, finalEndCoords){\n            var newXDomain, newXRange, newYRange, newYDomain;\n\n            newXRange = [finalStartCoords.x, finalEndCoords.x];\n\n            newYRange = [finalStartCoords.y, finalEndCoords.y];\n            newXDomain = env.mainView.xAxis.getSubDomain(newXRange);\n            newYDomain = env.mainView.yAxis.getSubDomain(newYRange);\n\n            return [newXDomain, newYDomain];\n        };\n\n\n        /**\n         * This function computes and applies the new sub-domain after a selection\n         *\n         * @method _computeSubDomainsAndApply\n         * @private\n         * @param {Number} startCoords The top-left point of the selection\n         * @param {Number} endCoords The bottom-right point of the selection\n         * @param {Function} callback A callback function\n         * @return {Boolean} True if the new domain is applied\n         */\n\n        this._computeSubDomainsAndApply = function(startCoords, endCoords, callback){\n            var newXDomain, newYDomain, domains, row, tmpSelectedRows, tmpStartDate, tmpEndDate, newSelection;\n\n            domains = this._computeSubDomains(startCoords, endCoords);\n            newXDomain = domains[0];\n            newYDomain = domains[1];\n\n            if ((newXDomain.length > 0 ) &&\n                (newYDomain.length > 0)) {  // Zoom damper\n\n                tmpStartDate = newXDomain[0];\n                tmpEndDate = newXDomain[1];\n\n                tmpSelectedRows = [];\n\n\n                for (var n=0,length=env.mainView.rows.length; n<length ;n++){\n                    row = env.mainView.rows[n];\n\n                    if (utils.indexOf(row.label, newYDomain) != -1){\n                        tmpSelectedRows.push(row.id);\n                        this.rowsSubSelection = true;\n                    }\n                }\n\n                if (env.mainView.timeController.isSubSelectable(tmpStartDate, tmpEndDate, tmpSelectedRows)){ // Check if the sub-selection is possible\n\n                    utils.log('Subselection possible', env.debugMode);\n                    env.params.selectedRows = tmpSelectedRows;\n                    env.params.filterProbes = true;\n                    env.params.startDate = tmpStartDate;\n                    env.params.endDate = tmpEndDate;\n\n                    env.mainView.redraw(callback, this);\n                    return true;\n\n                }else if (env.retrievedAggregationLevel != env.minAggregation && env.retrievedAggregationLevel != 0){ // We still have some aggregation levels in the middle\n\n                    utils.log('Subselection too small, enlarged', env.debugMode);\n                    env.params.selectedRows = tmpSelectedRows;\n                    env.params.filterProbes = true;\n                    newSelection = env.mainView.timeController.getZoomableWindow(tmpStartDate, tmpEndDate);\n                    newSelection = env.mainView.timeController.getBoundedWindow(newSelection.start, newSelection.end);\n                    env.params.startDate = newSelection.start;\n                    env.params.endDate = newSelection.end;\n                    env.mainView.showMessage(env.lang.minimumSelectionImposed);\n\n                    env.mainView.redraw(callback, this);\n                    return true;\n\n                }else if (env.mainView.timeController.isSelectionReduced(tmpSelectedRows)){ // Check if the selection is a sub-selection\n\n                    utils.log('Subselection too small, not enlargeable, some rows removed', env.debugMode);\n                    env.params.selectedRows = tmpSelectedRows; //Don't change time, only the selected probes\n                    env.params.filterProbes = true;\n                    env.mainView.redraw(callback, this);\n                    env.mainView.showMessage(env.lang.minimumTimeSelectionReached);\n                    return true;\n\n                }else{\n\n                    utils.log('Subselection too small, not enlargeable, rows cannot be removed', env.debugMode);\n                    env.mainView.showMessage(env.lang.tooZoomedMessage); //SubSelection failed\n                    return false;\n                }\n            }\n        }\n\n    };\n\n    return GesturesManager;\n});\n\n\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/18/13\n * Time: 9:32 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.controller.time',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.controller.gesture-manager\"\n], function(utils, GesturesManager){\n\n    /**\n     * TimeController provides all the functions to manage the time in the tool.\n     *\n     * @class TimeController\n     * @constructor\n     * @module controller\n     */\n\n    var TimeController = function(env){\n        var gesturesManager, config, subMinutes, addMinutes, updateTimer;\n\n        config = env.config;\n        gesturesManager = new GesturesManager(env);\n\n        addMinutes = utils.addMinutes;\n        subMinutes = utils.subMinutes;\n\n        this.init = function(){\n            gesturesManager.on('scrollRight', this.shiftRight, this);\n            gesturesManager.on('scrollLeft', this.shiftLeft, this);\n            gesturesManager.on('scrollUp', this.zoomOut, this);\n            gesturesManager.on('scrollDown', this.zoomIn, this);\n        };\n\n\n        /**\n         * Checks if it is possible to zoom-out with the current selection\n         *\n         * @method _isZoomableOut\n         * @private\n         * @param {Date} startDate The start date of the new selection\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the zoom-out is applicable\n         */\n\n        this._isZoomableOut = function(startDate, endDate){\n            var aggregationLevel;\n\n            aggregationLevel = this._getAggregationLevel(startDate, endDate);\n            return (aggregationLevel <= env.maxAggregation && startDate >= env.measurementStartTime && endDate <= env.measurementEndTime);\n        };\n\n\n        /**\n         * Checks if it is possible to zoom-in with the current selection\n         *\n         * @method _isZoomableIn\n         * @private\n         * @param {Date} startDate The start date of the new selection\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the zoom-in is applicable\n         */\n\n        this._isZoomableIn = function(startDate, endDate){\n            var aggregationLevel, virtualZoom;\n\n            aggregationLevel = this._getAggregationLevel(startDate, endDate);\n            virtualZoom = (aggregationLevel > (env.minAggregation * config.virtualZoomFactor));\n\n            return virtualZoom;\n        };\n\n\n        /**\n         * Checks if it is possible to shift left the time window\n         *\n         * @method _isTranslableLeft\n         * @private\n         * @param {Date} startDate The start date of the new selection\n         * @return {Boolean} True if the shift is applicable\n         */\n\n        this._isTranslableLeft = function(startDate){\n            return (startDate >= env.measurementStartTime);\n        };\n\n\n        /**\n         * Checks if it is possible to shift right the time window\n         *\n         * @method _isTranslableRight\n         * @private\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the shift is applicable\n         */\n\n        this._isTranslableRight = function(endDate){\n            return (endDate <= env.measurementEndTime);\n        };\n\n\n        this._getAggregationLevel = function(startDate, endDate){\n            var maxNumberOfCells, aggregationSeconds, containerWidth, timeInterval;\n\n            timeInterval = Math.floor((endDate - startDate) / 1000);\n\n            containerWidth = env.container.chart.width();\n\n            maxNumberOfCells = containerWidth / (config.cellsMinWidth + config.xCellsMargin);\n\n            aggregationSeconds = timeInterval / maxNumberOfCells;\n\n            return (aggregationSeconds > 0) ? parseFloat(aggregationSeconds.toFixed(2)) : 0;\n        };\n\n\n        /**\n         * Zoom in the chart\n         *\n         * @method zoomIn\n         * @param {Number} zoomLevel A value to be applied at the current zoom\n         */\n\n        this.zoomIn = function(zoomLevel){\n            var startDate, endDate, minutes;\n\n            if (env.timeEventsActive == true) {\n                minutes = ((env.params.endDate - env.params.startDate) / 60000) * config.zoomProportion * Math.abs(zoomLevel);\n\n                startDate = addMinutes(env.params.startDate, minutes);\n                endDate = subMinutes(env.params.endDate, minutes);\n\n                if (this._isZoomableIn(startDate, endDate)) {\n                    env.params.startDate = startDate;\n                    env.params.endDate = endDate;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Zoom out the chart\n         *\n         * @method zoomOut\n         * @param {Number} zoomLevel A value to be applied at the current zoom\n         */\n\n        this.zoomOut = function(zoomLevel){\n            var startDate, endDate, minutes, newTimeWindow;\n\n            if (env.timeEventsActive == true) {\n                minutes = ((env.params.endDate - env.params.startDate) / 60000) * config.zoomProportion * Math.abs(zoomLevel);\n\n                startDate = subMinutes(env.params.startDate, minutes);\n                endDate = addMinutes(env.params.endDate, minutes);\n\n                newTimeWindow = this.getBoundedWindow(startDate, endDate);\n\n                if (this._isZoomableOut(newTimeWindow.start, newTimeWindow.end)) {\n                    env.params.startDate = newTimeWindow.start;\n                    env.params.endDate = newTimeWindow.end;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Shift left the time window\n         *\n         * @method shiftLeft\n         */\n\n        this.shiftLeft = function(){\n            var startDate, endDate, timeOffset, newBoundaries;\n\n            if (env.timeEventsActive == true) {\n                timeOffset = ((env.params.endDate - env.params.startDate) / 60000) * config.slideProportion;\n\n                startDate = subMinutes(env.params.startDate, timeOffset);\n                endDate = subMinutes(env.params.endDate, timeOffset);\n\n                newBoundaries = this.getBoundedWindow(startDate, endDate);\n\n                if (this._isTranslableLeft(startDate) || env.params.startDate.getTime() != newBoundaries.start.getTime()) {\n                    env.params.startDate = newBoundaries.start;\n                    env.params.endDate = newBoundaries.end;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Shift right the time window\n         *\n         * @method shiftRight\n         */\n\n        this.shiftRight = function(){\n            var startDate, endDate, timeOffset, newBoundaries;\n\n            if (env.timeEventsActive == true) {\n                timeOffset = ((env.params.endDate - env.params.startDate) / 60000) * config.slideProportion;\n\n                startDate = addMinutes(env.params.startDate, timeOffset);\n                endDate = addMinutes(env.params.endDate, timeOffset);\n\n                newBoundaries = this.getBoundedWindow(startDate, endDate);\n\n                if (this._isTranslableRight(endDate) || env.params.endDate.getTime() != newBoundaries.end.getTime()) {\n                    env.params.startDate = newBoundaries.start;\n                    env.params.endDate = newBoundaries.end;\n\n                    if (env.isUpdatedPeriodicallyActive) { // Disable the auto refresh function if active\n                        env.mainView.controlPanel.keepUpdatedActive(false);\n                    }\n\n                    env.mainView.updateXDomain(true);\n                }\n            }\n        };\n\n\n        /**\n         * Check if the new selection is a sub-selection of the previous one\n         *\n         * @method isSelectionReduced\n         * @param {Array} selectedRows The new list of selected rows\n         * @return {Boolean} True if the new selection is a sub-selection of the previous one\n         */\n\n        this.isSelectionReduced = function(selectedRows){\n            var isSelectionReduced;\n\n            isSelectionReduced = (selectedRows.length < env.params.selectedRows.length || env.params.selectedRows.length == 0);\n\n            return isSelectionReduced;\n        };\n\n\n        /**\n         * Check if the new selection can be applied\n         *\n         * @method isSubSelectable\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @param {Array} selectedRows The new list of selected rows\n         * @return {Boolean} True if the new selection can be applied\n         */\n\n        this.isSubSelectable = function(startDate, endDate, selectedRows){\n            var isZoomableIn, isTimeChangend, isSelectionReduced;\n\n            isZoomableIn = this._isZoomableIn(startDate, endDate);\n            isTimeChangend = !((env.params.startDate == startDate) && (env.params.endDate == endDate));\n            isSelectionReduced = this.isSelectionReduced(selectedRows);\n\n            return isZoomableIn || (!isZoomableIn && !isTimeChangend && isSelectionReduced);\n        };\n\n\n        /**\n         * Check if the new selection can be reduced\n         *\n         * @method isReducible\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @return {Boolean} True if the new selection can be reduced\n         */\n\n        this.isReducible = function(startDate, endDate, selectedRows){\n            var isZoomableIn, isTimeChangend, isSelectionReduced;\n\n            isZoomableIn = this._isZoomableIn(startDate, endDate);\n\n            isTimeChangend = !((env.params.startDate == startDate) && (env.params.endDate == endDate));\n\n            isSelectionReduced = this.isSelectionReduced(selectedRows);\n\n\n            return isZoomableIn || (!isZoomableIn && !isTimeChangend && isSelectionReduced);\n        };\n\n\n        /**\n         * Update the status of the controller parameters of the whole widget.\n         *\n         * @method updateStatus\n         */\n\n        this.updateStatus = function(){\n            var startDate, endDate, timeOffset, zoomMinutes, offsetTmp, newTimeWindow;\n\n            startDate = env.params.startDate;\n            endDate = env.params.endDate;\n\n            offsetTmp = ((endDate - startDate) / 60000);\n\n            timeOffset = offsetTmp * config.slideProportion;\n            zoomMinutes = offsetTmp * config.zoomProportion * Math.abs(config.manualZoomFactor);\n\n            env.params.aggregationLevel = this._getAggregationLevel(startDate, endDate);\n\n            env.isZoomableIn = this._isZoomableIn(addMinutes(startDate, zoomMinutes), subMinutes(endDate, zoomMinutes));\n\n            newTimeWindow = this.getBoundedWindow(subMinutes(startDate, zoomMinutes), addMinutes(endDate, zoomMinutes));\n            env.isZoomableOut = this._isZoomableOut(newTimeWindow.start, newTimeWindow.end);\n\n            env.isTranslableLeft = this._isTranslableLeft(subMinutes(startDate, timeOffset));\n            env.isTranslableRight = this._isTranslableRight(addMinutes(endDate, timeOffset));\n        };\n\n\n        /**\n         * Update the chart with the latest available data\n         *\n         * @method getNewData\n         * @param {integer} timeWindow A time window express as seconds if null the current one will be used\n         */\n\n        this.getNewData = function(timeWindow){\n            env.params.startDate = null;\n            env.params.endDate = null;\n            env.params.timeWindow = (timeWindow) ? timeWindow : env.timeWindowSeconds;\n            env.timeEventsActive = false;\n\n            env.mainView.redraw(function(){\n                env.timeEventsActive = true;\n            });\n        };\n\n\n        /**\n         * Given a time interval, this function checks if it is valid otherwise it returns the closer valid selection\n         *\n         * @method getBoundedWindow\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @return {Object} Returns start and end time (two Date Objects)\n         */\n\n        this.getBoundedWindow = function(startDate, endDate){\n            var timeWindowMinutes, newStartDate, newEndDate;\n\n            timeWindowMinutes = (endDate - startDate) / 60000; // Time window in minutes\n\n            if (startDate < env.measurementStartTime && endDate <= env.measurementEndTime){\n\n                newStartDate = env.measurementStartTime;\n                newEndDate = addMinutes(newStartDate, timeWindowMinutes);\n\n            }else if (endDate > env.measurementEndTime && startDate >= env.measurementStartTime){\n\n                newEndDate = env.measurementEndTime;\n                newStartDate = subMinutes(newEndDate, timeWindowMinutes);\n\n            }else{\n\n                newStartDate = startDate;\n                newEndDate = endDate;\n\n            }\n\n            return {start: newStartDate, end: newEndDate};\n        };\n\n\n        /**\n         * Given a time interval, this function checks if it is valid otherwise it returns the closer valid zoomable selection\n         *\n         * @method getZoomableWindow\n         * @param {Date} startDate The start date of the new selections\n         * @param {Date} endDate The end date of the new selection\n         * @return {Object} Returns start and end time (two Date Objects)\n         */\n\n        this.getZoomableWindow = function(startDate, endDate){\n            var minTimeWindow, newTimeWindow, newStartDate, newEndDate, timeWindowCenter, halfMinTimeWindow;\n\n            minTimeWindow = ((env.minAggregation * config.virtualZoomFactor) * env.maxNumberOfCellsPerRow) * 1000;\n            newTimeWindow = (endDate.getTime() - startDate.getTime());\n            timeWindowCenter = startDate.getTime() + (newTimeWindow / 2);\n            halfMinTimeWindow = (minTimeWindow / 2);\n\n            newStartDate = new Date(timeWindowCenter - halfMinTimeWindow);\n            newEndDate = new Date(timeWindowCenter + halfMinTimeWindow);\n\n            return {start: newStartDate, end: newEndDate};\n        };\n\n\n        /**\n         * This function starts the auto-update feature.\n         *\n         * @method keepUpdated\n         * @param {Boolean} keepUpdate If true the auto-update feature starts\n         */\n\n        this.keepUpdated = function(keepUpdate){\n            var $this, interval;\n\n            $this = this;\n            interval = ((env.debugMode) ? 6000 : (config.updateEverySeconds * 1000));\n\n            if (keepUpdate){\n                this.getNewData(null); // First refresh\n                updateTimer = setInterval($this.getNewData, interval);\n            }else{\n                clearInterval(updateTimer);\n            }\n        };\n\n    };\n\n    return TimeController;\n});\n","\ndefine('dnsmon.view.svg.time-axis',[\n    \"dnsmon.lib.d3\"\n], function(d3){\n\n    /**\n     * SvgTimeAxisView is the view component representing the x-axis in SVG terms.\n     * It provides additional functions to manage interactions with the x elements.\n     *\n     * @class SvgTimeAxisView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgTimeAxisView = function(container, options){\n\n        this.orient = options.orient;\n\n        this.container = container;\n\n        this.range = options.range;\n\n        this.domain = options.domain;\n\n        this.parent = this.container.svg.append('g');\n\n        this.setRange = function(range){\n            this.range = range;\n            this.update();\n        }\n\n        this.setDomain = function(domain){\n            this.domain = domain;\n            this.update();\n        }\n\n        this.render = function(){\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n            this._rotate();\n        };\n\n        this.update = function(){\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n            this._rotate();\n        };\n\n        this._buildFunction = function(){\n            this.scale = d3\n                .time\n                .scale\n                .utc()\n                .domain(this.domain())\n                .range(this.range());\n\n            this.axisFunction = d3.svg\n                .axis()\n                .scale(this.scale)\n                .tickFormat(this.timeFormat)\n                .ticks(20);\n\n            this.axisFunction\n                .orient(this.orient);\n\n            if (this.orient == 'left'){\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.chart.margin.top,\n                    bottom: 0\n                };\n            }else{\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.height() - this.container.chart.margin.bottom,\n                    bottom: this.container.chart.margin.bottom\n                };\n            }\n\n\n            this.parent\n                .attr(\"class\", \"x axis\")\n                .attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top+ ')');\n        };\n\n        this._rotate = function(){\n            this.parent.selectAll(\"text\")\n                .style(\"text-anchor\", \"end\")\n                .attr(\"dx\", \"-.8em\")\n                .attr(\"dy\", \".15em\")\n                .attr('transform', 'rotate(-65)');\n        };\n\n\n        this.getSubDomain = function(newRange){\n            return newRange.map(this.scale.invert).sort(d3.ascending);\n        };\n\n        this.timeFormat = d3.time.format.utc.multi([\n            [\".%L\", function(d) { return d.getUTCMilliseconds(); }],\n            [\":%S\", function(d) { return d.getUTCSeconds(); }],\n            [\"%H:%M\", function(d) { return d.getUTCMinutes(); }],\n            [\"%H:%M\", function(d) { return d.getUTCHours(); }],\n            [\"%Y-%m-%d\", function(d) { return d.getUTCDay() && d.getUTCDate() != 1; }],\n            [\"%Y-%m-%d\", function(d) { return d.getUTCDate() != 1; }],\n            [\"%Y-%m-%d\", function(d) { return d.getUTCMonth(); }],\n            [\"%Y\", function() { return true; }]\n        ]);\n\n        this.container.updateList.push({update: this.update, context: this});\n\n    };\n\n    return SvgTimeAxisView;\n});\n\n\n\n","\ndefine('dnsmon.view.svg.ordinal-axis',[\n    \"dnsmon.lib.d3\",\n    \"dnsmon.lib.jquery-libs-amd\"\n], function(d3, $){\n\n    /**\n     * SvgOrdinalAxisView is the view component representing the y-axis in SVG terms.\n     * It provides additional functions to manage interactions with the y elements.\n     *\n     * @class SvgOrdinalAxisView\n     * @constructor\n     * @module view.svg\n     */\n\n    var SvgOrdinalAxisView = function(container, options){\n        var onMouseOverCallbacks, onMouseOutCallbacks, onClickCallbacks, $this, uniqueGroups, groupsRepresentation,\n            axisTooltip, groupsCount;\n\n        $this = this;\n        onMouseOverCallbacks = [];\n        onMouseOutCallbacks = [];\n        onClickCallbacks = [];\n        groupsRepresentation = {};\n        groupsCount = {};\n\n        this.magnetValues = options.magnetValues;\n\n        this.descriptions = options.descriptions;\n\n        this.groups = options.groups;\n\n        this.displayGroupBlocks = options.displayGroupBlocks;\n\n        this.orient = options.orient;\n\n        this.container = container;\n\n        this.range = options.range;\n\n        this.domain = options.domain;\n\n        this.parent = this.container.svg.append('g');\n\n\n        this._computeGroupsColors = function(){\n            if (this.displayGroupBlocks && this.groups){\n                uniqueGroups = [];\n                $.each(this.groups, function(i, el){\n                    if($.inArray(el, uniqueGroups) === -1) uniqueGroups.push(el);\n                });\n\n\n                this.colors = (uniqueGroups.length <= 10) ? [\"#1f77b4\", \"#ff7f0e\", \"#2ca02c\", \"#d62728\", \"#9467bd\", \"#8c564b\", \"#e377c2\", \"#7f7f7f\", \"#bcbd22\", \"#17becf\"] : [\"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\"];\n            }\n        };\n\n\n        this._getColorForGroup = function(group){\n            var colorIndex;\n\n            colorIndex = uniqueGroups.indexOf(group);\n            return this.colors[colorIndex] || this._generateRandomColor();\n        };\n\n\n        this._generateRandomColor = function(){\n            var letters, color;\n\n            letters = '0123456789ABCDEF'.split('');\n            color = '#';\n\n            for (var i = 0; i < 6; i++ ) {\n                color += letters[Math.round(Math.random() * 15)];\n            }\n\n            return color;\n        };\n\n\n        this.setRange = function(range){\n            this.range = range;\n            this.update();\n        };\n\n        this.setDomain = function(domain, magnetValues, descriptions, groups){\n            this.domain = domain;\n\n            if (magnetValues){\n                this.magnetValues = magnetValues;\n            }\n\n            if (descriptions){\n                this.descriptions = descriptions;\n            }\n\n            if (groups){\n                this.groups = groups;\n            }\n\n            this.update();\n        };\n\n        this.render = function(){\n            this._computeGroupsColors();\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n            this._initOnClick();\n            this._initOnMouseOver();\n            this._initOnMouseOut();\n\n            axisTooltip = $('<div></div>')\n                .addClass('dnsmon-tooltip')\n                .addClass('custom-jquery-ui-tooltip').hide();\n            container.dom.$.append(axisTooltip);\n\n            this._initTooltips();\n        };\n\n        this._initTooltips = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"mousemove\")\n                .off(\"mouseout\")\n                .on(\"mousemove\", function(evt){\n                    axisTooltip.show();\n                    axisTooltip\n                        .html(d3.select(this).attr('label'))\n                        .css({\n                            \"top\" : evt.clientY + 13,\n                            \"left\" : evt.clientX\n                        });\n                })\n                .on(\"mouseout\", function(evt){\n\n                    axisTooltip.hide();\n                });\n        };\n\n        this.update = function(){\n            this._computeGroupsColors();\n            this._buildFunction();\n            this.parent.call(this.axisFunction);\n\n            this._initOnClick();\n            this._initOnMouseOver();\n            this._initOnMouseOut();\n            this._initTooltips();\n        };\n\n\n        this._buildFunction = function(){\n            var scale;\n\n            if (this.orient == 'left'){\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.chart.margin.top,\n                    bottom: 0\n                };\n            }else{\n                this.margin = {\n                    left: this.container.chart.margin.left,\n                    right: 0,\n                    top: this.container.height() - this.container.chart.margin.bottom,\n                    bottom: this.container.chart.margin.bottom\n                };\n            }\n\n            scale = d3.scale\n                .ordinal()\n                .domain(this.domain())\n                .rangeRoundBands(this.range(), options.offset, 0);\n\n\n            scale.invert = function(x) {\n                var domainElements, domainElement, inverseElementPosition, lastDomainElement;\n                domainElements = this.domain();\n\n                lastDomainElement = domainElements[0];\n\n                for (var n=0,length=domainElements.length; n<length; n++){\n                    domainElement = domainElements[n];\n\n                    inverseElementPosition = scale(domainElement);\n                    if (inverseElementPosition >= x){\n                        break;\n                    }\n\n                    lastDomainElement = domainElement;\n                }\n                return lastDomainElement;\n            };\n\n            this.scale = scale;\n\n            this.axisFunction = d3.svg\n                .axis()\n                .scale(this.scale);\n\n            if ($this.displayGroupBlocks && $this.groups){\n                for (var group in groupsRepresentation){\n                    if (groupsRepresentation[group]){\n                        groupsRepresentation[group].remove();\n                        groupsRepresentation[group] = null;\n                    }\n                }\n            }\n\n            this.axisFunction\n                .orient(this.orient)\n                .tickSize(0)\n                .tickFormat(function(d){\n                    var thisElement, thisParentNode;\n                    thisElement = d3.select(this);\n                    thisParentNode = d3.select(this.parentNode);\n\n                    if ($this.magnetValues){\n                        thisElement.attr(\"magnet\", $this.magnetValues[d.replace(\" \", \"_\")]);\n                    }\n\n                    if ($this.descriptions){\n                        thisElement.attr(\"label\", $this.descriptions[d.replace(\" \", \"_\")]);\n                    }\n\n\n                    if ($this.displayGroupBlocks && $this.groups){ // Draw group blocks\n                        var group = $this.groups[d.replace(\" \", \"_\")];\n\n                        if (!groupsRepresentation[group]){\n\n                            groupsCount[group] = 1;\n                            groupsRepresentation[group] = thisParentNode\n                                .append(\"svg:rect\")\n                                .attr(\"width\", 4)\n                                .attr(\"y\", -$this.scale.rangeBand()/2)\n                                .attr(\"x\", -container.chart.margin.left + 1)\n                                .attr(\"height\", $this.scale.rangeBand())\n                                .attr(\"stroke-width\", 1)\n                                .attr(\"title\", group)\n                                .attr(\"shape-rendering\", \"crispEdges\")\n                                .style(\"fill\", function(d){\n                                    return $this._getColorForGroup(group);\n                                });\n                        }else{\n                            groupsCount[group] ++;\n                            groupsRepresentation[group]\n                                .attr(\"height\", function(){\n                                    return groupsCount[group] * ($this.scale.rangeBand() + ($this.scale.rangeBand()/2));\n                                });\n\n                        }\n                    }\n\n                    if (options.grid == true){\n                        thisParentNode\n                            .append(\"rect\")\n                            .attr(\"width\", 500)\n                            .attr(\"height\", 1)\n                            .attr(\"y\", $this.scale.rangeBand()/2);\n                    }\n                    return d;\n                });\n\n            this.parent\n                .attr(\"class\", \"y axis\")\n                .attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top+ ')');\n        };\n\n        this.getSubDomain = function(selection){\n            var startElement, stopElement, domainElements, domainElement, subDomain, insideSubDomain, start, stop;\n\n            subDomain = [];\n\n            start = selection[0];\n            stop = selection[1];\n\n            startElement = this.scale.invert(start);\n\n            stopElement = this.scale.invert(stop);\n\n            domainElements = this.domain();\n\n            insideSubDomain = false;\n\n            for (var n=0,length=domainElements.length; n<length; n++){\n                domainElement = domainElements[n];\n\n\n                if (domainElement == startElement || insideSubDomain == true){\n                    insideSubDomain = true;\n                    subDomain.push(domainElement);\n                }\n\n                if (domainElement == stopElement){\n                    insideSubDomain = false;\n                    break;\n                }\n            }\n\n            if (subDomain.length == 2 && subDomain[0] == subDomain[1]){\n                subDomain = [subDomain[0]];\n            }\n            return subDomain;\n        };\n\n        this.onClick = function(callback){\n            onClickCallbacks.push(callback);\n        };\n\n        this.onMouseOver = function(callback){\n            onMouseOverCallbacks.push(callback);\n        };\n\n        this.onMouseOut = function(callback){\n            onMouseOutCallbacks.push(callback);\n        };\n\n        this._initOnClick = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"click\")\n                .on(\"click\", function(evt){\n\n                    var callback, context;\n                    for(var n=0,length=onClickCallbacks.length; n<length; n++){\n\n                        callback = onClickCallbacks[n];\n                        context = this;\n\n                        callback.call(context, evt);\n                    }\n\n                });\n        };\n\n\n        this._initOnMouseOver = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"mouseover\")\n                .on(\"mouseover\", function(evt){\n                    var callback, context;\n                    for(var n=0,length=onMouseOverCallbacks.length; n<length; n++){\n\n                        callback = onMouseOverCallbacks[n];\n                        context = this;\n\n                        callback.call(context, evt);\n                    }\n                });\n        };\n\n        this._initOnMouseOut = function(){\n            container.dom.$\n                .find(\".y.axis text\")\n                .off(\"mouseout\")\n                .on(\"mouseout\", function(evt){\n                    var callback, context;\n                    for(var n=0,length=onMouseOutCallbacks.length; n<length; n++){\n\n                        callback = onMouseOutCallbacks[n];\n                        context = this;\n\n                        callback.call(context, evt);\n                    }\n                });\n        };\n\n\n        this.container.updateList.push({update: this.update, context: this});\n\n    };\n\n    return SvgOrdinalAxisView;\n});\n\n\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 9/20/13\n * Time: 10:59 AM\n * To change this template use File | Settings | File Templates.\n */\n\n\ndefine('dnsmon.view.main',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.lib.d3\",\n    \"dnsmon.view.template-manager\",\n    \"dnsmon.view.time-overview\",\n    \"dnsmon.view.svg.container\",\n    \"dnsmon.view.pop-up\",\n    \"dnsmon.view.breadcrumbs\",\n    \"dnsmon.view.control-panel\",\n    \"dnsmon.controller.time\",\n    \"dnsmon.view.svg.time-axis\",\n    \"dnsmon.view.svg.ordinal-axis\",\n    \"dnsmon.env.params-manager\"\n], function(utils, $, d3, TemplateManagerView, TimeOverviewView,\n            SvgContainerView, PopUpView, BreadcrumbsView,\n            ControlPanelView, TimeController, SvgTimeAxisView, SvgOrdinalAxisView, paramsManager){\n\n    /**\n     * MainView is a mandatory view component in charge of initialising and coordinating the whole\n     * representation layer\n     *\n     * @class MainView\n     * @constructor\n     * @module view\n     */\n\n    var MainView = function(env){\n        var representedTimeWindowInSeconds, loadingImageDom, config, $this, oldStartDate, oldEndDate, d3Cells;\n\n        config = env.config;\n        $this = this;\n\n\n        /**\n         * This method initializes the representation layer\n         *\n         * @method init\n         * @input {Object} mainDom A dom element where to place the widget\n         * @input {Object} instanceParam A vector of parameter to initialise the widget\n         */\n\n        this.init = function(mainDom, instanceParam){\n            /*\n             * Create the dom elements needed\n             */\n            this.templateManager = new TemplateManagerView(env);\n            this.templateManager.createDom(mainDom, instanceParam);\n            this.defaultDimensions = {width: instanceParam.width, height: instanceParam.height};\n\n            env.container = new SvgContainerView(\n                this.templateManager.dom.svgContainer,\n                {\n                    left: config.labelWidth,\n                    right: config.chartMargins.right,\n                    top: config.chartMargins.top,\n                    bottom: config.chartMargins.bottom\n                }, {\n                    trackerPadding: config.trackerPadding,\n                    animationDuration: config.zoomAnimationDuration,\n                    maxHeight: env.maxHeight - config.style.controlPanelHeight - config.style.timeOverviewHeight - config.style.breadCrumbsHeight - (config.style.containerMargin * 2),\n                    minHeight: env.minHeight - config.style.controlPanelHeight - config.style.timeOverviewHeight - config.style.breadCrumbsHeight - (config.style.containerMargin * 2)\n                });\n\n            /*\n             * Instantiate all components\n             */\n            this.timeController = new TimeController(env);\n            this.popUp = new PopUpView(env);\n            this.controlPanel = new ControlPanelView(env);\n            this.breadcrumbs = new BreadcrumbsView(env);\n\n            this.timeOverview = new TimeOverviewView(\n                {\n                    margins: config.timeOverviewMargins,\n                    verticalLabels: true,\n                    hideIfLessThanSeconds: config.hideTimeOverviewWhenLessThanSeconds,\n                    granularityLevels: config.brusherBucketLevelsMinutes,\n                    width: env.container.chart.width() + config.timeOverviewMargins.left,\n                    height: config.style.timeOverviewHeight\n                },\n\n                {\n                    end: function(startDate, endDate, points){\n                        env.params.startDate = startDate;\n                        env.params.endDate = endDate;\n\n                        if (env.isUpdatedPeriodicallyActive){ // Disable the auto refresh function if active\n                            $this.controlPanel.keepUpdatedActive(false);\n                        }\n\n                        env.mainView.updateXDomain(true);\n                        env.container.chart.updateBoundaries(points);\n                    },\n\n                    interaction: function(startDate, endDate, points){\n                        env.params.startDate = startDate;\n                        env.params.endDate = endDate;\n                        env.mainView.updateXDomain(false);\n                        env.container.chart.updateBoundaries(points);\n                    },\n\n                    change: function(startDate, endDate, points){\n                        env.container.chart.updateBoundaries(points);\n                    },\n\n                    init: function(startDate, endDate, points){\n                        env.container.chart.updateBoundaries(points);\n                    }\n\n                });\n\n            /*\n             * Push elements in the update list\n             */\n            env.container.updateList.push({\n                update: function(){\n                    var newWidth;\n\n                    newWidth = env.container.chart.width();\n\n                    this.templateManager.dom.timeOverviewContainer.$.width(newWidth + config.timeOverviewMargins.left);\n                    this.timeOverview.width(newWidth + config.timeOverviewMargins.left);\n                },\n                context: this});\n\n            env.container.updateList.push({\n                update: this.controlPanel.updateWidth,\n                context: this.controlPanel\n            });\n\n\n            /*\n             * Mouse tracking globally visible (to optimize)\n             */\n            env.mouse = {};\n            env.mainDom.$.on(\"mousemove\", function(evt){\n                var offset = $(this).offset();\n                env.mouse = {x: evt.pageX - offset.left, y: evt.pageY - offset.top};\n            });\n\n            this.loadingImage(true);\n            env.connector.retrieveData(this.firstDraw, this); // Get the data and start the visualization\n        };\n\n\n        /**\n         * This method computes the best height, related to the number of rows, for the chart\n         *\n         * @method _computeWidgetBestHeight\n         * @private\n         * @return {Number} The height\n         */\n\n        this._computeWidgetBestHeight = function(){\n            var height;\n\n            height = (this.defaultDimensions.height - config.style.timeOverviewHeight - config.style.controlPanelHeight - config.style.breadCrumbsHeight - (config.style.containerMargin * 2) ) || env.container.chart.computeBestHeight(this.rows.length);\n            return height;\n        };\n\n\n        /**\n         * This method draws the chart\n         *\n         * @method firstDraw\n         * @input {Object} A data-set\n         */\n\n        this.firstDraw = function(data){\n\n            utils.log(\"Visualization starts\", env.debugMode);\n            this.rows = data.rows;\n\n            /*\n             * Set dimensions of the elements based on data\n             */\n            env.container.height(this._computeWidgetBestHeight());\n\n            this._initAxis(data);\n            this._render(data);\n            this.timeController.init();\n            this.timeOverview.init(this.templateManager.dom.timeOverviewContainer.plain, [env.measurementStartTime, env.measurementEndTime], [env.params.startDate, env.params.endDate]);\n            this.controlPanel.render(env.mainDom);\n            this.breadcrumbs.init();\n\n            this.timeController.updateStatus();\n            this.controlPanel.update();\n\n            this.setTimeMargins(data.startDate, data.endDate);\n\n            utils.callCallbacks(env.callbacks[\"load\"], paramsManager.fromInternalToExternal(env.params));\n\n            this.loadingImage(false);\n\n            if (env.params.type == \"probes\"){\n                this.breadcrumbs.enrichLabel(data.group.id, data.group.label, \"probes\");\n                this.breadcrumbs.enrichLabel(data.root.id, data.root.label, \"servers\");\n            } else if (env.params.type == \"servers\"){\n                this.breadcrumbs.enrichLabel(data.group.id, data.group.label, \"servers\");\n            }\n\n\n\n            utils.log(\"Visualization ends\", env.debugMode);\n        };\n\n\n        /**\n         * This method computes and applies the actual color scale\n         *\n         * @method updateColorScales\n         */\n\n        this.updateColorScales = function(){\n            var rangeInSession, showFilter, internalColorScale, initialRange, sessionKey;\n\n            showFilter = env.showFilter;\n            sessionKey = \"color_range_\" + showFilter;\n\n            if (!this.normalColorScales){\n                this.normalColorScales = config.normalColorScales;\n                this.selectionColorScales = config.selectionColorScales;\n            }\n\n            this.colorDomainAndRange = utils.computeColorScale(this.normalColorScales[showFilter]);\n            this.selectionColorDomainAndRange = utils.computeColorScale(this.selectionColorScales[showFilter]);\n\n            // Set the actual range from the embedding code\n            if (env.colorRanges && env.colorRanges[showFilter] && env.colorRanges[showFilter].length == 2){\n                this.colorDomainAndRange.valueRange[1] = env.colorRanges[showFilter][0];\n                this.colorDomainAndRange.valueRange[2] = env.colorRanges[showFilter][0];\n                this.colorDomainAndRange.valueRange[3] = env.colorRanges[showFilter][1];\n\n                initialRange = utils.join(this.colorDomainAndRange.valueRange, \"-\");\n                env.session.setInitialisationValues(sessionKey, initialRange);\n            }\n\n            // Get the actual range from the session\n            rangeInSession = env.session.getValue(sessionKey);\n\n            // Apply the range in session\n            if (rangeInSession){\n                rangeInSession = $.map(rangeInSession.split(\"-\"), parseFloat);\n                this._applyRange(rangeInSession);\n            }else{\n                // Save the current range\n                env.session.saveValue(sessionKey,  utils.join(this.colorDomainAndRange.valueRange, \"-\"));\n\n            }\n\n            internalColorScale = this._addOffsetToColorScale(this.colorDomainAndRange.valueRange);\n\n            this.color = d3.scale.linear().domain(internalColorScale).range(this.colorDomainAndRange.colorRange);\n            this.selectionColor = d3.scale.linear().domain(internalColorScale).range(this.selectionColorDomainAndRange.colorRange);\n\n            //Compute the breakpoints\n            this.colorDomainBreakPoints = [this.colorDomainAndRange.valueRange[2], this.colorDomainAndRange.valueRange[3]];\n        };\n\n\n        /**\n         * This method introduces some offsets in the ranges in order to preserve the consistency with the legend\n         *\n         * @method _addOffsetToColorScale\n         * @private\n         * @input {Array} colorScale A color scale expressed as an array of values\n         */\n\n        this._addOffsetToColorScale = function(colorScale){\n            return [ colorScale[0], colorScale[1], colorScale[2] + config.colorSeparationOffset, colorScale[3], colorScale[4] ];\n        };\n\n\n        /**\n         * This method applies a new range to the color scales\n         *\n         * @method _applyRange\n         * @private\n         * @input {Array} newValuesRange A color range expressed as an array of values\n         */\n\n        this._applyRange = function(newValuesRange){\n            // Update the normal color range fot this visualization type\n            this.colorDomainAndRange.valueRange = newValuesRange;\n\n            // Update the selection color range fot this visualization type\n            this.selectionColorDomainAndRange.valueRange = newValuesRange;\n        };\n\n\n        /**\n         * This method changes the color of the cells without executing a complete redraw\n         *\n         * @method updateOnlyColors\n         * @input {Array} newValuesRange A color range expressed as an array of values\n         */\n\n        this.updateOnlyColors = function(newValuesRange){\n            var $this, showFilter, internalRange;\n\n            $this = this;\n\n            showFilter = env.showFilter;\n\n            this._applyRange(newValuesRange);\n\n            internalRange = this._addOffsetToColorScale(this.colorDomainAndRange.valueRange);\n\n            // Compute the new color scales\n            this.color = d3.scale.linear().domain(internalRange).range(this.colorDomainAndRange.colorRange);\n            this.selectionColor = d3.scale.linear().domain(internalRange).range(this.selectionColorDomainAndRange.colorRange);\n\n            // Save the current range\n            env.session.saveValue(\"color_range_\" + showFilter,  utils.join(this.colorDomainAndRange.valueRange, \"-\"));\n\n            this.colorDomainBreakPoints = [this.colorDomainAndRange.valueRange[2], this.colorDomainAndRange.valueRange[3]];\n\n\n            d3Cells.style(\"fill\", $this.getCellColor);\n        };\n\n\n        /**\n         * This method initialises the svg axis of the chart\n         *\n         * @method _initAxis\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._initAxis = function(data){\n            var $this, yRowsToDomainAndMagnets;\n\n            $this = this;\n            yRowsToDomainAndMagnets = this.rowsCharacterization(this.rows);\n\n            this.xDomain = function(){\n                return [env.params.startDate, env.params.endDate];\n            };\n\n            this.xRange = function(){\n                return [0, env.container.chart.width()];\n            };\n\n\n            this.yDomain = function(){\n                return yRowsToDomainAndMagnets.domain;\n            };\n\n            this.yRange = function(){\n                return [0, env.container.chart.height()];\n            };\n\n            this.updateColorScales();\n\n            this.xAxis = new SvgTimeAxisView(env.container, {domain: this.xDomain, range: this.xRange, orient: \"bottom\", offset: config.xSeparationOffset});\n            this.yAxis = new SvgOrdinalAxisView(env.container,\n                {\n                    domain: this.yDomain,\n                    range: this.yRange,\n                    orient: \"left\",\n                    offset: config.ySeparationOffset,\n                    magnetValues: yRowsToDomainAndMagnets.magnets,\n                    descriptions: yRowsToDomainAndMagnets.descriptions,\n                    groups: yRowsToDomainAndMagnets.groups,\n                    displayGroupBlocks: env.grouping\n                });\n\n            this.yAxis.onMouseOver(function(evt){\n                $this.selectRow(true, $(this).attr(\"magnet\"));\n            });\n\n            this.yAxis.onMouseOut(function(evt){\n                $this.selectRow(false, $(this).attr(\"magnet\"));\n            });\n\n        };\n\n\n        /**\n         * This method allows to register listeners\n         *\n         * @method on\n         * @input {String} eventType An event type\n         * @input {Function} callback A callback\n         */\n\n        this.on = function(eventType, callback){\n            env.callbacks[eventType].push(callback);\n        };\n\n\n        /**\n         * This method redraws completely the chart\n         *\n         * @method redraw\n         * @input {Function} callback A callback triggered after the redraw\n         * @input {Object} context The context of the callback\n         */\n\n        this.redraw = function(callback, context){\n            var context = context || this;\n\n            this.updateColorScales();\n            this.loadingImage(true);\n\n            this.selectColumn(false);\n            this.selectRow(false);\n\n            env.connector.retrieveData(function(data){\n                this.update(data);\n\n                this.loadingImage(false);\n\n                if (callback != null){\n                    callback.call(context, data);\n                }\n            }, this);\n        };\n\n\n        /**\n         * This method selects a column of the chart\n         *\n         * @method selectColumn\n         * @input {Boolean} selected True if selected\n         * @input {Number} position The x position of the selection\n         * @input {Number} width The width of the selection\n         */\n\n        this.selectColumn = function(selected, position, width){\n            var verticalSelectorPadding, halfVerticalSelectorPadding;\n\n            clearTimeout(this._selectColumnTimer);\n\n            this._selectColumnTimer = setTimeout(function(){\n\n                if (selected && env.timeEventsActive){\n\n                    verticalSelectorPadding = config.style.verticalSelectorPadding;\n                    halfVerticalSelectorPadding = verticalSelectorPadding / 2;\n                    width += verticalSelectorPadding;\n\n                    if (env.retrievedAggregationLevel == 0){ // Center the vertical selector for the native resolution\n                        position += (width / 2); // Center it on an half of the cell\n                        width = 1;\n                    }\n\n                    env.container.chart.chartSelectorVertical\n                        .attr(\"transform\", \"translate(\" + (position - halfVerticalSelectorPadding) + \", \" + 0 + \")\")\n                        .style(\"stroke-width\", ((width == 1) ? \"1px\" : config.style.selectorRectStokeWidth))\n                        .style(\"display\", \"block\")\n                        .attr(\"width\", width);\n                }else{\n                    env.container.svg\n                        .select(\".\" + config.domClasses.chartSelectorVertical)\n                        .style(\"display\", \"none\");\n                }\n\n            }, ((selected) ? config.selectRowColumnTimer : 0));\n\n        };\n\n\n        /**\n         * This method selects a row of the chart starting from a label\n         *\n         * @method _selectLabel\n         * @private\n         * @input {Boolean} selected True if selected\n         * @input {String} rowId The ID of a row\n         */\n\n        this._selectLabel = function(selected, rowId){\n            var $this = this;\n\n            if (env.timeEventsActive){\n                if ($this._previousSelectedYLabel){\n                    $this._previousSelectedYLabel\n                        .css(\"font-size\", config.style.axisLabelsFontSizeDefault)\n                        .css(\"font-weight\", \"normal\");\n                }\n\n                if (selected){\n                    env.mainDom.$.find('text').each(function(){\n                        var label = $(this);\n                        if ((label.attr(\"magnet\") == rowId)){\n\n                            label\n                                .css(\"font-size\", config.style.axisLabelsFontSizeSelected)\n                                .css(\"font-weight\", \"bold\");\n\n                            $this._previousSelectedYLabel = label;\n                        }\n                    });\n                }\n            }\n        };\n\n\n        /**\n         * This method selects a row of the chart\n         *\n         * @method selectRow\n         * @input {Boolean} selected True if selected\n         * @input {String} rowId The ID of a row\n         */\n\n        this.selectRow = function(selected, rowId){\n            var $this, chartSvg;\n\n            $this = this;\n            clearTimeout(this._selectRowTimer);\n\n            this._selectRowTimer = setTimeout(function(){\n                $this._selectLabel(selected, rowId);\n\n                chartSvg = env.container.chart.svg;\n\n                if (selected  && env.timeEventsActive){\n\n                    if (!env.lowProfile){\n\n                        chartSvg\n                            .selectAll(\".cell\")\n                            .each(function(){\n                                var cell, cellClasses;\n                                cell = d3.select(this);\n                                cellClasses = cell.attr(\"class\").split(\" \");\n\n                                if (cellClasses[2] != \"origin\" + rowId){\n\n                                    cell\n                                        .transition()\n                                        .duration(((selected) ? config.hoverTransitionDuration : 0))\n                                        .style({\n                                            \"opacity\": config.cellUnselectedOpacity\n                                        });\n\n                                }else{\n\n                                    cell\n                                        .style({\n                                            \"opacity\": 1,\n                                            \"stroke\": \"#616161\",\n                                            \"stroke-width\": \"1px\"\n                                        });\n\n                                }\n\n                            });\n\n                    } else {\n\n                        if ($this._previusoSelectedRowCells){\n                            $this._previusoSelectedRowCells\n                                .style(\"stroke-width\", \"0px\");\n                        }\n\n                        $this._previusoSelectedRowCells = chartSvg\n                            .selectAll(\".origin\" + rowId)\n                            .style(\"stroke\", \"#616161\")\n                            .style(\"stroke-width\", \"1px\");\n                    }\n\n                }else{\n\n                    if (!env.lowProfile){\n                        chartSvg\n                            .selectAll(\".cell\")\n                            .style(\"opacity\", \"1\")\n                            .style(\"stroke-width\", \"0px\");\n                    }else{\n                        if ($this._previusoSelectedRowCells){\n                            $this._previusoSelectedRowCells\n                                .style(\"stroke-width\", \"0px\");\n                        }\n                    }\n\n                    delete $this._previusoSelectedRowCells;\n                }\n            }, (selected) ? config.selectRowColumnTimer : 0);\n\n        };\n\n\n        /**\n         * This method returns the values of the selected cell related to the current type of visualisation\n         *\n         * @method getCellValue\n         * @input {Object} cellData The d3 cell data object\n         * @return {String} The value\n         */\n\n        this.getCellValue = function(cellData){\n            var value, showFilter, excludeErrors;\n\n            showFilter = env.showFilter;\n            excludeErrors = (env.session.getValue('exclude-errors') == 'true'); // ...SessionManager manages only strings\n\n            switch(showFilter){\n                case 'pls':\n                    value = ((excludeErrors) ? cellData.getNumberCorrectResponses() : cellData.getPacketLoss());\n                    break;\n\n                case 'rtt':\n                    value = cellData.getResponseTime();\n                    break;\n\n                case 'relative-rtt':\n                    value = cellData.getRelativeResponseTime();\n                    break;\n            }\n\n            return value;\n        };\n\n\n        /**\n         * This method shows or hides the throbber image\n         *\n         * @method loadingImage\n         * @input {Boolean} isVisible True if visible\n         */\n\n        this.loadingImage = function(isVisible){\n            var moveLoadingImage, mouseCoords;\n\n            loadingImageDom = this.templateManager.dom.loadingImage.$;\n            mouseCoords = env.mouse;\n            moveLoadingImage = this._moveLoadingImage;\n\n            if (isVisible){\n                loadingImageDom\n                    .css({\n                        \"left\": mouseCoords.x,\n                        \"top\": mouseCoords.y\n                    })\n                    .show();\n                env.document.$.on(\"mousemove\", moveLoadingImage);\n            }else{\n                loadingImageDom.hide();\n                env.document.$.off(\"mousemove\", moveLoadingImage);\n            }\n        };\n\n\n        /**\n         * This method moves the throbber image in order to follow the cursor\n         *\n         * @method _moveLoadingImage\n         * @private\n         * @input {Object} evt A JavaScript event\n         */\n\n        this._moveLoadingImage = function(evt){\n            var mouseCoords;\n\n            mouseCoords = env.mouse;\n\n            loadingImageDom\n                .css({\n                    \"left\": mouseCoords.x,\n                    \"top\": mouseCoords.y\n                });\n        };\n\n\n        /**\n         * This method updates the time domain\n         *\n         * @method updateXDomain\n         * @input {Object} pullData If true a new data-set will be requested\n         */\n\n        this.updateXDomain = function(pullData){\n            var chart, elementIndex, shakeIterations, shakeDuration, shakeTransform, shakingElementsReduction;\n\n            chart = env.container.chart;\n\n            if (env.params.startDate < env.measurementStartTime || env.params.endDate > env.measurementEndTime){ // Check the boundaries\n                return false;\n            }\n\n            this.xAxis.setDomain(function(){\n                return [env.params.startDate, env.params.endDate];\n            });\n\n            this.timeOverview.updateSelection([env.params.startDate, env.params.endDate]);\n\n            if (!chart.hidden){\n                if (env.lowProfile == true || !config.shakeActive) {\n                    chart.dom.$.fadeTo(config.redrawFadeOut, 0.4);\n                    chart.hidden = true;\n                }else{\n\n                    shakeTransform = function(d){\n                        var x, y;\n\n                        x = d.optional.xPosition + Math.floor(Math.random() * config.shakeTuner);\n                        y = d.optional.yPosition + Math.floor(Math.random() * config.shakeTuner);\n\n                        return \"translate(\" + x + \",\" + y + \")\";\n                    };\n\n                    elementIndex = 0;\n                    shakeIterations = 5;\n                    shakingElementsReduction = (d3Cells.length < 40) ? 1 : 4;\n                    shakeDuration = config.shakeDuration/shakeIterations;\n\n                    d3Cells\n                        .each(function(d){\n                            var that = this;\n                            if (elementIndex % shakingElementsReduction == 0){\n                                for (var n=5; n>0; n--){\n                                    setTimeout(\n                                        function(){\n                                            d3.select(that)\n                                                .attr(\"transform\", shakeTransform);\n                                        },\n                                        shakeDuration * n\n                                    );\n                                }\n                            }\n                            elementIndex++;\n                        });\n\n                }\n            }\n\n            if (pullData){\n                this.redraw();\n            }\n        };\n\n\n        /**\n         * This support method lists all the steps for a complete redraw\n         *\n         * @method _render\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._render = function(data){\n            this.xAxis.render();\n            this.yAxis.render();\n            this._setLowProfile(data);\n            this._renderCells(data);\n\n            env.history.init();\n        };\n\n\n        /**\n         * This support method draws all the cell\n         *\n         * @method _renderCells\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._renderCells = function(data){\n            var cellsTransform, cellWidth, cellHeight, rect, $this, cellClass, transformSet, orderingFunction, pxToSec,\n                cellTranslateLeft, cellsSVG;\n\n            $this = this;\n\n            cellTranslateLeft = (env.retrievedAggregationLevel == 0) ? (config.cellsMinWidth / 2) : 0;\n\n            representedTimeWindowInSeconds = env.timeWindowSeconds;\n\n            orderingFunction = function(d){\n                return d.row.id + \"-\" + d.group + \"-\" + d.time;\n            };\n\n            cellsTransform = function(d) {\n                d.selected = false;\n                d.optional.xPosition = $this.xAxis.scale(d.time) - cellTranslateLeft;\n                d.optional.xPosition = (d.optional.xPosition < 0) ? 0 : d.optional.xPosition; // OPTIMISATION: don't call Math.max\n                d.optional.yPosition = $this.yAxis.scale(d.row.label);\n                return \"translate(\" + d.optional.xPosition + \",\" + d.optional.yPosition + \")\";\n            };\n\n            cellClass = function(d){\n                return 'cell time_' + d.time.getTime() + ' origin' + d.row.id;\n            };\n\n            pxToSec = (env.container.chart.width() / env.timeWindowSeconds);\n\n            cellsSVG = env.container.chart.svg.selectAll(\"rect.cell\");\n\n            cellWidth = function(cellData){\n                var cellWidth;\n\n                if (cellData.endTime){\n                    cellWidth = (pxToSec * ((cellData.endTime - cellData.time)/1000)) - config.xCellsMargin;\n                }else{\n                    cellWidth = (pxToSec * (env.samplingFrequency/100) * config.nativeCellWidthFrequencyPercentage) - config.xCellsMargin;\n                }\n\n                if (cellWidth < config.cellsMinWidth){\n                    cellWidth = config.cellsMinWidth;\n                }\n                return cellWidth;\n            };\n\n\n            cellHeight = function(d){\n\n                if (window.dynamicHeight == true && d.getPacketLoss() > 66 && d.getPacketLoss() < 99){\n                    var height = $this.yAxis.scale.rangeBand() * config.yCellsMargin;\n                    return Math.min(d.respondingTime, height);\n                }\n                return $this.yAxis.scale.rangeBand() - ($this.yAxis.scale.rangeBand() * config.yCellsMargin);\n            };\n\n\n            this.cellWidth = cellWidth;\n\n            d3Cells = cellsSVG\n                .data(data.cells, orderingFunction);\n\n            d3Cells\n                .exit()\n                .on('click', null)\n                .on('mousemove', null)\n                .on('mouseenter', null)\n                .on('mouseout', null)\n                .remove();\n\n            d3Cells\n                .enter()\n                .append(\"rect\")\n                .attr(\"class\", cellClass)\n                .attr(\"rx\", 2)\n                .attr(\"ry\", 2)\n                .attr(\"y\", 0)\n                .style(\"fill\", $this.getCellColor)\n                .style(\"cursor\", config.style.selectionCursor)\n                .on(\"mousemove\", function(d){\n\n                    if ($this._mouseEntered != true){ // To improve performance\n\n                        /*\n                         * The block under (repetition of the mousenter) tries to avoid bugs in some browser that sometimes skip the mouseenter event\n                         */\n                        var xPosition, columnWidth;\n\n                        columnWidth = parseFloat(d3.select(this).attr(\"width\"));\n                        xPosition = d.optional.xPosition;\n\n                        $this.selectRow(true, d.row.id);\n                        $this.selectColumn(true, xPosition, columnWidth);\n                        $this._mouseEntered = true;\n\n                    }else{\n\n                        if (env.timeEventsActive){\n                            var mouseCursor, mouseCursorFormatted;\n                            mouseCursor = d3.mouse(env.container.dom.plain);\n                            mouseCursorFormatted = {x: mouseCursor[0], y: mouseCursor[1]};\n                            $this.popUp.show(d, mouseCursorFormatted);\n                        }\n                    }\n                })\n                .on(\"mouseenter\", function(d){\n\n                    if (env.timeEventsActive){\n                        var xPosition, columnWidth;\n\n                        columnWidth = parseFloat(d3.select(this).attr(\"width\"));\n                        xPosition = d.optional.xPosition;\n\n                        $this.popUp.hide();\n                        $this.selectRow(true, d.row.id);\n                        $this.selectColumn(true, xPosition, columnWidth);\n                        $this._mouseEntered = true;\n                    }\n\n                })\n                .on(\"mouseout\", function(d){\n\n                    if (env.timeEventsActive){\n                        $this.popUp.hide();\n\n                        $this.selectRow(false, d.row.id);\n                        $this.selectColumn(false);\n\n                        $this._mouseEntered = false;\n                    }\n                });\n\n\n            if (this.drawn && env.lowProfile == false && this.previosNumberOfCells > d3Cells[0].length){\n                transformSet = d3Cells\n                    .transition()\n                    .duration(config.zoomAnimationDuration)\n                    .attr(\"width\", cellWidth)\n                    .attr(\"height\", cellHeight)\n                    .attr(\"transform\", cellsTransform)\n                    .style(\"stroke-width\", \"0px\")\n                    .delay(config.zoomAnimationDelay)\n                    .style(\"fill\", $this.getCellColor);\n            }else{\n                d3Cells\n                    .attr(\"width\", cellWidth)\n                    .attr(\"height\", cellHeight)\n                    .attr(\"transform\", cellsTransform)\n                    .style(\"stroke-width\", \"0px\")\n                    .style(\"fill\", $this.getCellColor);\n            }\n\n            this.previosNumberOfCells = d3Cells[0].length;\n\n            this.drawn = true;\n\n            utils.log(\"Number of cell displayed: \" + data.cells.length, env.debugMode);\n\n//            delete this.d3Cells;\n        };\n\n\n        /**\n         * This method computes the color of a given cell\n         *\n         * @method getCellColor\n         * @input {Object} cell A cell object\n         */\n\n        this.getCellColor = function(cell){\n            var value, color;\n\n            value = $this.getCellValue(cell);\n\n            if (value != null){\n                color = $this.color(value);\n            }else{\n                color = config.style.noRttAvailableColor;\n            }\n\n            return color;\n        };\n\n\n        /**\n         * This method computes the color of a given cell when it is selected\n         *\n         * @method getSelectedCellColor\n         * @input {Object} cell A cell object\n         */\n\n        this.getSelectedCellColor = function(cell){\n            var value, color;\n\n            value = $this.getCellValue(cell);\n\n            if (value != null){\n                color = $this.selectionColor(value);\n            }else{\n                color = config.style.noRttAvailableSelectionColor;\n            }\n\n            return color;\n        };\n\n\n        /**\n         * This method updates the chart applying the new data-set\n         *\n         * @method update\n         * @input {Object} data A data-set\n         */\n\n        this.update = function(data){\n            utils.log(\"Visualization update starts\", env.debugMode);\n            var yRowsToDomainAndMagnets;\n\n            this.rows = data.rows;\n\n            env.timeEventsActive = true;\n\n            this.timeController.updateStatus();\n            this.controlPanel.update();\n            env.history.update();\n\n            env.container.height(this._computeWidgetBestHeight());\n\n            this.setTimeMargins(data.startDate, data.endDate);\n\n            yRowsToDomainAndMagnets = this.rowsCharacterization(this.rows);\n\n            this.xAxis.setDomain(function(){\n                return [env.params.startDate, env.params.endDate];\n            });\n\n            this.yAxis.setDomain(\n                function(){\n                    return yRowsToDomainAndMagnets.domain;\n                },\n                yRowsToDomainAndMagnets.magnets,\n                yRowsToDomainAndMagnets.descriptions,\n                yRowsToDomainAndMagnets.groups\n            );\n\n            this._setLowProfile(data);\n            this._renderCells(data);\n\n            if (env.container.chart.hidden == true){\n                env.container.chart.dom.$.fadeTo(config.redrawFadeIn, 1);\n                env.container.chart.hidden = false;\n            }\n\n            this.timeOverview.update([env.measurementStartTime, env.measurementEndTime], [env.params.startDate, env.params.endDate]);\n\n            utils.callCallbacks(env.callbacks[\"change\"], paramsManager.fromInternalToExternal(env.params)); // Call all the \"change\" callbacks\n\n            utils.log(\"Visualization update ends\", env.debugMode);\n        };\n\n\n        /**\n         * This method sets the right profile mode related to the data-set dimension\n         *\n         * @method _setLowProfile\n         * @private\n         * @input {Object} data A data-set\n         */\n\n        this._setLowProfile = function(data){\n            var lowProfileLimitations;\n            lowProfileLimitations = config.lowProfileLimitations;\n\n            env.lowProfile = (config.forceLowProfile) || (lowProfileLimitations.numerOfCells < data.cells.length);\n        };\n\n\n        /**\n         * This method computes all the information of the y-axis items\n         *\n         * @method rowsCharacterization\n         * @input {Object} data A data-set of rows\n         * @return {Object} A map of characterizations (i.e. domain, magnets, descriptions, groups)\n         */\n\n        this.rowsCharacterization = function(list){\n            var domain, magnets, domainElement, idParsed, descriptions, groups;\n            domain = [];\n            magnets = {};\n            descriptions = {};\n            groups = {};\n\n            list = list.sort(function(a, b) {\n\n                if (a.group != \"\"){\n                    a = a.group + \"-\" + a.internalOrder;\n                    b = b.group + \"-\" + b.internalOrder;\n                }else{\n                    a = parseInt(a.id);\n                    b = parseInt(b.id);\n                }\n                return a < b ? -1 : a > b ? 1 : 0;\n            });\n\n\n            for (var n=0,length=list.length; n<length; n++){\n                domainElement = list[n];\n                if (domainElement.label){\n                    domain.push(domainElement.label);\n                    idParsed = domainElement.label.replace(\" \", \"_\");\n                    magnets[idParsed] = domainElement.id;\n                    descriptions[idParsed] = domainElement.description;\n                    groups[idParsed] = domainElement.group;\n                }\n            }\n            return {\n                domain: domain,\n                magnets: magnets,\n                descriptions: descriptions,\n                groups: groups\n            };\n        };\n\n\n        /**\n         * This method shows a textual message to the user\n         *\n         * @method showMessage\n         * @input {String} text The message\n         */\n\n        this.showMessage = function(text){\n            if (text == ''){\n                this.templateManager.dom.message.$.hide();\n            }else{\n                this.templateManager.dom.message.$.html(text).show().fadeOut(config.messagesFadeOutSeconds);\n            }\n        };\n\n\n        /**\n         * This method applies new margins to the current time window\n         *\n         * @method setTimeMargins\n         * @input {Date} start The start date\n         * @input {Date} end The end date\n         */\n\n        this.setTimeMargins = function(start, end){\n            var timeMarginsContainer, timeMargins, startDateDiv, endDateDiv;\n\n            timeMarginsContainer = this.templateManager.dom.timeMargins.$;\n            timeMargins = timeMarginsContainer.children();\n\n            startDateDiv = timeMargins.first();\n            endDateDiv = timeMargins.last();\n\n            if (oldStartDate != start) {\n\n                startDateDiv.html(env.lang.fromTimeRange + ' ' + utils.dateToStringShort(start));\n                startDateDiv.toggleClass(\"updated\");\n                setTimeout(function () {startDateDiv.toggleClass(\"updated\");}, config.aggregationLegendUpdatedDuration);\n\n            }\n            if (oldEndDate != end){\n\n                if (!env.isUpdatedPeriodicallyActive){\n                    endDateDiv.html(env.lang.toTimeRange + ' ' + utils.dateToStringShort(end) + \" UTC\");\n                }else{\n                    endDateDiv.html(env.lang.lastUpdateAt + ' ' + utils.dateToStringShort(env.lastUpdate) + \" UTC\");\n                }\n                endDateDiv.toggleClass(\"updated\");\n                setTimeout(function(){endDateDiv.toggleClass(\"updated\");}, config.aggregationLegendUpdatedDuration);\n\n            }\n\n            oldStartDate = start;\n            oldEndDate = end;\n        };\n\n    };\n\n    return MainView;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/17/13\n * Time: 11:45 AM\n * To change this template use File | Settings | File Templates.\n */\n\n/*\n *\n */\ndefine('dnsmon.model.cell',[\"dnsmon.env.utils\"], function(utils){\n\n    /**\n     * Cell is the model object for a cell.\n     *\n     * @class Cell\n     * @constructor\n     * @module model\n     */\n\n    var Cell = function(row, time){\n\n        this.row = row;\n\n        this.time = time;\n\n        this.id = this.getId();\n\n        this.optional = {};\n    };\n\n\n    /**\n     * This method returns the packet loss of this cell\n     *\n     * @method getPacketLoss\n     * @return {Number} A percentage\n     */\n\n    Cell.prototype.getPacketLoss = function(){\n        return this.loss;\n    };\n\n\n    /**\n     * This method returns the errors of the dns response of this cell\n     *\n     * @method getErrors\n     * @return {Object} A Map of errors\n     */\n\n    Cell.prototype.getErrors = function(){\n        return this.errors;\n    };\n\n\n    /**\n     * This method returns the number of the correct dns responses of this cell\n     *\n     * @method getNumberCorrectResponses\n     * @return {Number} The number of the correct responses\n     */\n\n    Cell.prototype.getNumberCorrectResponses = function(){\n        return this.numberCorrectResponses;\n    };\n\n\n    /**\n     * This method returns the response time of this cell\n     *\n     * @method getResponseTime\n     * @return {Number} An amount of milliseconds\n     */\n\n    Cell.prototype.getResponseTime = function(){\n        return this.respondingTime;\n    };\n\n\n    /**\n     * This method returns the relative response time of this cell.\n     * The relative response time is the percentage of increase from the minimum response time of the cell's row.\n     *\n     * @method getRelativeResponseTime\n     * @return {Number} A percentage\n     */\n\n    Cell.prototype.getRelativeResponseTime = function(){\n        return (this.respondingTime == null) ? null : (((this.respondingTime - this.row.minimumResponseTime) / this.row.minimumResponseTime) * 100);\n    };\n\n\n    /**\n     * This method returns the unique ID of this cell\n     *\n     * @method getId\n     * @return {String} A unique ID\n     */\n\n    Cell.prototype.getId = function(){\n        return \"\" + this.row.id + \"_\" + this.time.getTime();\n    };\n\n\n    /**\n     * This method returns a string describing this cell\n     *\n     * @method toString\n     * @return {String} A string describing this cell\n     */\n\n    Cell.prototype.toString = function(){\n        var string = \"\";\n\n        if (this.respondingTime) {\n            string += \"RTT: \" + this.respondingTime + \"<br>\";\n        }\n\n        string += \"Packet Loss: \" + this.loss;\n\n        return string;\n    };\n\n\n    /**\n     * This method returns an array of strings describing this cell in a multi-line way\n     *\n     * @method toArrayString\n     * @return {Array} An array of strings\n     */\n\n    Cell.prototype.toArrayString = function(){\n        var stringArray, type;\n\n        stringArray = [];\n\n        switch(this.row.___type___){\n\n            case \"server\":\n                type = \"Server: \";\n                break;\n\n            case \"probe\":\n                type = \"Probe: \";\n                break;\n        }\n\n        stringArray.push(type + this.row.label);\n        if (this.endTime){\n            stringArray.push(\"From \" + utils.dateToString(this.time));\n            stringArray.push(\"To \" + utils.dateToString(this.endTime));\n        }else{\n            stringArray.push(\"At \" + utils.dateToString(this.time));\n        }\n\n        stringArray.push('RTT' + ((this.sent == 1) ? '' : ' (median)') + ': ' +((this.respondingTime) ? this.respondingTime + ' ms' : 'NA'));\n        stringArray.push(\"Queries sent: \" + this.sent);\n        stringArray.push(\"Unanswered queries: \" + this.loss + \"%\");\n\n        if (this.errors[\"ServFail\"]) stringArray.push(\"\\\"ServFail\\\" errors: \" + this.errors[\"ServFail\"]);\n        if (this.errors[\"NXDomain\"]) stringArray.push(\"\\\"NXDomain\\\" errors: \" + this.errors[\"NXDomain\"]);\n        if (this.errors[\"Refused\"]) stringArray.push(\"\\\"Refused\\\" errors: \" + this.errors[\"Refused\"]);\n        if (this.errors[\"others\"]) stringArray.push(\"Other errors: \" + this.errors[\"others\"]);\n        return stringArray;\n    };\n\n    return Cell;\n});\n\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/17/13\n * Time: 11:45 AM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.model.row',[], function(){\n\n    /**\n     * Row is the model object for a row.\n     *\n     * @class Row\n     * @constructor\n     * @module model\n     */\n\n    var Row = function(id, label){\n        this.id = id;\n        this.label = label;\n        this.cells = [];\n\n        this.group = \"\";\n\n        this.minimumResponseTime = null;\n        this.measurementId = null;\n    };\n\n    return Row;\n});\n","define('dnsmon.connector.atlas.rest',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\"\n], function(utils, $){\n\n    /**\n     * Connector is in charge of connecting the data-apis and providing a JSON format to the layers over.\n     *\n     * @class Connector\n     * @constructor\n     * @module connector.Atlas\n     */\n\n    var Connector = function(env){\n        var perServerDataUrl, serversDataUrl, nativeDnsResultDataUrl, closesttraceroutesDataUrl, config,\n            commonServer, closestNsidDataUrl, xhrEnvelop, firstCall, lowLevelParams;\n\n        config = env.config;\n        firstCall = true;\n        lowLevelParams = {\n            totalProbes: \"total_probes\"\n        };\n        this.maxNumberOfCells = env.muxNumberOfCells || config.maxNumberOfCells;\n        env.downoadedBytes = 0;\n\n        //weir-dev\n        commonServer = \"https://atlas.ripe.net/dnsmon/api\";\n\n        perServerDataUrl = (typeof DNSMON_PROBES_DATA_API_URL === \"undefined\") ? commonServer + \"/probes\" : DNSMON_PROBES_DATA_API_URL;\n        serversDataUrl = (typeof DNSMON_SERVERS_DATA_API_URL === \"undefined\") ? commonServer + \"/servers\" : DNSMON_SERVERS_DATA_API_URL;\n\n        nativeDnsResultDataUrl = (typeof DNSMON_ATLAS_DATA_API_URL === \"undefined\") ? commonServer + \"/atlas-data\" : DNSMON_ATLAS_DATA_API_URL;\n        closesttraceroutesDataUrl = (typeof DNSMON_ATLAS_TRACEROUTE_API_URL === \"undefined\") ? commonServer + \"/atlas-data\" : DNSMON_ATLAS_TRACEROUTE_API_URL;\n        closestNsidDataUrl = (typeof DNSMON_ATLAS_NSID_API_URL === \"undefined\") ? commonServer + \"/atlas-data\" : DNSMON_ATLAS_NSID_API_URL;\n\n        this.getDataUrl = function(params){\n\n            utils.log('Queried for:', env.debugMode);\n            utils.log(params, env.debugMode);\n            var url = \"\";\n\n            if (params.type == \"zone-servers\"){\n\n                utils.log(\"Data-api type: multi-server-data\", env.debugMode);\n\n                url = serversDataUrl;\n                url += (params.zone) ? \"?group=\" + params.zone : \"\";\n                url += (params.selectedRows != '') ? \"&servers=\" + params.selectedRows : \"\";\n\n                url += (!params.aggregationLevel) ? \"\" : \"&min_aggregation=\" + params.aggregationLevel;\n\n                url += (params.startTime) ? \"&start_time=\" + params.startTime : \"\";\n                url += (params.endTime) ? \"&end_time=\" + params.endTime : \"\";\n\n                url += (!params.startTime && !params.endTime && params.timeWindow) ? \"&default_time_period=\" + params.timeWindow : \"\";\n\n                url += (params.ipVersion) ? \"&ip_version=\" + params.ipVersion : \"\";\n                url += (params.isTcp) ? \"&is_tcp=\" + params.isTcp : \"\";\n\n                url += (env.maxNumberOfCellsPerRow) ? \"&max_samples_per_row=\" + env.maxNumberOfCellsPerRow : \"\";\n                url += (this.maxNumberOfCells) ? \"&max_samples=\" + this.maxNumberOfCells : \"\";\n\n            } else if (params.type == \"server-probes\"){\n\n                utils.log(\"Data-api type: single-server-data\", env.debugMode);\n\n                url = perServerDataUrl;\n                if (params.msm){\n                    url += \"?msm_id=\" + params.msm;\n                } else {\n                    url += \"?server=\" + params.server;\n                }\n\n                url += (params.zone) ? \"&group=\" + params.zone : \"\";\n                url += (params.maxProbes) ? \"&max_probes=\" + params.maxProbes : \"\";\n\n                url += \"&filter_probes=\" + params.filterProbes;\n\n                url += (!params.aggregationLevel) ? \"\" : \"&min_aggregation=\" + params.aggregationLevel;\n\n                url += (params.selectedRows != \"\") ? \"&probes=\" + params.selectedRows : \"\";\n\n                url += (params.startTime) ? \"&start_time=\" + params.startTime : \"\";\n                url += (params.endTime) ? \"&end_time=\" + params.endTime : \"\";\n\n                url += (!params.startTime && !params.endTime && params.timeWindow) ? \"&default_time_period=\" + params.timeWindow : \"\";\n\n                url += (params.ipVersion) ? \"&ip_version=\" + params.ipVersion : \"\";\n                url += (params.isTcp) ? \"&is_tcp=\" + params.isTcp : \"\";\n\n                url += (env.maxNumberOfCellsPerRow) ? \"&max_samples_per_row=\" + env.maxNumberOfCellsPerRow : \"\";\n                url += (this.maxNumberOfCells) ? \"&max_samples=\" + this.maxNumberOfCells : \"\";\n            }\n\n            //if (env.stats) url += \"&stats=\" +  env.stats;\n            return url;\n        };\n\n        /**\n         * It is strongly dedicated to a particular data-api.\n         * From top to bottom: given some data-api valid parameters, it provides a method to connect to the data-api and query for that parameters.\n         * From bottom to top: provides the raw JSON to the received callback.\n         *\n         * @method retrieveData\n         * @param {Object} params A parameters vector valid for the data-api\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.retrieveData = function(params, callback, context){\n            var dataUrl, externalParams;\n\n            externalParams = params;\n\n            dataUrl = this.getDataUrl(externalParams);\n\n            utils.log('Ajax call: ' + dataUrl, env.debugMode);\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache : false,\n                method : 'get',\n                timeout : config.connectionTimeout,\n\n                success: function(data){\n\n                    utils.log(\"Data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    data.type = params.type;\n                    env.lastDownload = new Date();\n\n                    data.messages = data.messages || [];\n\n                    if (firstCall && env.params.maxProbes && data[lowLevelParams.totalProbes] && env.params.maxProbes < data[lowLevelParams.totalProbes]){\n                        data.messages.push({\n                            type: \"info\", text:\n                                env.lang.probesLimitationAlert\n                                    .replace(\"%f\", env.params.maxProbes)\n                                    .replace(\"%o\", data[lowLevelParams.totalProbes])\n                        });\n                    }\n\n                    firstCall = false;\n                    callback.call(context, data);\n                },\n\n                error: function(XMLHttpRequest, textStatus, errorThrown) {\n                    var emptyDataSet;\n\n                    utils.log(\"Connection failed\", env.debugMode);\n                    emptyDataSet = {\n                        messages: [\n                            {type: \"connection-fail\", text: errorThrown}\n                        ]\n                    };\n\n                    callback.call(context, emptyDataSet);\n                }\n            });\n\n        };\n\n\n        /**\n         * Get the DNS response from the data-api\n         *\n         * @method getNativeDnsResult\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){\n            var dataUrl, xhrEnvelop, cleanXhrEnvelop;\n\n            dataUrl = utils.setParam('msm_id', msmId, nativeDnsResultDataUrl);\n            dataUrl = utils.setParam('prb_id', prbId, dataUrl);\n            dataUrl = utils.setParam('timestamp', timestamp, dataUrl);\n\n            utils.log('Retrieve native DNS data: '+ dataUrl, env.debugMode);\n\n            cleanXhrEnvelop = function(xhrEnvelop) {\n                for (var prop in xhrEnvelop) {\n                    delete xhrEnvelop[prop];\n                }\n                xhrEnvelop = null;\n            };\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache: false,\n                timeout : config.connectionTimeout,\n                success: function(data){\n                    utils.log(\"Native DNS data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    callback.call(context, data);\n\n                    // Force garbage collector\n                    for (var prop in data){\n                        delete data[prop];\n                    }\n                    data = null;\n                },\n\n                fail: function(){\n                    utils.log(\"It is not possible to retrieve native DNS data\", env.debugMode);\n                },\n                complete: cleanXhrEnvelop\n            });\n\n        };\n\n\n        /**\n         * Get the closest traceroutes data from the data-api\n         *\n         * @method getClosestTraceroutes\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){\n            var dataUrl, xhrEnvelop, cleanXhrEnvelop;\n\n            dataUrl = utils.setParam('msm_id', msmId, closesttraceroutesDataUrl);\n            dataUrl = utils.setParam('prb_id', prbId, dataUrl);\n            dataUrl = utils.setParam('timestamp', timestamp, dataUrl);\n            dataUrl = utils.setParam('surrounding', config.tracerouteSurrounding, dataUrl);\n            dataUrl = utils.setParam('render', \"false\", dataUrl);\n\n            utils.log('Retrieve traceroute data: '+ dataUrl, env.debugMode);\n\n            cleanXhrEnvelop = function(xhrEnvelop) {\n                for (var prop in xhrEnvelop) {\n                    delete xhrEnvelop[prop];\n                }\n                xhrEnvelop = null;\n            };\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache: false,\n                timeout : config.connectionTimeout,\n                success: function(data){\n                    utils.log(\"Traceroute data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    callback.call(context, data);\n\n                    // Force garbage collector\n                    for (var prop in data){\n                        delete data[prop];\n                    }\n                    data = null;\n                },\n\n                fail: function(){\n                    utils.log(\"It is not possible to retrieve traceroute data\", env.debugMode);\n                },\n\n                complete: cleanXhrEnvelop\n            });\n\n        };\n\n\n        /**\n         * Get the closest hostname.bind data from the data-api\n         *\n         * @method getClosestHostnameBind\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){\n            var dataUrl, xhrEnvelop, cleanXhrEnvelop;\n\n            dataUrl = utils.setParam('msm_id', msmId, closestNsidDataUrl);\n            dataUrl = utils.setParam('prb_id', prbId, dataUrl);\n            dataUrl = utils.setParam('timestamp', timestamp, dataUrl);\n            dataUrl = utils.setParam('surrounding', config.nsidSurrounding, dataUrl);\n            dataUrl = utils.setParam('render', \"false\", dataUrl);\n\n            utils.log('Retrieve traceroute data: '+ dataUrl, env.debugMode);\n\n            cleanXhrEnvelop = function(xhrEnvelop) {\n                for (var prop in xhrEnvelop) {\n                    delete xhrEnvelop[prop];\n                }\n                xhrEnvelop = null;\n            };\n\n            xhrEnvelop = $.ajax({\n                dataType: \"jsonp\",\n                url: dataUrl,\n                cache: false,\n                timeout : config.connectionTimeout,\n                success: function(data){\n                    utils.log(\"hostname.bind data retrieved\", env.debugMode);\n\n                    if (env.debugMode){\n                        env.lastDownloadBytes = utils.objectSize(data);\n                        env.downoadedBytes += env.lastDownloadBytes;\n                    }\n\n                    callback.call(context, data);\n\n                    // Force garbage collector\n                    for (var prop in data){\n                        delete data[prop];\n                    }\n                    data = null;\n                },\n\n                fail: function(){\n                    utils.log(\"It is not possible to retrieve hostname.bind data\", env.debugMode);\n                },\n\n                complete: cleanXhrEnvelop\n            });\n        };\n    };\n\n    return Connector;\n});\n\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:27 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine('dnsmon.connector.atlas.error-handler',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.connector.atlas.rest\"\n], function(utils, $, Connector){\n\n    /**\n     * ErrorsHandlerConnectorAtlas checks the validity of the JSON input and handle errors raised by the data-api.\n     *\n     * @class ErrorsHandlerConnectorAtlas\n     * @constructor\n     * @module connector.Atlas\n     */\n\n    var ErrorsHandlerConnectorAtlas = function(env){\n        var connector, errorsNomenclature, responsivenessTimer, lastRequestWorkingParams,\n            restoringAttempt, config, firstConnection;\n\n        connector = new Connector(env);\n        config = env.config;\n        firstConnection = true;\n\n        this.globalErrorState = 0; // 0 - No error\n\n        errorsNomenclature = {\n            messages: \"messages\",\n\n            message: {\n                text: \"text\",\n                type: \"type\"\n            }\n        };\n\n        /**\n         * From bottom to top: check the JSON validity and handles the error raised by the data-api.\n         *\n         * @method retrieveData\n         * @param {Object} params A params vector\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.retrieveData = function(params, callback, context){\n\n            this.globalErrorState = 0; // Reset the global error state\n\n            this._responsivenessCheck();\n\n            connector.retrieveData(params,\n                function(data){\n\n                    clearTimeout(responsivenessTimer);\n\n                    this._handleDataApiErrors(data); // This can change the global error state\n\n                    if (this.globalErrorState < 3){ // retry still active\n\n                        if (this.globalErrorState <= 1){ //If there are no blocking errors\n\n                            if (this._checkDataFormat(data)){ //If the json format is correct\n\n                                if (this._checkAllFields(data, [\"probes\"]) || this._checkAllFields(data, [\"servers\"])){\n                                    lastRequestWorkingParams = utils.lightClone(params); // Store last working request\n                                    firstConnection = false;\n\n                                    callback.call(context, data);\n                                } else {\n\n                                    this._handle(\"error\", env.lang.emptyDataset);\n                                    env.mainView.loadingImage(false);\n\n                                }\n\n                            }else{ //If the json format is malformed\n\n                                this._handle(\"error\", env.lang.malformedDataset);\n                                env.mainView.loadingImage(false);\n\n                            }\n\n                        }else { // There is at least one blocking error\n\n                            this.globalErrorState = 0; // Reset it for the next error\n\n                            if (env.isUpdatedPeriodicallyActive == false) { // Network error with auto-update disabled\n                                this._tryToReconnect(params, callback, context);\n                            } else {\n                                env.mainView.showMessage(env.lang.lastQueryFails);\n                            }\n                        }\n                    }\n\n                }, this);\n\n        };\n\n\n        /**\n         * This method tries to reconnect to the server in case of failures and provides a feedback to the user.\n         *\n         * @method _tryToReconnect\n         * @private\n         * @param {Object} params A params vector\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this._tryToReconnect = function(params, callback, context){\n            var $this;\n\n            $this = this;\n            setTimeout(function(){\n\n                env.mainView.showMessage(env.lang.waitingConnection);\n\n                utils.log('Try to reconnect', env.debugMode);\n                $this.retrieveData(params, callback, context);\n\n            }, config.reconnectionInterval);\n\n        };\n\n\n        /**\n         * This method tries to restore the previous working query in case of failures and provides a feedback to the user.\n         *\n         * @method _restorePreviousWorkingQuery\n         * @private\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this._restorePreviousWorkingQuery = function(callback, context){\n            utils.log('Try to restore the previous situation', env.debugMode);\n\n            env.params = lastRequestWorkingParams;\n            connector.retrieveData(lastRequestWorkingParams, callback, context);\n        };\n\n\n        /**\n         * This method dispatches to _handle all the data-api errors\n         *\n         * @method _handleDataApiErrors\n         * @private\n         * @param {Object} data The data blob retrieved from the data-api\n         */\n\n        this._handleDataApiErrors = function(data){\n            var errorsTmp, errorTmp, errorNomenclature;\n            errorsTmp = data[errorsNomenclature.messages];\n\n            if (errorsTmp){\n                errorNomenclature = errorsNomenclature.message;\n\n                for (var n=0,length=errorsTmp.length; n<length && this.globalErrorState <3; n++){\n                    errorTmp = errorsTmp[n];\n                    this._handle(errorTmp[errorNomenclature.type], errorTmp[errorNomenclature.text]);\n                    env.mainView.loadingImage(false);\n                }\n            }\n        };\n\n\n        /**\n         * It provides a different method to handle each error raised from the data-api.\n         *\n         * @method _handle\n         * @private\n         * @param {String} type A string representing the type of the error\n         * @param {String} text A string describing the error\n         */\n\n        this._handle = function(type, text){\n            switch(type){\n\n                case \"connection-fail\":\n                    env.mainView.showMessage(env.lang.connectionFailed);\n                    this._setGlobalErrorState(2); // 2 - Blocking error, retry\n                    break;\n\n                case \"error\":\n                    env.mainView.showMessage(text);\n                    this._setGlobalErrorState(3); // 3 - Blocking error, no retry\n                    break;\n\n                case \"info\":\n                    env.mainView.showMessage(text);\n                    this._setGlobalErrorState(1); // 1 - The show must go on\n                    break;\n            }\n        };\n\n\n        /**\n         * This method sets the global error state.\n         * A global error is a blocking error that can not be handled by other components of the tool\n         *\n         * @method _setGlobalErrorState\n         * @private\n         * @param {Number} errorLevel An integer representing the current error state\n         */\n\n        this._setGlobalErrorState = function(errorLevel){\n            this.globalErrorState = errorLevel;\n        };\n\n\n        /**\n         * It checks if the retrieved JSON contains all the mandatory fields for all the possible views.\n         *\n         * @method _checkDataFormat\n         * @private\n         * @return {Boolean} Returns true on success\n         */\n        this._checkDataFormat = function(data){\n            var requiredFields;\n\n            requiredFields = {};\n\n            requiredFields[\"zone-servers\"] = [\"start_time\", \"end_time\", \"earliest_available\", \"latest_available\", \"aggregation\", \"aggregation_levels\", \"native_available\", \"group\"];\n            requiredFields[\"server-probes\"] = [\"start_time\", \"end_time\", \"earliest_available\", \"latest_available\", \"aggregation\", \"aggregation_levels\", \"native_available\", \"group\", \"server\"];\n\n\n            return this._checkAllFields(data, requiredFields[\"zone-servers\"]) || this._checkAllFields(data, requiredFields[\"server-probes\"]);\n        };\n\n\n        /**\n         * It checks if the retrieved JSON contains all the mandatory fields.\n         *\n         * @method _checkAllFields\n         * @private\n         * @return {Boolean} Returns true on success\n         */\n        this._checkAllFields = function(data, list){\n            for (var n=0,length=list.length; n<length; n++){\n                if (!this._checkField(data, list[n])){\n                    return false;\n                }\n            }\n\n            return true;\n        };\n\n\n        /**\n         * It checks if the retrieved JSON contains a certain mandatory field.\n         *\n         * @method _checkField\n         * @private\n         * @return {Boolean} Returns true on success\n         */\n        this._checkField = function(data, field){\n            var item, presence, emptiness, result;\n\n            item = data[field];\n\n            presence = (item != null);\n            emptiness = ($.isArray(item)) ? (item.length > 0) : (item !== \"\");\n            result = presence && emptiness;\n\n            if (!result){\n                utils.log(field + ': ' + (presence && emptiness) , env.debugMode);\n            }\n            return result;\n        };\n\n\n        /**\n         * It checks the responsiveness of the data-api to provide a feedback to the user.\n         *\n         * @method _responsivenessCheck\n         * @private\n         */\n\n        this._responsivenessCheck = function(){\n            var $this = this;\n\n            responsivenessTimer = setTimeout(function(){\n                $this._handle.call($this, \"info\", env.lang.serverSlowMessage);\n            }, 7 * 1000);\n        };\n\n\n        /**\n         * Get the human readable version of the DNS response and check errors\n         *\n         * @method getNativeDnsResult\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n            // No errors checks for now\n            connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n        };\n\n\n        /**\n         * Get the closest traceroutes and checks errors\n         *\n         * @method getClosestTraceroutes\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n            // No errors checks for now\n            connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n        };\n\n\n        /**\n         * Get the closest hostname.bind and checks errors\n         *\n         * @method getClosestHostnameBind\n         * @param {Number} msmId The id of the measurement\n         * @param {Number} prbId The id of the probe\n         * @param {Number} timestamp A UNIX timestamp\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n            // No errors checks for now\n            connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n        };\n\n    };\n\n    return ErrorsHandlerConnectorAtlas;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/17/13\n * Time: 11:35 AM\n * To change this template use File | Settings | File Templates.\n */\n\n\n\n// Coupled with the model layer\n\ndefine(\n    'dnsmon.connector.atlas.isolation-level',[\n        \"dnsmon.env.utils\",\n        \"dnsmon.env.params-manager\",\n        \"dnsmon.model.cell\",\n        \"dnsmon.model.row\",\n        \"dnsmon.connector.atlas.cache\",\n        \"dnsmon.lib.atlas-traceroute-printer\"\n    ],\n    function(utils, paramsManager, Cell, Row, Connector){\n\n        /**\n         * IsolationLevelConnectorAtlas has a fundamental role providing isolation between the internal input format\n         * and the external input format. It allows to block the propagation of changes affecting the JSON format\n         * provided by the data-api. In addition it is a transposition level between a format convenient for the\n         * data-api (e.g. light data data format) and a format convenient for the tool (e.g. less computation format).\n         *\n         * @class IsolationLevelConnectorAtlas\n         * @constructor\n         * @module connector.Atlas\n         */\n\n        var IsolationLevelConnectorAtlas = function(env) {\n\n            var connector, dataNomenclatureMapping, maxUsedDate, minUsedDate, crowdestRow, config, originalTime, dataPool;\n\n            connector = new Connector(env);\n            config = env.config;\n\n            dataPool = {\n                cells: {},\n                rows: {}\n            };\n\n            dataNomenclatureMapping = {\n                startTimestamp: \"start_time\",\n                endTimestamp: \"end_time\",\n                aggregationLevel: \"aggregation\",\n                probesList: \"probes\",\n                serversList: \"servers\",\n                isOngoing: \"active\",\n\n                aggregationLevels: \"aggregation_levels\",\n                measurementStartTime: \"earliest_available\",\n                measurementEndTime: \"latest_available\",\n                aggregationLabel: \"aggregation_label\",\n                nativeAvailable: \"native_available\",\n\n                singleZone: \"group\",\n                singleServer: \"server\",\n\n                zone: {\n                    id: \"id\",\n                    label: \"label\",\n                    description: \"description\",\n                    isOngoing: \"active\"\n                },\n\n                server: {\n                    id: \"id\",\n                    hostname: \"hostname\",\n                    resultsList: \"results\",\n                    ipVersion: \"ip_version\",\n                    ipAddress: \"ip_address\",\n                    label: \"label\",\n                    url: \"url\",\n                    description: \"description\",\n                    urlsMap: \"atlas_measurements\"\n                },\n\n                urlItem: {\n                    typeId: \"type\",\n                    label: \"type_label\",\n                    overviewUrl: \"overview_url\",\n                    dataUrl: \"result_url\",\n                    measurementId: \"msm_id\",\n                    currentDatasource: \"data_source\",\n                    samplingFrequency: \"interval\"\n                },\n\n                probe: {\n                    id: \"id\",\n                    country: \"country\",\n                    label: \"label\",\n                    url: \"url\",\n                    description: \"description\",\n                    hostname: \"hostname\",\n                    resultsList: \"results\"\n                },\n\n                result: {\n                    respondingTime: \"rtt50\",\n                    packetSent: \"queries\",\n                    packetReceived: \"replies\",\n                    time: \"time\",\n                    endTime: \"end_time\",\n                    errors: \"errors\"\n                },\n\n                managedRcodes: [\"ServFail\", \"NXDomain\", \"Refused\"]\n            };\n\n\n            /**\n             * It is strongly related to a particular JSON format.\n             * From top to bottom: uses paramsManager to translate the internal format of the parameters in the format valid outside.\n             * From bottom to top: translates the external input data in the internal format.\n             *\n             * @method retrieveData\n             * @param {Object} params A params vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function (params, callback, context) {\n\n                params = this._parseParams(params); //Translates the internal format of the parameters in the format valid outside\n\n                //Just an indirection for now\n                connector.retrieveData(params, function (data) {\n                    this._freeMemoryOnPool();\n                    var wrappedData = this._parseData(data);\n\n//                    // Force garbage collector\n//                    for (var prop in data){\n//                        delete data[prop];\n//                    }\n//                    data = null;\n\n                    callback.call(context, wrappedData); // Back to the normal data flow\n\n                }, this); // Data callback context\n            };\n\n\n            /**\n             * This method translates parameters from the internal to the external format\n             *\n             * @method _parseParams\n             * @param {Object} params A params vector\n             * @return {Object} A params vector in the internal format\n             */\n            this._parseParams = function (params) {\n                return paramsManager.fromInternalToExternal(params);\n            };\n\n\n            /**\n             * This method translates a server from the external to the internal format\n             *\n             * @method _parseSingleServer\n             * @param {Object} server A server described in the external format\n             * @return {Object} A server described in the internal format\n             */\n\n            this._parseSingleServer = function (server) {\n                var serverNomenclature, serverObj;\n\n                serverNomenclature = dataNomenclatureMapping.server;\n                serverObj = {\n                    id: paramsManager.convertRemoteToLocalId(server[serverNomenclature.id]),\n                    label: server[serverNomenclature.label] || server[serverNomenclature.hostname] + ' ' + ((server[serverNomenclature.ipVersion] == 4) ? 'IPv4' : 'IPv6'),\n                    description: server[serverNomenclature.description],\n                    urlsMap: this._generateJsonUrls(server[serverNomenclature.urlsMap])\n                };\n\n                return serverObj;\n            };\n\n\n            /**\n             * This method translates a zone from the external to the internal format\n             *\n             * @method _parseSingleServer\n             * @param {Object} zone A zone described in the external format\n             * @return {Object} A zone described in the internal format\n             */\n\n            this._parseZone = function (zone) {\n                var zoneNomenclature, zoneObj;\n\n                zoneNomenclature = dataNomenclatureMapping.zone;\n                zoneObj = {\n                    id: utils.htmlEncode(paramsManager.convertRemoteToLocalId(zone[zoneNomenclature.id])),\n                    label: utils.htmlEncode(zone[zoneNomenclature.label])\n                };\n\n                env.isOngoing = zone[zoneNomenclature.isOngoing];\n\n                return zoneObj;\n            };\n\n\n            /**\n             * This method initialises the parsing of the input JSON\n             *\n             * @method _parseData\n             * @private\n             * @param {Object} data The external data structure\n             * @return {Object} The internal data structure\n             */\n\n            this._parseData = function (data) {\n                var envelop;\n\n                maxUsedDate = null;\n                minUsedDate = null;\n\n                crowdestRow = {cells: []};\n\n                originalTime = {\n                    start: data[dataNomenclatureMapping.startTimestamp],\n                    end: data[dataNomenclatureMapping.endTimestamp]\n                };\n\n                envelop = { // Creates the internal data structure\n                    startDate: paramsManager.convertRemoteToLocalDate(originalTime.start),\n                    endDate: paramsManager.convertRemoteToLocalDate(originalTime.end),\n                    rows: [],\n                    cells: [],\n                    group: null\n                };\n\n                // Synchronizes the internal parameters with those returned\n                env.params.startDate = envelop.startDate;\n                env.params.endDate = envelop.endDate;\n\n                env.retrievedAggregationLevel = data[dataNomenclatureMapping.aggregationLevel];\n\n                if (data.type == \"server-probes\") { // Different parser based on data.type\n\n                    envelop.group = this._parseSingleServer(data[dataNomenclatureMapping.singleServer]);\n                    envelop.root = this._parseZone(data[dataNomenclatureMapping.singleZone]);\n                    this._parseProbes(data[dataNomenclatureMapping.probesList], envelop);\n\n                } else if (data.type == \"zone-servers\") {\n\n                    envelop.group = this._parseZone(data[dataNomenclatureMapping.singleZone]);\n                    this._parseServers(data[dataNomenclatureMapping.serversList], envelop);\n\n                } else {\n                    console.log(\"Malformed json!\");\n                }\n\n                envelop.maxUsedDate = maxUsedDate;\n                envelop.minUsedDate = minUsedDate;\n\n\n                // Computes some internal parameters\n                env.aggregationLevels = data[dataNomenclatureMapping.aggregationLevels];\n                env.minAggregation = env.aggregationLevels[0];\n                env.maxAggregation = env.aggregationLevels[env.aggregationLevels.length - 1];\n                env.measurementStartTime = paramsManager.convertRemoteToLocalDate(data[dataNomenclatureMapping.measurementStartTime]);\n                env.measurementEndTime = paramsManager.convertRemoteToLocalDate(data[dataNomenclatureMapping.measurementEndTime]);\n\n                env.aggregationLabel = data[dataNomenclatureMapping.aggregationLabel];\n                env.isNativeAvailable = data[dataNomenclatureMapping.nativeAvailable];\n\n                envelop.usedTimeWindowSeconds = Math.ceil((maxUsedDate - minUsedDate) / 1000);\n                env.timeWindowSeconds = Math.ceil((env.params.endDate - env.params.startDate) / 1000);\n                envelop.crowdestRow = crowdestRow;\n\n                if (minUsedDate < env.params.startDate) {\n                    utils.log('Warning: an element retrieved is before the start date', env.debugMode);\n                }\n\n                return envelop;\n            };\n\n\n            /**\n             * Parses all the servers available in the JSON in order to create an internal compatible version of them\n             *\n             * @method _parseServers\n             * @private\n             * @param {Object} servers A list of server\n             */\n\n            this._parseServers = function (servers, envelop) {\n                var row, rowId, rowLabel, objRow, serverNomenclature, rowResults, rowGroup, rowIpVersion,\n                    rowDescription, externalId, rowHostname, rowIp, multipleLabels, rowUrl;\n\n                serverNomenclature = dataNomenclatureMapping.server;\n                multipleLabels = {};\n\n                for (var n = 0, length = servers.length; n < length; n++) { // For all the servers\n                    row = servers[n];\n\n                    externalId = row[serverNomenclature.id];\n                    rowId = paramsManager.convertRemoteToLocalId(externalId);\n                    rowResults = row[serverNomenclature.resultsList] || [];\n\n                    if (!dataPool.rows[rowId]) {\n\n                        rowHostname = row[serverNomenclature.hostname];\n                        rowGroup = rowHostname; // Grouped by host name\n                        rowUrl = row[serverNomenclature.url];\n\n                        rowIpVersion = parseInt(row[serverNomenclature.ipVersion]);\n                        rowIp = utils.htmlEncode(row[serverNomenclature.ipAddress]);\n\n                        rowDescription = utils.htmlEncode(row[serverNomenclature.description]) || rowIp + ' (' + rowHostname + ')';\n\n                        rowLabel = utils.htmlEncode(row[serverNomenclature.label]) || this._abbreviateLabel(rowHostname) + ' ' + ((rowIpVersion == 4) ? 'IPv4' : 'IPv6');\n\n                        if (multipleLabels[rowLabel]) {\n                            multipleLabels[rowLabel]++;\n                            rowLabel += '(' + multipleLabels[rowLabel] + ')';\n                        } else {\n                            multipleLabels[rowLabel] = 1;\n                        }\n\n                        objRow = new Row(rowId, rowLabel); // Create a row object of the model layer\n                        objRow.group = rowGroup;\n                        objRow.url = rowUrl;\n                        objRow.internalOrder = rowIpVersion;\n                        objRow.description = rowDescription;\n                        objRow.minimumResponseTime = null;\n                        objRow.___externalId___ = externalId;\n                        objRow.___type___ = \"server\";\n\n                        objRow.urlsMap = this._generateJsonUrls(row[serverNomenclature.urlsMap]); // Get additional data-api URLs\n\n                        dataPool.rows[rowId] = objRow;\n                    }\n\n                    envelop.rows.push(dataPool.rows[rowId]);\n                    dataPool.rows[rowId].minimumResponseTime = null;\n                    dataPool.rows[rowId].cells = [];\n                    dataPool.rows[rowId][\"__inuse__\"] = true;\n\n                    this._parseResults(rowResults, dataPool.rows[rowId], envelop); // Parse all the results for this row\n                }\n\n            };\n\n\n            /**\n             * This method translates the URLs of additional data-api reported in the JSON in the internal format\n             *\n             * @method _generateJsonUrls\n             * @private\n             * @param {Object} urlsMap A map of URLs\n             * @return {Object} A map of URLs translated in the internal format\n             */\n\n            this._generateJsonUrls = function (urlsMap) {\n                var jsonOverviewUrls, jsonSampleUrls, dataUrl, overviewUrl, label, nomenclatureUrlMap, mapUrlItem,\n                    current, measurementId, typeId, samplingFrequency;\n\n                jsonOverviewUrls = [];\n                jsonSampleUrls = [];\n                nomenclatureUrlMap = dataNomenclatureMapping.urlItem;\n\n                for (var n = 0, length = urlsMap.length; n < length; n++) {\n\n                    mapUrlItem = urlsMap[n];\n                    label = mapUrlItem[nomenclatureUrlMap.label];\n                    overviewUrl = mapUrlItem[nomenclatureUrlMap.overviewUrl];\n                    dataUrl = mapUrlItem[nomenclatureUrlMap.dataUrl];\n                    measurementId = mapUrlItem[nomenclatureUrlMap.measurementId];\n                    typeId = mapUrlItem[nomenclatureUrlMap.typeId];\n                    current = (mapUrlItem[nomenclatureUrlMap.currentDatasource] == true);\n\n                    samplingFrequency = mapUrlItem[nomenclatureUrlMap.samplingFrequency];\n\n                    if (current) {\n                        env.samplingFrequency = samplingFrequency;\n                    }\n\n                    if (typeId != 3) {\n                        jsonOverviewUrls.push({type: typeId, label: utils.htmlEncode(label), url: overviewUrl, current: current, measurementId: measurementId, samplingFrequency: samplingFrequency});\n                        jsonSampleUrls.push({type: typeId, label: utils.htmlEncode(label), url: dataUrl, current: current, measurementId: measurementId, samplingFrequency: samplingFrequency});\n                    }\n                }\n\n                return {sample: jsonSampleUrls, overview: jsonOverviewUrls};\n            };\n\n\n            /**\n             * This method abbreviates the labels for IPv6 addresses\n             *\n             * @method _abbreviateIPv6Label\n             * @private\n             * @param {String} label An IP address\n             */\n\n            this._abbreviateIPv6Label = function (label) {\n                var blocks, fullBlocks, blockTmp, resultBlocksHead, resultBlocksTail, labelOut;\n\n                fullBlocks = [];\n                resultBlocksHead = [];\n                resultBlocksTail = [];\n                blocks = label.split(\":\");\n\n                for (var n = 0, length = blocks.length; n < length; n++) {\n                    blockTmp = blocks[n];\n                    if (blockTmp != \"\") {\n                        fullBlocks.push(blockTmp);\n                    }\n                }\n\n                if (fullBlocks.length > 4) {\n                    resultBlocksHead.push(fullBlocks[0]);\n                    resultBlocksHead.push(fullBlocks[1]);\n\n                    resultBlocksTail.push(fullBlocks[fullBlocks.length - 2]);\n                    resultBlocksTail.push(fullBlocks[fullBlocks.length - 1]);\n\n                    labelOut = utils.join(resultBlocksHead, \":\") + \":..:\" + utils.join(resultBlocksTail, \":\");\n                } else {\n                    labelOut = label;\n                }\n\n                return labelOut;\n\n            };\n\n\n            /**\n             * This method abbreviates the labels\n             *\n             * @method _abbreviateLabel\n             * @private\n             * @param {String} label A label\n             */\n\n            this._abbreviateLabel = function (label) {\n                var stringOut, firstPart, secondPart, startSecondPart, length;\n\n                length = label.length;\n                if (length >= config.maxYLabelLength) {\n                    startSecondPart = length - 4;\n\n                    firstPart = (label.charAt(7) != '.') ? label.substring(0, 8) : label.substring(0, 7);\n                    secondPart = (label.charAt(startSecondPart) != '.') ? label.substring(startSecondPart, length) : label.substring(startSecondPart + 1, length);\n\n                    stringOut = firstPart + '...' + secondPart;\n                } else {\n                    stringOut = label;\n                }\n\n                return stringOut;\n            };\n\n            this._freeMemoryOnPool = function(){\n\n                for (var row in dataPool.rows){\n                    if (dataPool.rows[row][\"__inuse__\"] == false){\n                        delete dataPool.rows[row];\n                    } else {\n                        dataPool.rows[row][\"__inuse__\"] = false;\n                    }\n                }\n\n                for (var cell in dataPool.cells){\n                    if (dataPool.cells[cell][\"__inuse__\"] == false){\n                        delete dataPool.cells[cell];\n                    } else {\n                        dataPool.cells[cell][\"__inuse__\"] = false;\n                    }\n                }\n            };\n\n\n            /**\n             * Parses all the probes available in the JSON in order to create an internal compatible version of them\n             *\n             * @method _parseProbes\n             * @private\n             * @param {Object} probes A list of probes\n             */\n\n            this._parseProbes = function (probes, envelop) {\n                var row, rowId, rowLabel, objRow, probeNomenclature, rowResults, rowGroup,\n                    rowDescription, externalId, rowCountry, rowHostname, rowUrl;\n\n                probeNomenclature = dataNomenclatureMapping.probe;\n\n                for (var n = 0, length = probes.length; n < length; n++) {\n                    row = probes[n];\n\n                    externalId = row[probeNomenclature.id];\n\n                    rowId = paramsManager.convertRemoteToLocalId(externalId);\n                    rowResults = row[probeNomenclature.resultsList] || [];\n\n                    if (!dataPool.rows[rowId]) {\n\n                        rowCountry = row[probeNomenclature.country];\n                        rowHostname = row[probeNomenclature.hostname];\n                        rowUrl = row[probeNomenclature.url];\n                        rowGroup = rowCountry;\n                        rowLabel = row[probeNomenclature.label] || rowHostname + ' (' + rowCountry + ')';\n                        rowDescription = row[probeNomenclature.description] || rowHostname;\n\n\n                        objRow = new Row(rowId, rowLabel);\n                        //Label modified for now\n                        objRow.group = rowGroup;\n                        objRow.url = rowUrl;\n                        objRow.internalOrder = rowId;\n                        objRow.description = rowDescription;\n                        objRow.___externalId___ = externalId;\n                        objRow.___type___ = \"probe\";\n                        objRow.urlsMap = envelop.group.urlsMap;\n\n                        dataPool.rows[rowId] = objRow;\n\n                    }\n\n                    envelop.rows.push(dataPool.rows[rowId]);\n                    dataPool.rows[rowId].minimumResponseTime = null;\n                    dataPool.rows[rowId].cells = [];\n                    dataPool.rows[rowId][\"__inuse__\"] = true;\n\n                    this._parseResults(rowResults, dataPool.rows[rowId], envelop);\n                }\n\n            };\n\n\n            /**\n             * Parses all results retrieved in the JSON for the current row\n             *\n             * @method _parseResults\n             * @private\n             * @param {Object} results A list of results\n             * @param {Object} row An object of the model layer representing the row\n             */\n\n            this._parseResults = function (results, row, envelop) {\n                var cell, objCell, cellResponseTime, cellTime, resultNomenclature, cellLoss, cellTimeEnd,\n                    startTimestamp, endTimestamp, cellKey;\n\n                resultNomenclature = dataNomenclatureMapping.result; // Get the nomenclature for a result item\n\n                for (var n = 0, length = results.length; n < length; n++) { // Iterate an all the results\n                    cell = results[n];\n\n                    startTimestamp = cell[resultNomenclature.time];\n                    endTimestamp = cell[resultNomenclature.endTime];\n\n                    cellTime = paramsManager.convertRemoteToLocalDate(startTimestamp); // The start time MUST be every time specified by the server\n\n                    if (endTimestamp) { // The end time is specified by the server\n\n                        cellTimeEnd = paramsManager.convertRemoteToLocalDate(endTimestamp);\n\n                    } else {\n\n                        if (env.retrievedAggregationLevel != 0) { // It is an aggregation, so every single cell is representing a period with start and end time\n\n                            cellTimeEnd = paramsManager.convertRemoteToLocalDate(startTimestamp + env.retrievedAggregationLevel); // Computes the end time\n\n                        } else { // It is a sample with just startTime\n\n                            cellTimeEnd = null;\n\n                        }\n                    }\n\n                    cellResponseTime = this._computeRespondingTime(cell);\n                    cellLoss = this._computePacketLoss(cell);\n\n                    if (maxUsedDate == null) {\n                        maxUsedDate = cellTime;\n                        minUsedDate = cellTime;\n                    } else {\n                        maxUsedDate = (maxUsedDate > cellTime) ? maxUsedDate : cellTime;\n                        minUsedDate = (minUsedDate < cellTime) ? minUsedDate : cellTime;\n                    }\n\n                    cellKey = row.id + '' + cellTime.getTime();\n                    if (!dataPool.cells[cellKey]) {\n                        dataPool.cells[cellKey] = new Cell(row, cellTime); // Create a new object of the model layer\n                    }\n\n                    objCell = dataPool.cells[cellKey];\n                    objCell.optional = {}; // Remove optional attributes\n                    this._parseRcodes(objCell, cell);\n                    objCell.endTime = cellTimeEnd;\n                    objCell.respondingTime = cellResponseTime;\n                    objCell.loss = cellLoss;\n                    objCell.sent = cell[dataNomenclatureMapping.result.packetSent];\n\n                    row.cells.push(dataPool.cells[cellKey]);\n                    envelop.cells.push(dataPool.cells[cellKey]);\n\n                    objCell.__inuse__ = true;\n\n                    if (cellResponseTime != null) {\n                        row.minimumResponseTime = ((row.minimumResponseTime == null || row.minimumResponseTime > cellResponseTime) ? cellResponseTime : row.minimumResponseTime);\n                    }\n                    crowdestRow = (row.cells.length > crowdestRow.cells.length) ? row : crowdestRow;\n                }\n            };\n\n            /**\n             * Enriches the cell object of the model layer with the rcodes error retrieved in the JSON for the conresponding result\n             *\n             * @method _parseRcodes\n             * @private\n             * @param {Object} cell An object of the model layer\n             * @param {Object} cellData A result/cell of the JSON input\n             */\n\n            this._parseRcodes = function (cell, cellData) {\n                var errorsData, importantErrors, others, totalNumber, cellError, numberOfErrorsOfThisType;\n\n                others = 0;\n                totalNumber = 0;\n                importantErrors = dataNomenclatureMapping.managedRcodes;\n                errorsData = cellData[dataNomenclatureMapping.result.errors];\n                cellError = {};\n\n                for (var errorName in errorsData) {\n\n                    if (utils.indexOf(errorName, importantErrors)) {\n                        numberOfErrorsOfThisType = errorsData[errorName];\n                        totalNumber += numberOfErrorsOfThisType;\n                        cellError[errorName] = numberOfErrorsOfThisType;\n                    } else {\n                        totalNumber++;\n                        others++;\n                    }\n                    cellError[\"others\"] = others;\n                }\n\n                cell.errors = cellError;\n                cell.numberCorrectResponses = this._computeNumberCorrectResponses(cellData, totalNumber);\n            };\n\n\n            /**\n             * Computes the percentage of correct responses\n             *\n             * @method _computeNumberCorrectResponses\n             * @private\n             * @param {Object} cellData A result/cell of the JSON input\n             * @return {Number} Returns a percentage\n             */\n\n            this._computeNumberCorrectResponses = function (cellData, numberOfErrors) {\n                var packetLoss, packetLossPercentage, packetSent, packetReceived;\n\n                packetSent = cellData[dataNomenclatureMapping.result.packetSent];\n                packetReceived = cellData[dataNomenclatureMapping.result.packetReceived];\n\n                if (packetSent != null && packetReceived != null) {\n                    packetLoss = packetSent - (packetReceived - numberOfErrors);\n                    packetLossPercentage = (100 / packetSent) * packetLoss;\n                    packetLossPercentage = packetLossPercentage.toFixed(2);\n                }\n\n                return packetLossPercentage;\n            };\n\n            /**\n             * Computes the unanswered queries of a cell/result\n             *\n             * @method _computePacketLoss\n             * @private\n             * @param {Object} cellData A result/cell of the JSON input\n             * @return {float} Returns a percentage\n             */\n\n            this._computePacketLoss = function (cellData) {\n                var packetLoss, packetLossPercentage, packetSent, packetReceived;\n\n                packetSent = cellData[dataNomenclatureMapping.result.packetSent];\n                packetReceived = cellData[dataNomenclatureMapping.result.packetReceived];\n\n                if (packetSent != null && packetReceived != null) {\n                    packetLoss = packetSent - packetReceived;\n                    packetLossPercentage = (100 / packetSent) * packetLoss;\n                    packetLossPercentage = packetLossPercentage.toFixed(2);\n                }\n\n                return packetLossPercentage;\n            };\n\n\n            /**\n             * Computes the RTT of a cell/result\n             *\n             * @method _computeRespondingTime\n             * @private\n             * @param {Object} cellData A result/cell of the JSON input\n             * @return {Number} Returns a RTT value\n             */\n            this._computeRespondingTime = function (cellData) {\n                var rtt, resultNomenclature;\n\n                resultNomenclature = dataNomenclatureMapping.result;\n                rtt = cellData[resultNomenclature.respondingTime];\n\n                return (rtt != null) ? parseFloat(rtt).toFixed(2) : null;\n            };\n\n\n            /**\n             * Get the DNS response data and translates it in an internal stable format\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function (msmId, prbId, timestamp, callback, context) {\n                var nomenclatureDnsResponse;\n\n                nomenclatureDnsResponse = {\n                    probeId: \"prb_id\",\n                    responseTime: \"rt\",\n                    nsId: \"nsid\",\n                    date: \"timestamp\",\n                    response: \"answer\",\n                    error: \"error\"\n                };\n\n                connector.getNativeDnsResult(msmId, prbId, timestamp, function (data) {\n                    var internalResponse, newData, dataItem;\n\n                    newData = [];\n\n                    for (var n = 0, length = data.length; n < length; n++) {\n                        dataItem = data[n];\n\n                        internalResponse = { // Translate to internal object\n                            probeId: dataItem[nomenclatureDnsResponse.probeId],\n                            responseTime: dataItem[nomenclatureDnsResponse.responseTime] || \"NA\",\n                            date: paramsManager.convertRemoteToLocalDate(dataItem[nomenclatureDnsResponse.date]),\n                            nsId: utils.htmlEncode(dataItem[nomenclatureDnsResponse.nsId]),\n                            response: utils.htmlEncode(dataItem[nomenclatureDnsResponse.response]),\n                            error: utils.htmlEncode(dataItem[nomenclatureDnsResponse.error])\n                        };\n\n                        newData.push(internalResponse);\n                    }\n\n                    callback.call(context, newData);\n                }, this);\n            };\n\n\n            /**\n             * Get the closest traceroutes data and translates it in an internal stable format\n             *\n             * @method getClosestTraceroutes\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestTraceroutes = function (msmId, prbId, timestamp, callback, context) {\n                var tracerouteAtlas;\n\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, function (data) {\n                    var newData;\n\n                    newData = [];\n\n                    for (var n = 0, length = data.length; n < length; n++) {\n                        tracerouteAtlas = new AtlasTraceroute(data[n]);\n                        tracerouteAtlas.renderTimestring = function (timestamp) {\n                            return '>>> ' + utils.dateToString(utils.timestampToLocalDate(timestamp));\n                        };\n\n                        newData.push(tracerouteAtlas.render());\n                    }\n\n                    callback.call(context, newData);\n                }, this);\n            };\n\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function (msmId, prbId, timestamp, callback, context) { // Just indirection for now\n                var internalResponse, newData, dataItem, nomenclatureHostnameBindResponse;\n\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, function (data) {\n                    newData = [];\n                    nomenclatureHostnameBindResponse = {\n                        probeId: \"prb_id\",\n                        responseTime: \"rt\",\n                        msmId: \"msm_id\",\n                        date: \"timestamp\",\n                        response: \"answer\",\n                        error: \"error\"\n                    };\n\n                    for (var n=0,length=data.length; n<length; n++) {\n                        dataItem = data[n];\n\n                        internalResponse = { // Translate to internal object\n                            probeId: dataItem[nomenclatureHostnameBindResponse.probeId],\n                            responseTime: dataItem[nomenclatureHostnameBindResponse.responseTime] || \"NA\",\n                            date: paramsManager.convertRemoteToLocalDate(dataItem[nomenclatureHostnameBindResponse.date]),\n                            msmId: dataItem[nomenclatureHostnameBindResponse.msmId],\n                            response: utils.htmlEncode(dataItem[nomenclatureHostnameBindResponse.response]),\n                            error: utils.htmlEncode(dataItem[nomenclatureHostnameBindResponse.error])\n                        };\n\n                        newData.push(internalResponse);\n                    }\n\n                    callback.call(context, newData);\n                }, this);\n\n            };\n\n        };\n\n        return IsolationLevelConnectorAtlas;\n    });\n\n","/**\n * Created by mcandela on 17/12/13.\n */\n\ndefine('dnsmon.connector.aggregation-level',[\n    \"dnsmon.connector.atlas.isolation-level\"\n],\n    function(Connector){\n\n        /**\n         * AggregationLevelConnector introduces in the query all the information related to the aggregation level.\n         * It provides a transparent layer between the tool and the data implementing all the logic\n         * about the data aggregation.\n         *\n         * @class AggregationLevelConnector\n         * @constructor\n         * @module connector\n         */\n\n        var AggregationLevelConnector = function(env){\n\n            var connector, config;\n\n            config = env.config;\n            connector = new Connector(env);\n\n            /**\n             * From top to bottom: it injects information about the aggregation level.\n             * From bottom to top: it parse information about the aggregation level\n             *\n             * @method retrieveData\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it will be ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function(params, callback, context){\n                var containerWidth;\n\n                containerWidth = env.container.chart.width();\n                env.maxNumberOfCellsPerRow = Math.floor(containerWidth / (config.cellsMinWidth + config.xCellsMargin));\n\n                if (params.startDate && params.endDate && env.aggregationLevels && env.aggregationLevels.length > 0){\n                    env.aggregationLevel = this._getAggregationLevel(params);\n                }\n\n                connector.retrieveData(params, function(data){\n                    callback.call(context, data);\n                }, this);\n            };\n\n\n            this._getBestAggregationLevel = function(params){\n                var aggregationSeconds, timeInterval;\n\n                timeInterval = Math.floor((params.endDate - params.startDate) / 1000);\n                aggregationSeconds = timeInterval / env.maxNumberOfCellsPerRow;\n\n                return  (aggregationSeconds > 0) ? aggregationSeconds.toFixed(2) : 0;\n            };\n\n\n\n            this._getAggregationLevel = function(params){\n                var bestLevel, currentLevel;\n\n                if (typeof I_WANT_TO_SHOOT_ON_MY_FOOT != 'undefined'){\n                    return 0;\n                }\n\n                bestLevel = this._getBestAggregationLevel(params);\n\n                if (env.isNativeAvailable && bestLevel <= env.samplingFrequency){ // Native resolution\n                    return 0;\n                }\n\n                for (var n=0,length=env.aggregationLevels.length; n<length; n++){\n                    currentLevel = env.aggregationLevels[n];\n                    if (currentLevel >= bestLevel){\n                        break;\n                    }\n                }\n\n                return currentLevel;\n            };\n\n\n            /**\n             * Get the DNS response\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /** Get the closest traceroutes\n            *\n            * @method getClosestTraceroutes\n            * @param {Number} msmId The id of the measurement\n            * @param {Number} prbId The id of the probe\n            * @param {Number} timestamp A UNIX timestamp\n            * @param {Function} callback A function taking the retrieved data as input when it is ready\n            * @param {Object} context The context of the callback\n            */\n\n            this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            };\n\n        };\n\n        return AggregationLevelConnector;\n    });\n","    /**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 10/16/13\n * Time: 4:27 PM\n * To change this template use File | Settings | File Templates.\n */\n\ndefine(\n    'dnsmon.connector.anti-flood',[\n        \"dnsmon.connector.aggregation-level\"\n    ],\n    function(Connector){\n\n        /**\n         * AntiFloodConnector it is a layer implementing a client-side anti-flood system.\n         * This anti-flood layer allows cumulative query to the data-api reducing considerably the amount of\n         * interactions with the network stack.\n         *\n         * @class AntiFloodConnector\n         * @constructor\n         * @module connector\n         */\n\n        var AntiFloodConnector = function(env){\n\n            var connector, timeoutLoadingTimer, firstCall, config;\n\n            firstCall = true;\n            config = env.config;\n            connector = new Connector(env);\n\n            /**\n             * From top to bottom: it drops or aggregates queries.\n             * From bottom to top: it responds to the single query in the usual way.\n             *\n             * @method retrieveData\n             * @param {Object} params A parameters vector\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.retrieveData = function(params, callback, context){\n\n                if (firstCall ==  false){\n                    clearTimeout(timeoutLoadingTimer);\n                    timeoutLoadingTimer = setTimeout(\n                        function(){\n                            connector.retrieveData(params, callback, context);\n                        },\n                        config.antiFloodTimer);\n\n                    env.antiFloodTimer = null;\n                }else{\n                    firstCall =  false;\n                    connector.retrieveData(params, callback, context);\n                }\n            };\n\n\n            /** Get the DNS response\n             *\n             * @method getNativeDnsResult\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getNativeDnsResult = function(msmId, prbId, timestamp, callback, context){\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /** Get the closest traceroutes\n             *\n             * @method getClosestTraceroutes\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n            this.getClosestTraceroutes = function(msmId, prbId, timestamp, callback, context){\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            };\n\n\n            /**\n             * Get the closest hostname.bind and checks errors\n             *\n             * @method getClosestHostnameBind\n             * @param {Number} msmId The id of the measurement\n             * @param {Number} prbId The id of the probe\n             * @param {Number} timestamp A UNIX timestamp\n             * @param {Function} callback A function taking the retrieved data as input when it is ready\n             * @param {Object} context The context of the callback\n             */\n\n            this.getClosestHostnameBind = function(msmId, prbId, timestamp, callback, context){ // Just indirection for now\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            };\n\n        };\n\n        return AntiFloodConnector;\n    });\n","/**\n * Copyright 2014 - mcandela\n * Date: 06/06/14\n * Time: 17:17\n */\ndefine('dnsmon.connector.log-connector',[\n    \"dnsmon.lib.jquery-libs-amd\"\n], function($){\n\n    /**\n     * Connector is in charge of connecting the data-apis and providing a JSON format to the layers over.\n     *\n     * @class LogRestConnector\n     * @constructor\n     * @module connector.log-connector\n     */\n\n    var LogRestConnector = function(env){\n        var logStorageUrl, errorStorageUrl, appTag;\n\n        logStorageUrl = env.config.storageLogRestApiUrl;\n        errorStorageUrl = env.config.storageErrorRestApiUrl;\n\n        appTag = env.config.logAppTag;\n\n        /**\n         * Sends logs to the servers\n         *\n         *\n         * @method log\n         * @param {String} type The type of the log\n         * @param {String} log The body of the log\n         */\n\n        this.log = function(type, log){\n            this._persist(logStorageUrl, this._createJson(type, log));\n        };\n\n\n        /**\n         * Sends errors to the servers\n         *\n         *\n         * @method error\n         * @param {String} type The type of the error\n         * @param {String} error The body of the error\n         */\n\n        this.error = function(type, error){\n            this._persist(errorStorageUrl, this._createJson(type, error));\n        };\n\n\n        /**\n         * This method creates a json version of a log entry\n         *\n         *\n         * @method _createJson\n         * @private\n         * @param {String} type The type of the error\n         * @param {String} log The body of the error\n         */\n\n        this._createJson = function(type, log){\n            return {app: appTag, type: type, log: log};\n        };\n\n\n        /**\n         * This method handles the ajax call to POST the error to the server\n         *\n         *\n         * @method _persist\n         * @private\n         * @param {String} url The type of the error\n         * @param {String} json The body of the error\n         */\n\n        this._persist = function(url, json){\n            var xhr;\n\n            try {\n\n                xhr = $.ajax({\n                    type: \"POST\",\n                    url: url,\n                    data: json,\n                    crossDomain: true,\n                    dataType: 'json'\n                });\n\n                if (xhr && xhr.readyState>3 && xhr.readyState<4) {\n                    xhr.abort();\n                }\n\n            } catch(error) {\n            }\n        };\n\n    };\n\n\n    return LogRestConnector;\n});\n","/**\n * Created by mcandela on 23/01/14.\n */\n\ndefine('dnsmon.connector.facade',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.connector.anti-flood\",\n    \"dnsmon.env.params-manager\",\n    \"dnsmon.connector.log-connector\"\n], function(utils, Connector, paramsManager, LogRestConnector){\n\n    /**\n     * ConnectorFacade is the singleton Facade of the whole connector level.\n     * It provides high-level connectivity functions able to receive as input model objects and converting\n     * them in low-level parameters.\n     *\n     * @class ConnectorFacade\n     * @constructor\n     * @module connector\n     */\n\n    var ConnectorFacade = function(env){\n        var connector, indexedRows, logConnector;\n\n        connector = new Connector(env);\n        logConnector = new LogRestConnector(env);\n\n\n        /**\n         * From top to bottom: it provides a way to query the data-api with the current valid parameters.\n         *\n         * @method retrieveData\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.retrieveData = function(callback, context){\n\n            env.lastRequest = new Date();\n            indexedRows = null;\n            connector.retrieveData(env.params, function(data){\n                this.rows = data.rows;\n                this.group = data.group;\n\n                env.lastUpdate = new Date();\n                if (callback){\n                    callback.call(context, data);\n                }\n            }, this);\n\n\n        };\n\n        /** Get all the rows\n         *\n         * @method getRows\n         * @return {Array} A list of rows\n         */\n\n        this.getRows = function(){\n            if (!this.rows){\n                this.retrieveData();\n            }\n\n            return this.rows;\n        };\n\n\n        /** Get a row given an id\n         *\n         * @method getRowById\n         * @param {Number} id An id\n         * @return {Object} A row of the model layer\n         */\n\n        this.getRowById = function(id){\n            var rows, row;\n\n            if (!indexedRows){\n\n                rows = this.getRows();\n                indexedRows = {};\n\n                for (var n=0,length=rows.length; n<length; n++){\n                    row = rows[n];\n                    indexedRows[row.id] = row;\n                }\n\n            }\n            return indexedRows[id];\n        };\n\n\n        /** Get the group of the last query\n         *\n         * @method getGroup\n         * @return {Object} A group\n         */\n\n        this.getGroup = function(){\n            return this.group;\n        };\n\n\n        /** Get additional data-api URLs given a cell\n         *\n         * @method getCellDataUrls\n         * @param {Object} cell A cell object\n         * @return {Object} A map of URLs for the selected sample\n         */\n\n        this.getCellDataUrls = function(cell){\n            var listSampleUrls, urlTmp, row;\n\n            row = cell.row;\n            listSampleUrls = row.urlsMap.sample;\n\n            for (var n=0,length=listSampleUrls.length; n<length; n++){\n                urlTmp = listSampleUrls[n];\n\n                urlTmp.url = utils.setParam('format', 'json', urlTmp.url);\n\n                if (row.___type___ == \"probe\"){\n                    urlTmp.url = utils.setParam('prb_id', paramsManager.convertLocalToRemoteId(row.id), urlTmp.url);\n                }\n\n                urlTmp.url = utils.setParam('start', paramsManager.convertLocalToRemoteDate(cell.time), urlTmp.url);\n\n                if (cell.endTime){\n                    urlTmp.url = utils.setParam('stop', paramsManager.convertLocalToRemoteDate(cell.endTime), urlTmp.url);\n                }else{\n                    urlTmp.url = utils.setParam('stop', paramsManager.convertLocalToRemoteDate(new Date(cell.time.getTime() + (env.retrievedAggregationLevel * 1000))), urlTmp.url);\n                }\n            }\n\n            return listSampleUrls;\n        };\n\n\n        /** Get the url of the probes page\n         *\n         * @method getProbesPageUrl\n         * @param {Number} probeId The id of the probe\n         * @param {Object} params A parameters vector\n         * @return {String} An URL\n         */\n\n        this.getProbesPageUrl = function(probeId, params){\n            var row = this.getRowById(probeId);\n\n            return row.url;\n            //return 'https://atlas.ripe.net/dnsmon/probes/' + paramsManager.convertLocalToRemoteId(probeId)+ '?zone=' + paramsManager.convertLocalToRemoteId(params.root);\n        };\n\n\n        /** Get additional data-api URLs given a cell\n         *\n         * @method getDataUrls\n         * @param {Object} cell A cell object\n         * @return {Object} A map of URLs for the whole time window\n         */\n\n        this.getDataUrls = function(cell){\n            var listOverviewUrls, urlTmp, row;\n\n            row = cell.row;\n            listOverviewUrls = row.urlsMap.overview;\n\n            for (var n=0,length=listOverviewUrls.length; n<length; n++){\n                urlTmp = listOverviewUrls[n];\n\n                urlTmp.url = utils.setParam('format', 'json', urlTmp.url);\n\n                if (row.___type___ == \"probe\"){\n                    urlTmp.url = utils.setParam('prb_id', paramsManager.convertLocalToRemoteId(row.id), urlTmp.url);\n                }\n            }\n\n            return listOverviewUrls;\n        };\n\n\n        /** Get the DNS response, in a human readable format, given a cell\n         *\n         * @method getNativeDnsResult\n         * @param {Object} cell A cell object\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getNativeDnsResult = function(cell, callback, context){\n            var msmId, prbId, timestamp;\n\n            msmId = this._getMeasurementId(cell);\n            if (msmId) {\n                prbId = paramsManager.convertLocalToRemoteId(cell.row.id);\n                timestamp = paramsManager.convertLocalToRemoteDate(cell.time);\n                connector.getNativeDnsResult(msmId, prbId, timestamp, callback, context);\n            } else {\n                throw \"No DNS results collected for this measurement\";\n            }\n        };\n\n\n        /** Get the closest traceroutes given a cell\n         *\n         * @method getClosestTraceroutes\n         * @param {Object} cell A cell object\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestTraceroutes = function(cell, callback, context){\n            var msmId, prbId, timestamp, measurementType;\n\n            measurementType = \"traceroute\";\n\n            msmId = this._getMeasurementIdByType(cell, measurementType);\n            if (msmId){\n                prbId = paramsManager.convertLocalToRemoteId(cell.row.id);\n                timestamp = paramsManager.convertLocalToRemoteDate(cell.time);\n                connector.getClosestTraceroutes(msmId, prbId, timestamp, callback, context);\n            } else {\n                throw \"No traceroutes collected for this measurement\";\n            }\n        };\n\n        /**\n         * Get the closest hostname.bind and checks errors\n         *\n         * @method getClosestHostnameBind\n         * @param {Object} cell A cell object\n         * @param {Function} callback A function taking the retrieved data as input when it is ready\n         * @param {Object} context The context of the callback\n         */\n\n        this.getClosestHostnameBind = function(cell, callback, context){\n            var msmId, prbId, timestamp, measurementType;\n\n            measurementType = \"hostname_bind\";\n            msmId = this._getMeasurementIdByType(cell, measurementType);\n\n            if (msmId){\n                prbId = paramsManager.convertLocalToRemoteId(cell.row.id);\n                timestamp = paramsManager.convertLocalToRemoteDate(cell.time);\n\n                // No errors checks for now\n                connector.getClosestHostnameBind(msmId, prbId, timestamp, callback, context);\n            } else {\n                throw \"No traceroutes collected for this measurement\";\n            }\n        };\n\n\n\n        /** Get the measurement id given a cell\n         *\n         * @method _getMeasurementId\n         * @private\n         * @param {Object} cell A cell object\n         * @return {String} The measurement id\n         */\n\n        this._getMeasurementId = function(cell){\n            var dataUrls, urlItem;\n\n            dataUrls = this.getDataUrls(cell);\n\n            for (var n=0,length=dataUrls.length; n<length; n++){\n                urlItem = dataUrls[n];\n                if (urlItem.current == true){\n                    return urlItem.measurementId;\n                }\n            }\n\n            return null;\n        };\n\n\n        /** Get the DNS response, in a human readable format, given a cell\n         *\n         * @method _getMeasurementIdByType\n         * @private\n         * @param {Object} cell A cell object\n         * @param {String} type A valid type\n         * @return {Number} The measurement id\n         */\n\n        this._getMeasurementIdByType = function(cell, type){\n            var dataUrls, urlItem;\n\n            dataUrls = this.getDataUrls(cell);\n\n            for (var n=0,length=dataUrls.length; n<length; n++){\n                urlItem = dataUrls[n];\n\n                if (urlItem.type == type){\n                    return urlItem.measurementId;\n                }\n            }\n\n            return null;\n        };\n\n\n        /** Sends logs to the servers\n         *\n         * @method persistLog\n         * @param {String} type The type of the log\n         * @param {String} log The body of the log\n         */\n\n        this.persistLog = function(type, log){\n            var browserVersion;\n\n            if (env.config.persistLog) {\n                browserVersion = utils.getBrowserVersion();\n                logConnector.log(type, log + ' (browser: ' + browserVersion.name + ' ' + browserVersion.version.toString() + ')');\n            }\n\n        };\n\n\n        /** Sends errors to the servers\n         *\n         * @method persistError\n         * @param {String} type The type of the error\n         * @param {String} log The body of the error\n         */\n\n        this.persistError = function(type, log){\n            var browserVersion;\n\n            if (env.config.persistErrors) {\n                browserVersion = utils.getBrowserVersion();\n                logConnector.error(type, log + ' (browser: ' + browserVersion.name + ' ' + browserVersion.version.toString() + ', codeVersion: ' + env.version + ')');\n            }\n\n        };\n\n    };\n\n    return ConnectorFacade;\n});\n","/**\n * Created by mcandela on 10/01/14.\n */\n\ndefine('dnsmon.session.facade',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.lib.jquery-libs-amd\"\n], function(utils, $){\n\n    /**\n     * SessionManager is the layer providing all the functions to manage the session.\n     * It provides a transparent layer for the tool to store and retrieve parameters.\n     * The persistence can be provided (or not) by cookies or with any other possible server interaction.\n     *\n     * @class SessionManager\n     * @constructor\n     * @module session\n     */\n\n    var SessionManager = function(env){\n        var volatileValues, session, defaultSession, cookieSuffix, cookiePreSuffix, config, useLocalPersistence,\n            expireDate, localParamsChecked, initialisationSession;\n\n        config = env.config;\n        useLocalPersistence = config.useLocalPersistenceForSettings;\n        session = {};\n        expireDate = new Date((new Date()).getTime() + (config.localPersistenceValidityTimeMinutes * 60 * 1000)); // Expiration date for the persistence\n        localParamsChecked = false;\n\n        defaultSession = { // Pre-filled session with default values. Will be replaced by stored/permalink parameters\n            \"exclude-errors\": config.excludeErrorsByDefault\n        };\n\n        initialisationSession = {};// Contains the parameters coming from the embedding code. Will be replaced by permalink only\n\n        volatileValues = []; // Keys in this list are not stored persistently\n        cookiePreSuffix = \"dnsmon_\"; // A suffix to create a better scope for the cookies\n\n        //Compute the final suffix\n        cookieSuffix = utils.getInstanceSuffix(env.parentDom);\n        cookieSuffix = cookiePreSuffix + cookieSuffix + \"_\";\n\n\n        /**\n         * This method set a value for a session parameter expressed in the embedding code\n         *\n         * @method setInitialisationValues\n         * @input {String} key A key\n         * @input {String} value A value\n         */\n\n        this.setInitialisationValues = function(key, value){\n            initialisationSession[key] = value;\n        };\n\n\n        /**\n         * This method saves a session values if it is not in the volatileValues list\n         *\n         * @method saveValue\n         * @input {String} key A key\n         * @input {String} value A value\n         */\n\n        this.saveValue = function(key, value){\n            var keyString, valueString;\n\n            keyString = key.toString(); // Cast input to String\n            valueString = value.toString();\n\n            session[keyString] = valueString;\n\n            if (useLocalPersistence && utils.indexOf(keyString, volatileValues) == -1){ // The current item is not volatile\n                this._persistValue(keyString, valueString);\n            }\n        };\n\n\n        /**\n         * This method checks if the current values are different from the one stored locally\n         *\n         * @method saveValue\n         * @input {String} key A key\n         * @input {String} value A value\n         */\n\n        this._notLocalParams = function(){\n            var retrievedVersion;\n\n            for (var paramKey in session){\n\n                if (utils.indexOf(paramKey, volatileValues) == -1){\n                    retrievedVersion = this._retrieveValue(paramKey); // Do this after all the checks (it is expensive)\n\n                    if (retrievedVersion != null && retrievedVersion != '' + session[paramKey]){ // Different from the one contained locally\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n\n\n        /**\n         * This method returns a session value given a key. It considers defaults, persistents and temporary (e.g. permalinks) session values\n         *\n         * @method getValue\n         * @input {String} key A key\n         * @return {String} A value\n         */\n\n        this.getValue = function(key){\n            var keyString;\n\n            keyString = key.toString();\n\n            /*\n            * Priority order: 1) permalink, 2) embedding code, 3) local storage/cookies, 4) default values\n            */\n            if (session[keyString] == null && initialisationSession[key]){ // Lazy approach && the current item is imposed in the embedding code\n                utils.log(\"The session parameter \" + key + \" has been initialised with the value in the embedding code\", env.debugMode);\n                session[keyString] = initialisationSession[key];\n            }\n\n            if (useLocalPersistence && session[keyString] == null && utils.indexOf(keyString, volatileValues) == -1){ // Lazy approach && the current item is not volatile\n                session[keyString] = this._retrieveValue(keyString);\n            }\n\n            if (session[keyString] == null && defaultSession[keyString] != null){ // Lazy approach && there is a default value\n                session[keyString] = defaultSession[keyString];\n            }\n\n            if (localParamsChecked == false){\n                localParamsChecked = true;\n                if (this._notLocalParams()){\n                    env.mainView.showMessage(env.lang.notYourConfig);\n                }\n            }\n\n            return session[keyString];\n        };\n\n\n        /**\n         * This method saves a value locally\n         *\n         * @method _persistValue\n         * @private\n         * @input {String} key A key\n         * @return {Boolean} If true the value has been saved correctly\n         */\n\n        this._persistValue = function(key, value){\n            var saved;\n\n            try{\n                $.cookie(cookieSuffix + key, value, {expires: expireDate});\n                saved = true;\n            }catch(error){\n                utils.log(error, env.debugMode);\n                saved = false;\n            }\n\n            return saved;\n        };\n\n\n        /**\n         * This method reads a value saved locally\n         *\n         * @method _retrieveValue\n         * @private\n         * @input {String} key A key\n         * @return {String} A value\n         */\n\n        this._retrieveValue = function(key){\n            var value;\n\n            try{\n                value = $.cookie(cookieSuffix + key);\n            }catch(error){\n                utils.log(error, env.debugMode);\n                value = null;\n            }\n\n            return value;\n        };\n\n\n        /**\n         * This method returns the actual session\n         *\n         * @method getSession\n         * @return {Object} A vector of values describing the actual session\n         */\n\n        this.getSession = function(){\n            for (var key in defaultSession){\n                if (!session.hasOwnProperty(key)){\n                    session[key] = this.getValue(key);\n                }\n            }\n\n            return session;\n        };\n\n\n        /**\n         * This method imposes temporary a session\n         *\n         * @method setSession\n         * @input {Object} newSession A vector of values describing a session\n         */\n\n        this.setSession = function(newSession){\n            session = newSession;\n        };\n\n    };\n\n    return SessionManager;\n});\n","/**\n * Created by mcandela on 11/12/13.\n */\n\ndefine('dnsmon.env.history-manager',[\n    \"dnsmon.env.utils\",\n    \"dnsmon.env.params-manager\"\n], function(utils, paramsManager){\n\n    /**\n     * HistoryManager provides all the functions to manage the history and the back/forward browser interactions.\n     *\n     * @class HistoryManager\n     * @constructor\n     * @module environment\n     */\n\n    var HistoryManager = function(env){\n        var config, pushNewStatuses, keyPrefix, $this, initialisationHistory, initialisationSession, isInitialStatus,\n            isFirstAutoUpdateAction;\n\n        $this = this;\n        config = env.config;\n        pushNewStatuses = true;\n        isInitialStatus = true;\n        isFirstAutoUpdateAction = true;\n\n        keyPrefix = utils.getInstanceSuffix(env.parentDom);\n\n\n        /**\n         * This method initialises the module. It pushes in the history and updates the URL with the initialisation query\n         * and session parameters.\n         *\n         * @method init\n         */\n\n        this.init = function(){\n            if (config.historyInUrlAtInitialisation){\n                this.update();\n            }else{\n                initialisationHistory = utils.lightClone(env.params);\n                initialisationSession = utils.lightClone(env.session.getSession());\n            }\n        };\n\n\n        /**\n         * This method pushes in the history and updates the URL with the actual query and session parameters.\n         *\n         * @method update\n         */\n\n        this.update = function(){\n            var params, currentState, session;\n\n            if (config.historyInUrl && pushNewStatuses){\n                params = env.params;\n                session = env.session.getSession();\n\n                isInitialStatus = false;\n\n                currentState = this._generateStateUrl(params, session);\n\n                if (!env.isUpdatedPeriodicallyActive || isFirstAutoUpdateAction) { // Is not an update action or is the first update action\n\n                    window.history.pushState({}, 'dnsmon_state', currentState);\n                    isFirstAutoUpdateAction = !env.isUpdatedPeriodicallyActive;\n\n                }else{\n\n                    window.history.replaceState({}, 'dnsmon_state', currentState);\n\n                }\n            }else{\n                pushNewStatuses = true;\n            }\n        };\n\n\n        /**\n         * This method pushes in the history and updates the URL with the actual query and session parameters.\n         *\n         * @method _generateStateUrl\n         * @private\n         *\n         */\n\n        this._generateStateUrl = function(params, session){\n            return '?' + this._generateParametersUrl(params, this._generateSessionUrl(session)).split('?')[1]; // Remove the host\n        };\n\n\n        /**\n         * This method creates an URL with all the session parameters.\n         *\n         * @method _generateSessionUrl\n         * @private\n         * @input {Object} session A vector of session parameters\n         * @return {String} The updated URL\n         */\n\n        this._generateSessionUrl = function(session){\n\n            var actualUrl;\n\n            actualUrl = utils.getCurrentUrl();\n\n            for (var key in session){\n                actualUrl = utils.setParam(keyPrefix + '.session.' + key, session[key], actualUrl);\n            }\n\n            return actualUrl;\n        };\n\n\n        /**\n         * This method updates the given URL with all the query parameters.\n         *\n         * @method _generateParametersUrl\n         * @private\n         * @input {Object} params A vector of query parameters\n         * @input {String} sessionUrl An URL\n         * @return {String} The updated URL\n         */\n\n        this._generateParametersUrl = function(params, sessionUrl){\n            var externalParams, actualUrl;\n\n            actualUrl = sessionUrl;\n            externalParams = paramsManager.fromInternalToExternal(params);\n\n            for (var key in externalParams){\n                actualUrl = utils.setParam(keyPrefix + '.' + key, externalParams[key], actualUrl);\n            }\n\n            return actualUrl;\n        };\n\n\n        /**\n         * This method is triggered every time there is a back/forward event in the browser. It recovers and applies\n         * the history.\n         *\n         * @method updateStatusFromUrl\n         */\n\n        this.updateStatusFromUrl = function(){\n\n            if (!isInitialStatus){ //Chrome and Safari workaround (html5 specs: onpopstate should not be triggered at initialisation time\n                pushNewStatuses = false;\n\n                if (env.isUpdatedPeriodicallyActive){// Disable the keep updated if active\n                    env.mainView.controlPanel.keepUpdatedActive(false);\n                }\n\n                if (!$this.setStatusFromUrl()){ // If the status has not been set, set the status stored at initialisation time\n\n                    env.params = initialisationHistory;\n                    env.session.setSession(initialisationSession);\n                }\n\n                env.mainView.redraw(function(){ // Redraw the scene\n                    env.mainView.breadcrumbs.pushHistory(this._createHistory(env.params));\n                }, $this);\n            }\n\n        };\n\n\n        /**\n         * This method applies the current permalink to the scene.\n         *\n         * @method setStatusFromUrl\n         */\n\n        this.setStatusFromUrl = function(){\n            var params, session, paramsAndSession;\n\n            paramsAndSession = utils.getUrlParameters(env.parentDom);\n\n            if (paramsAndSession != null && paramsAndSession.type != null){\n                session = paramsAndSession.session;\n                env.params.selectedRows = [];\n                params = paramsManager.mergeParams(env.params, paramsManager.fromExternalToInternal(paramsAndSession));\n\n                env.params = params;\n                env.session.setSession(session);\n\n                env.initialHistory = this._createHistory(params);\n\n                return true;\n            }\n\n            return false;\n        };\n\n\n        /**\n         * This method re-creates a navigation history given a vector of query parameters.\n         * So it allows the user to share also a navigation history by sharing a permalink.\n         *\n         * @method _createHistory\n         * @private\n         */\n\n        this._createHistory = function(params){\n            var history;\n\n            history = [];\n\n            switch(params.type){\n\n                case \"servers\":\n\n                    history.push({\n                        id: params.group + \"\",\n                        params: utils.lightClone(params)\n                    });\n\n                    break;\n\n                case \"probes\":\n\n                    history.push({\n                        id: params.root + \"\",\n                        params: {\n                            type: \"servers\",\n                            root: null,\n                            group: params.root + \"\",\n                            selectedRows: []\n                        }\n                    });\n\n                    history.push({\n                        id: params.group + \"\",\n                        params: utils.lightClone(params)\n                    });\n\n                    break;\n            }\n\n            return history;\n        };\n\n\n        if (config.allowPermalinks){\n            this.setStatusFromUrl();\n        }\n\n        if (config.historyInUrl){\n            window.onpopstate = this.updateStatusFromUrl;\n        }\n\n    };\n\n    return HistoryManager;\n});\n","/**\n * Created with JetBrains WebStorm.\n * User: mcandela\n * Date: 9/20/13\n * Time: 11:01 AM\n * To change this template use File | Settings | File Templates.\n */\n\n\n/**\n * Some require.js configurations\n */\n\nrequirejs.config({\n    paths:{\n        /* environment */\n        \"dnsmon.env\": DNSMON_ENVIRONMENT_URL + \"environment\",\n        \"dnsmon.env.utils\": DNSMON_ENVIRONMENT_URL + \"utils\",\n        \"dnsmon.env.config\": DNSMON_ENVIRONMENT_URL + \"config\",\n        \"dnsmon.env.params-manager\": DNSMON_ENVIRONMENT_URL + \"ParamsManager\",\n        \"dnsmon.env.history-manager\": DNSMON_ENVIRONMENT_URL + \"HistoryManager\",\n\n        \"dnsmon.env.languages.en\": DNSMON_ENVIRONMENT_URL + \"languages/lang-en\",\n\n        /* libs */\n        \"dnsmon.lib.d3\": DNSMON_LIB_URL + \"d3.v3.amd\",\n        \"dnsmon.lib.jquery\": (typeof DNSMON_JQUERY_GLOBAL_DECLARED_URL != 'undefined') ? DNSMON_JQUERY_GLOBAL_DECLARED_URL : DNSMON_LIB_URL + \"jquery.min\",\n\n        \"dnsmon.lib.jquery-ui\": (typeof DNSMON_JQUERY_UI_GLOBAL_DECLARED_URL != 'undefined') ? DNSMON_JQUERY_UI_GLOBAL_DECLARED_URL : DNSMON_LIB_URL + \"jquery-ui.min\",\n        \"dnsmon.lib.jquery-ui.timepicker\": DNSMON_LIB_URL + \"jquery-ui.timepicker\",\n\n        \"dnsmon.lib.jquery.cookie\": DNSMON_LIB_URL + \"jquery.cookie\",\n        \"dnsmon.lib.date-format\": DNSMON_LIB_URL + \"dateFormat\",\n        \"dnsmon.lib.atlas-traceroute-printer\": DNSMON_LIB_URL + \"atlas.traceroute\",\n        \"dnsmon.lib.jquery-libs\": DNSMON_LIB_URL + \"libs-dist\",\n        \"dnsmon.lib.jquery-libs-amd\": DNSMON_LIB_URL + \"jquery-libs-amd\",\n\n        /* model */\n        \"dnsmon.model.cell\": DNSMON_MODEL_URL + \"Cell\",\n        \"dnsmon.model.row\": DNSMON_MODEL_URL + \"Row\",\n\n\n        /* view */\n        \"dnsmon.view.main\": DNSMON_VIEW_URL + \"MainView\",\n        \"dnsmon.view.control-panel\": DNSMON_VIEW_URL + \"ControlPanelView\",\n        \"dnsmon.view.full-screen\": DNSMON_VIEW_URL + \"FullScreenView\",\n        \"dnsmon.view.breadcrumbs\": DNSMON_VIEW_URL + \"BreadcrumbsView\",\n        \"dnsmon.view.ordinal-axis\": DNSMON_VIEW_URL + \"OrdinalAxisView\",\n        \"dnsmon.view.pop-up\": DNSMON_VIEW_URL + \"PopUpView\",\n        \"dnsmon.view.template-manager\": DNSMON_VIEW_URL + \"TemplateManagerView\",\n        \"dnsmon.view.time-axis\": DNSMON_VIEW_URL + \"TimeAxisView\",\n        \"dnsmon.view.time-overview\": DNSMON_VIEW_URL + \"TimeOverviewView\",\n\n\n        /* view.svg */\n        \"dnsmon.view.svg.chart\": DNSMON_VIEW_URL + \"svg/SvgChartView\",\n        \"dnsmon.view.svg.container\": DNSMON_VIEW_URL + \"svg/SvgContainerView\",\n        \"dnsmon.view.svg.time-axis\": DNSMON_VIEW_URL + \"svg/SvgTimeAxisView\",\n        \"dnsmon.view.svg.ordinal-axis\": DNSMON_VIEW_URL + \"svg/SvgOrdinalAxisView\",\n\n\n        /* controller */\n        \"dnsmon.controller.gesture-manager\": DNSMON_CONTROLLER_URL + \"GesturesManager\",\n        \"dnsmon.controller.time\": DNSMON_CONTROLLER_URL + \"TimeController\",\n\n\n        /* connector */\n        \"dnsmon.connector.facade\": DNSMON_CONNECTOR_URL + \"ConnectorFacade\",\n        \"dnsmon.connector.aggregation-level\": DNSMON_CONNECTOR_URL + \"AggregationLevelConnector\",\n        \"dnsmon.connector.anti-flood\": DNSMON_CONNECTOR_URL + \"AntiFloodConnector\",\n        \"dnsmon.connector.filter\": DNSMON_CONNECTOR_URL + \"FilterConnector\",\n        \"dnsmon.connector.log-connector\": DNSMON_CONNECTOR_URL + \"log/LogRestConnector\",\n\n\n        /* connector.atlas */\n        \"dnsmon.connector.atlas.rest\": DNSMON_CONNECTOR_URL + \"atlas/RestConnectorAtlas\",\n        \"dnsmon.connector.atlas.cache\": DNSMON_CONNECTOR_URL + \"atlas/CacheConnectorAtlas\",\n        \"dnsmon.connector.atlas.error-handler\": DNSMON_CONNECTOR_URL + \"atlas/ErrorsHandlerConnectorAtlas\",\n        \"dnsmon.connector.atlas.isolation-level\": DNSMON_CONNECTOR_URL + \"atlas/IsolationLevelConnectorAtlas\",\n\n\n        /* session */\n        \"dnsmon.session.facade\": DNSMON_SESSION_URL + \"SessionManager\"\n    },\n    shim:{\n        \"dnsmon.lib.jquery-ui\": {\n            deps: [\"dnsmon.lib.jquery\"]\n        },\n\n        \"dnsmon.lib.jquery.cookie\": {\n            deps: [\"dnsmon.lib.jquery\"]\n        },\n\n        \"dnsmon.lib.jquery-ui.timepicker\": {\n            deps: [\"dnsmon.lib.jquery-ui\"]\n        }\n    }\n});\n\n\n\ndefine('dnsmon/dnsmon-loader',[\n\n    \"dnsmon.env.utils\",\n    \"dnsmon.env.config\",\n    \"dnsmon.env.languages.en\",\n    \"dnsmon.lib.jquery-libs-amd\",\n    \"dnsmon.env.params-manager\",\n    \"dnsmon.view.main\",\n    \"dnsmon.connector.facade\",\n    \"dnsmon.session.facade\",\n    \"dnsmon.env.history-manager\"\n\n], function(\n    utils,\n    config,\n    language,\n    $,\n    paramsManager,\n    MainView,\n    ConnectorFacade,\n    SessionFacade,\n    HistoryManager\n    ){\n\n    var DNSmon = function(instance){\n        var env, internalParams, mergedParams, emptyParamVector, instanceParams, queryParams, parentDom, stylesLoaded,\n            cssListenerInterval, cssListenerTimeout, cssListener;\n\n        /*\n         * Load required stylesheets\n         */\n        stylesLoaded = document.styleSheets.length;\n        utils.loadCss(DNSMON_VIEW_URL + \"css/dnsmon_style.css\");\n        utils.loadCss(\"https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css\");\n\n        /*\n         * Access to the instance\n         */\n        instanceParams = instance.instanceParams;\n        queryParams = instance.queryParams;\n        parentDom = instance.domElement;\n\n        // STUFF FOR THE DEMO\n        window.grouping = utils.getUrlParam(\"grouping\") == \"true\";\n        window.dynamicHeight = utils.getUrlParam(\"dheight\") == \"true\";\n\n        /*\n         * Convert params\n         */\n        if (queryParams){\n            emptyParamVector = paramsManager.createInternalParamVector();\n            internalParams = paramsManager.fromExternalToInternal(queryParams);\n            mergedParams = paramsManager.mergeParams(emptyParamVector, internalParams);\n        }\n\n        /*\n         * Init Dependency Injection Vector\n         */\n        env = {\n            \"version\": \"15.10.15.2\",\n            \"widgetUrl\": DNSMON_WIDGET_URL,\n            \"parentDom\": parentDom, //HASH THIS\n            \"document\": utils.encapsulateDom($(document)),\n            \"config\": config,\n            \"params\": mergedParams,\n            \"lang\": language,\n            \"maxHeight\": ((instanceParams.hasOwnProperty(\"maxHeight\")) ? instanceParams.maxHeight : Math.max($(document).height(), config.chartMaxHeight)),\n            \"minHeight\": ((instanceParams.hasOwnProperty(\"minHeight\")) ? instanceParams.minHeight : config.chartMinHeight),\n            \"callbacks\": {\n                change: ((instanceParams.hasOwnProperty(\"change\")) ? [instanceParams.change] : []),\n                load: ((instanceParams.hasOwnProperty(\"load\")) ? [instanceParams.load] : [])\n            },\n\n            \"showFilter\":  ((instanceParams.hasOwnProperty(\"showFilter\")) ? instanceParams.showFilter : config.showFilterDefaultValue),\n            \"debugMode\": ((instanceParams.hasOwnProperty(\"debugMode\")) ? instanceParams.debugMode : (utils.getUrlParam('debug_mode') == 'true')),\n            \"activeKeys\": ((instanceParams.hasOwnProperty(\"activeKeys\")) ? instanceParams.activeKeys : config.activeKeysByDefault),\n            \"activeMouseZoom\": ((instanceParams.hasOwnProperty(\"activeMouseZoom\")) ? instanceParams.activeMouseZoom : config.activeMouseZoomByDefault),\n            \"activeGestures\": ((instanceParams.hasOwnProperty(\"activeGestures\")) ? instanceParams.activeGestures : config.activeGesturesByDefault),\n            \"localCacheActive\": ((instanceParams.hasOwnProperty(\"localCacheActive\")) ? instanceParams.localCacheActive : config.localCacheActiveByDefault),\n            \"grouping\": ((instanceParams.hasOwnProperty(\"grouping\")) ? instanceParams.grouping : config.groupingByDefault),\n            \"timeEventsActive\": config.timeEventsActiveByDefault,\n            \"isUpdatedPeriodicallyActive\": ((instanceParams.hasOwnProperty(\"autoUpdate\")) ? instanceParams.autoUpdate : config.autoUpdateActiveByDefault),\n            \"fullScreenActive\": ((instanceParams.hasOwnProperty(\"fullScreen\")) ? instanceParams.fullScreen : config.fullScreenActiveByDefault),\n            \"colorRanges\": ((instanceParams.hasOwnProperty(\"colorRanges\")) ? instanceParams.colorRanges : null)\n        };\n\n\n        /*\n         * Initialize Point of Access to Packages\n         */\n        env.mainView = new MainView(env); //Representation Facade\n        env.connector = new ConnectorFacade(env); //Connector Facade\n        env.session = new SessionFacade(env); //Session Facade\n        env.history = new HistoryManager(env); //History Manager\n\n\n        /*\n         * Check if stylesheets are loaded\n         */\n        cssListenerInterval = 50; //50 ms\n        cssListenerTimeout = 10000; // 10 secs\n        cssListener = setInterval(function(){\n\n            if(document.styleSheets.length >= stylesLoaded + 2){\n\n                clearInterval(cssListener);\n                utils.logErrors(env.connector.persistError); //Persist errors\n                env.mainView.init(parentDom, instanceParams);\n\n            }else{\n                if (cssListenerTimeout <= 0){\n                    clearInterval(cssListener);\n                    console.log(\"It is not possible to load stylesheets.\");\n                }\n                cssListenerTimeout -= cssListenerInterval;\n            }\n        }, cssListenerInterval);\n\n\n        /**\n         * A set of methods exposed outside\n         */\n        return {\n\n            setParams: function(params){\n                var newParams;\n\n                newParams = paramsManager.fromExternalToInternal(params);\n                env.params = paramsManager.mergeParams(env.params, newParams);\n                env.mainView.redraw();\n            },\n\n            on: function(type, callback){\n                if (!env.callbacks[type]){\n                    env.callbacks[type] = [];\n                }\n                env.callbacks[type].push(callback);\n            },\n\n            off: function(type){\n                env.callbacks[type] = [];\n            },\n\n            getParams: function(){\n                return paramsManager.fromInternalToExternal(env.params);\n            },\n\n            getEnvironment: function(){\n                return env;\n            }\n\n        };\n\n    };\n\n    return DNSmon;\n});\n\n\n"]}